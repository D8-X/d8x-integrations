{"id":"077d2e53b78b39c9921da5f233708e6c","_format":"hh-sol-build-info-1","solcVersion":"0.8.19","solcLongVersion":"0.8.19+commit.7dd6d404","input":{"language":"Solidity","sources":{"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20Upgradeable {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"},"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20Upgradeable.sol\";\nimport \"../../../utils/AddressUpgradeable.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20Upgradeable {\n    using AddressUpgradeable for address;\n\n    function safeTransfer(\n        IERC20Upgradeable token,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    function safeTransferFrom(\n        IERC20Upgradeable token,\n        address from,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(\n        IERC20Upgradeable token,\n        address spender,\n        uint256 value\n    ) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        require(\n            (value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    function safeIncreaseAllowance(\n        IERC20Upgradeable token,\n        address spender,\n        uint256 value\n    ) internal {\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    function safeDecreaseAllowance(\n        IERC20Upgradeable token,\n        address spender,\n        uint256 value\n    ) internal {\n        unchecked {\n            uint256 oldAllowance = token.allowance(address(this), spender);\n            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\n            uint256 newAllowance = oldAllowance - value;\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20Upgradeable token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        if (returndata.length > 0) {\n            // Return data is optional\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary AddressUpgradeable {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20.sol\";\nimport \"./extensions/IERC20Metadata.sol\";\nimport \"../../utils/Context.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20, IERC20Metadata {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * The default value of {decimals} is 18. To select a different value for\n     * {decimals} you should overload it.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\n     * overridden;\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) public virtual override returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, amount);\n        _transfer(from, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, _allowances[owner][spender] + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        uint256 currentAllowance = _allowances[owner][spender];\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(owner, spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `sender` to `recipient`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     */\n    function _transfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {\n        require(from != address(0), \"ERC20: transfer from the zero address\");\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, amount);\n\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[from] = fromBalance - amount;\n        }\n        _balances[to] += amount;\n\n        emit Transfer(from, to, amount);\n\n        _afterTokenTransfer(from, to, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        _balances[account] += amount;\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n        }\n        _totalSupply -= amount;\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Spend `amount` form the allowance of `owner` toward `spender`.\n     *\n     * Does not update the allowance amount in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Might emit an {Approval} event.\n     */\n    function _spendAllowance(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\n            unchecked {\n                _approve(owner, spender, currentAllowance - amount);\n            }\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"},"contracts/IClientOrder.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity 0.8.19;\n\n/**\n * @title Trader/Broker facing order struct\n * @notice this order struct is sent to the limit order book and converted into an IPerpetualOrder\n */\ninterface IClientOrder {\n    struct ClientOrder {\n        uint24 iPerpetualId; // unique id of the perpetual\n        int128 fLimitPrice; // order will not execute if realized price is above (buy) or below (sell) this price\n        uint16 leverageTDR; // leverage, set to 0 if deposit margin and trade separate; format: two-digit integer (e.g., 12.34 -> 1234)\n        uint32 executionTimestamp; // the order will not be executed before this timestamp, allows TWAP orders\n        uint32 flags; // Order-flags are specified in OrderFlags.sol\n        uint32 iDeadline; // order will not be executed after this deadline\n        address brokerAddr; // can be empty, address of the broker\n        int128 fTriggerPrice; // trigger price for stop-orders|0. Order can be executed if the mark price is below this price (sell order) or above (buy)\n        int128 fAmount; // signed amount of base-currency. Will be rounded to lot size\n        bytes32 parentChildDigest1; // see notice in LimitOrderBook.sol\n        address traderAddr; // address of the trader\n        bytes32 parentChildDigest2; // see notice in LimitOrderBook.sol\n        uint16 brokerFeeTbps; // broker fee in tenth of a basis point\n        bytes brokerSignature; // signature, can be empty if no brokerAddr provided\n        //address executorAddr; <- will be set by LimitOrderBook\n        //uint64 submittedBlock <- will be set by LimitOrderBook\n    }\n}\n"},"contracts/ILiquidityPoolData.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity 0.8.19;\n\ninterface ILiquidityPoolData {\n\n    struct LiquidityPoolData {\n            bool isRunning; // state\n            uint8 iPerpetualCount; // state\n            uint8 id; // parameter: index, starts from 1\n            int32 fCeilPnLShare; // parameter: cap on the share of PnL allocated to liquidity providers\n            uint8 marginTokenDecimals; // parameter: decimals of margin token, inferred from token contract\n            uint16 iTargetPoolSizeUpdateTime; //parameter: timestamp in seconds. How often we update the pool's target size\n            address marginTokenAddress; //parameter: address of the margin token\n            // -----\n            uint64 prevAnchor; // state: keep track of timestamp since last withdrawal was initiated\n            int128 fRedemptionRate; // state: used for settlement in case of AMM default\n            address shareTokenAddress; // parameter\n            // -----\n            int128 fPnLparticipantsCashCC; // state: addLiquidity/withdrawLiquidity + profit/loss - rebalance\n            int128 fTargetAMMFundSize; // state: target liquidity for all perpetuals in pool (sum)\n            // -----\n            int128 fDefaultFundCashCC; // state: profit/loss\n            int128 fTargetDFSize; // state: target default fund size for all perpetuals in pool\n            // -----\n            int128 fBrokerCollateralLotSize; // param:how much collateral do brokers deposit when providing \"1 lot\" (not trading lot)\n            uint128 prevTokenAmount; // state\n            // -----\n            uint128 nextTokenAmount; // state\n            uint128 totalSupplyShareToken; // state\n            // -----\n            int128 fBrokerFundCashCC; // state: amount of cash in broker fund\n    }\n\n}"},"contracts/OnChainTrader.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity 0.8.19;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\";\n\nimport \"./IClientOrder.sol\";\nimport \"./ILiquidityPoolData.sol\";\n\n/**\n * @title Example contract to interact with D8X perpetuals on-chain\n * @notice\n * - This contract acts as a trader. The contract is ownable;\n *   Trade executions are permissioned. The margin tokens are required\n *   to be owned by the contract.\n * - D8X Perpetuals use ABDK 128x128 number format. This contract has an interface that uses\n *   a signed decimal-18 convention (decimal number 1 maps to decimal-18 number 1e18).\n * - Ensure the perpetuals-contract is allowed to spend this contracts margin tokens (use approveAmount)\n * - Send orders to order book via postOrder\n * - Check positions using function getMarginAccount\n */\n\n\ninterface OrderBookContractInterface {\n    function postOrder(IClientOrder.ClientOrder calldata _order, bytes calldata _signature)\n        external;\n}\n\ninterface PerpetualsContractInterface {\n    \n    function getMarginAccount(uint24 _perpetualId, address _traderAddress)\n        external\n        view\n        returns (MarginAccount memory);\n\n    function getMaxSignedOpenTradeSizeForPos(\n        uint24 _perpetualId,\n        int128 _fCurrentTraderPos,\n        bool _isBuy\n    ) external view returns (int128);\n\n    function getOrderBookAddress(uint24 _perpetualId) external view returns (address);\n    function getLiquidityPool(uint8 _poolId)\n        external\n        view\n        returns (ILiquidityPoolData.LiquidityPoolData memory);\n}\n\n/**\n * @notice  D8X Perpetual Data structure to store user margin information.\n */\nstruct MarginAccount {\n    int128 fLockedInValueQC; // unrealized value locked-in when trade occurs in\n    int128 fCashCC; // cash in collateral currency (base, quote, or quanto)\n    int128 fPositionBC; // position in base currency (e.g., 1 BTC for BTCUSD)\n    int128 fUnitAccumulatedFundingStart; // accumulated funding rate\n    uint64 iLastOpenTimestamp; // timestamp in seconds when the position was last opened/increased\n    uint16 feeTbps; // exchange fee in tenth of a basis point\n    uint16 brokerFeeTbps; // broker fee in tenth of a basis point\n    bytes16 positionId; // unique id for the position (for given trader, and perpetual). Current position, zero otherwise.\n}\n\n/**\n * @notice  Data structure to return simplified and relevant margin information.\n */\nstruct D18MarginAccount {\n    int256 lockedInValueQCD18; // unrealized value locked-in when trade occurs in\n    int256 cashCCD18; // cash in collateral currency (base, quote, or quanto)\n    int256 positionSizeBCD18; // position in base currency (e.g., 1 BTC for BTCUSD)\n    bytes16 positionId; // unique id for the position (for given trader, and perpetual). Current position, zero otherwise.\n}\n\ncontract OnChainTrader is Ownable {\n    using SafeERC20Upgradeable for IERC20Upgradeable;\n\n    event PerpetualOrderSubmitFailed(string reason);\n    event PerpetualOrderSubmitSuccess(int256 amountDec18, uint16 leverageTDR);\n    event PerpetualAdded(uint24 perpetualId, address lobAddr, address mgnTknAddrOfPool);\n    event MarginTokenSent(uint24 perpetualId, address to, uint256 amountDecN);\n    address public immutable perpetualProxy;\n    int256 private constant DECIMALS = 10**18;\n    int128 private constant ONE_64x64 = 2**64;\n    int128 private constant MIN_64x64 = -0x80000000000000000000000000000000;\n    int128 private constant MAX_64x64 = 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF;\n    int128 private constant TEN_64x64 = 0xa0000000000000000;\n\n    mapping (uint24 => address) public orderBookOfPerpetual;//limit order book addr\n    \n    // each perpetual is in a pool. Perpetuals in a pool share the margin token\n    mapping (uint8 => address) public mgnTknAddrOfPool;\n\n    constructor(\n        address _perpetualProxy\n    ) Ownable() {\n        perpetualProxy = _perpetualProxy;\n    }\n\n    /**\n     * Anyone add a perpetual. Needs to be set once per perpetual.\n     * The function sets the order book address for an existing\n     * perpetual-id and ensures the margin token address is stored. \n     * @param _iPerpetualId id of the perpetual to be traded\n     */\n    function addPerpetual(uint24 _iPerpetualId) external {\n        // set order book address\n        address lobAddr = PerpetualsContractInterface(perpetualProxy).getOrderBookAddress(_iPerpetualId);\n        orderBookOfPerpetual[_iPerpetualId] = lobAddr;\n        // register margin token\n        uint8 poolId = uint8(_iPerpetualId/100_000);\n        if(mgnTknAddrOfPool[poolId] == address(0)) {\n            // set margin token address for pool\n            ILiquidityPoolData.LiquidityPoolData memory lp = \n                PerpetualsContractInterface(perpetualProxy).getLiquidityPool(poolId);\n            mgnTknAddrOfPool[poolId] = lp.marginTokenAddress;\n        }\n        emit PerpetualAdded(_iPerpetualId, lobAddr, mgnTknAddrOfPool[poolId]);\n    }\n\n    /**\n     * Approve the margin-token to be spent by perpetuals contract.\n     * Required to trade.\n     * @param _amount spend amount\n     */\n    function approveAmountForPerpetualMgnTkn(uint256 _amount, uint24 _iPerpetualId) external {\n        uint8 poolId = uint8(_iPerpetualId/100_000);\n        address mgnTkn = mgnTknAddrOfPool[poolId];\n        require(mgnTkn!=address(0), \"set ob addrs\");\n        IERC20(mgnTkn).approve(perpetualProxy, _amount);\n    }\n\n    /**\n     * Post an order to the order book. Order will be executed by\n     * external \"executors\".\n     * * Available order flags:\n     *  uint32 internal constant MASK_CLOSE_ONLY = 0x80000000;\n     *  uint32 internal constant MASK_MARKET_ORDER = 0x40000000;\n     *  uint32 internal constant MASK_STOP_ORDER = 0x20000000;\n     *  uint32 internal constant MASK_FILL_OR_KILL = 0x10000000;\n     *  uint32 internal constant MASK_KEEP_POS_LEVERAGE = 0x08000000;\n     *  uint32 internal constant MASK_LIMIT_ORDER = 0x04000000;\n     * @param _iPerpetualId perpetual id for which we execute\n     * @param _amountDec18 signed amount to be traded in base currency\n     * @param _leverageTDR leverage two-digit-integer), e.g. 210 for 2.1x leverage\n     * @param _flags order-flags, can be left 0 for a market order\n     * @return true if posting order succeeded\n     */\n    function postOrder(uint24 _iPerpetualId, int256 _amountDec18, uint16 _leverageTDR, uint32 _flags) onlyOwner external returns (bool) {\n         address orderBookAddr = orderBookOfPerpetual[_iPerpetualId];\n         require(orderBookAddr!=address(0), \"order book unknown\");\n        int128 fTradeAmount = _fromDec18(_amountDec18);\n        if (_flags==0) {\n             _flags = 0x40000000;//market order\n        }\n        IClientOrder.ClientOrder memory order;\n        order.flags = _flags;\n        order.iPerpetualId = _iPerpetualId;\n        order.traderAddr = address(this);\n        order.fAmount = fTradeAmount;\n        order.fLimitPrice = fTradeAmount > 0 ? MAX_64x64 : int128(0);\n        order.leverageTDR = _leverageTDR; // 0 if deposit and trade separate\n        order.iDeadline = uint32(block.timestamp + 86400 * 3);\n        order.executionTimestamp = uint32(block.timestamp);\n\n        // submit order\n        try OrderBookContractInterface(orderBookAddr).postOrder(order, bytes(\"\")) {\n            emit PerpetualOrderSubmitSuccess(_amountDec18, _leverageTDR);\n            return true;\n        } catch Error(string memory reason) {\n            emit PerpetualOrderSubmitFailed(reason);\n            return false;\n        }\n    }\n\n    function transferMarginCollateralTo(uint24 _iPerpetualId) onlyOwner external {\n        uint8 poolId = uint8(_iPerpetualId/100_000);\n        address mgnTknAddr = mgnTknAddrOfPool[poolId];\n        IERC20Upgradeable marginToken = IERC20Upgradeable(mgnTknAddr);\n        uint256 balance = marginToken.balanceOf(address(this));\n        // transfer the margin token to the user\n        marginToken.safeTransfer(msg.sender, balance);\n        emit MarginTokenSent(_iPerpetualId, msg.sender, balance);\n    }\n\n    /**\n     * Return margin account information in decimal 18 format\n     * @param _iPerpetualId id of perpetual \n     */\n    function getMarginAccount(uint24 _iPerpetualId) external view returns (D18MarginAccount memory) {\n        MarginAccount memory acc = PerpetualsContractInterface(perpetualProxy).getMarginAccount(\n            _iPerpetualId,\n            address(this)\n        );\n        D18MarginAccount memory accD18;\n        accD18.lockedInValueQCD18 = toDec18(acc.fLockedInValueQC); // unrealized value locked-in when trade occmurs: price * position size\n        accD18.cashCCD18 = toDec18(acc.fCashCC); // cash in collateral currency (base, quote, or quanto)\n        accD18.positionSizeBCD18 = toDec18(acc.fPositionBC); // position in base currency (e.g., 1 BTC for BTCUSD)\n        accD18.positionId = acc.positionId; // unique id for the position (for given trader, and perpetual).\n        return accD18;\n    }\n\n    /**\n     * Get maximal trade amount for the contract accounting for its current position\n     * @param _iPerpetualId id of perpetual\n     * @param isBuy true if we go long, false if we go short\n     * @return signed maximal trade size (negative if resulting position is short, positive otherwise)\n     */\n    function getMaxTradeAmount(uint24 _iPerpetualId, bool isBuy) external view returns (int256) {\n        MarginAccount memory acc = PerpetualsContractInterface(perpetualProxy).getMarginAccount(\n            _iPerpetualId,\n            address(this)\n        );\n        int128 fSize = PerpetualsContractInterface(perpetualProxy).getMaxSignedOpenTradeSizeForPos(\n            _iPerpetualId,\n            acc.fPositionBC,\n            isBuy\n        );\n\n        return toDec18(fSize);\n    }\n\n    /**\n     * Convert signed decimal-18 number to ABDK-128x128 format\n     * @param x number decimal-18\n     * @return ABDK-128x128 number\n     */\n    function _fromDec18(int256 x) internal pure returns (int128) {\n        int256 result = (x * ONE_64x64) / DECIMALS;\n        require(x >= MIN_64x64 && x <= MAX_64x64, \"result out of range\");\n        return int128(result);\n    }\n\n    /**\n     * Convert ABDK-128x128 format to signed decimal-18 number\n     * @param x number in ABDK-128x128 format\n     * @return decimal 18 (signed)\n     */\n    function toDec18(int128 x) internal pure returns (int256) {\n        return (int256(x) * DECIMALS) / ONE_64x64;\n    }\n\n    /**\n     * Convert signed 256-bit integer number into signed 64.64-bit fixed point\n     * number.  Revert on overflow.\n     *\n     * @param x signed 256-bit integer number\n     * @return signed 64.64-bit fixed point number\n     */\n    function _fromInt(int256 x) internal pure returns (int128) {\n        require(x >= -0x8000000000000000 && x <= 0x7FFFFFFFFFFFFFFF, \"ABDK.fromInt\");\n        return int128(x << 64);\n    }\n}\n"}},"settings":{"optimizer":{"enabled":true,"runs":512},"outputSelection":{"*":{"*":["storageLayout","abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"sources":{"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol","exportedSymbols":{"IERC20Upgradeable":[77]},"id":78,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"106:23:0"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Upgradeable","contractDependencies":[],"contractKind":"interface","documentation":{"id":2,"nodeType":"StructuredDocumentation","src":"131:70:0","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":77,"linearizedBaseContracts":[77],"name":"IERC20Upgradeable","nameLocation":"212:17:0","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3,"nodeType":"StructuredDocumentation","src":"236:66:0","text":" @dev Returns the amount of tokens in existence."},"functionSelector":"18160ddd","id":8,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"316:11:0","nodeType":"FunctionDefinition","parameters":{"id":4,"nodeType":"ParameterList","parameters":[],"src":"327:2:0"},"returnParameters":{"id":7,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8,"src":"353:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5,"name":"uint256","nodeType":"ElementaryTypeName","src":"353:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"352:9:0"},"scope":77,"src":"307:55:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":9,"nodeType":"StructuredDocumentation","src":"368:72:0","text":" @dev Returns the amount of tokens owned by `account`."},"functionSelector":"70a08231","id":16,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"454:9:0","nodeType":"FunctionDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11,"mutability":"mutable","name":"account","nameLocation":"472:7:0","nodeType":"VariableDeclaration","scope":16,"src":"464:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"464:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"463:17:0"},"returnParameters":{"id":15,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16,"src":"504:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13,"name":"uint256","nodeType":"ElementaryTypeName","src":"504:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"503:9:0"},"scope":77,"src":"445:68:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":17,"nodeType":"StructuredDocumentation","src":"519:202:0","text":" @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":26,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"735:8:0","nodeType":"FunctionDefinition","parameters":{"id":22,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19,"mutability":"mutable","name":"to","nameLocation":"752:2:0","nodeType":"VariableDeclaration","scope":26,"src":"744:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":18,"name":"address","nodeType":"ElementaryTypeName","src":"744:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":21,"mutability":"mutable","name":"amount","nameLocation":"764:6:0","nodeType":"VariableDeclaration","scope":26,"src":"756:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":20,"name":"uint256","nodeType":"ElementaryTypeName","src":"756:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"743:28:0"},"returnParameters":{"id":25,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":26,"src":"790:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":23,"name":"bool","nodeType":"ElementaryTypeName","src":"790:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"789:6:0"},"scope":77,"src":"726:70:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":27,"nodeType":"StructuredDocumentation","src":"802:264:0","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":36,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1080:9:0","nodeType":"FunctionDefinition","parameters":{"id":32,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29,"mutability":"mutable","name":"owner","nameLocation":"1098:5:0","nodeType":"VariableDeclaration","scope":36,"src":"1090:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":28,"name":"address","nodeType":"ElementaryTypeName","src":"1090:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":31,"mutability":"mutable","name":"spender","nameLocation":"1113:7:0","nodeType":"VariableDeclaration","scope":36,"src":"1105:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":30,"name":"address","nodeType":"ElementaryTypeName","src":"1105:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1089:32:0"},"returnParameters":{"id":35,"nodeType":"ParameterList","parameters":[{"constant":false,"id":34,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":36,"src":"1145:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":33,"name":"uint256","nodeType":"ElementaryTypeName","src":"1145:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1144:9:0"},"scope":77,"src":"1071:83:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":37,"nodeType":"StructuredDocumentation","src":"1160:642:0","text":" @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":46,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"1816:7:0","nodeType":"FunctionDefinition","parameters":{"id":42,"nodeType":"ParameterList","parameters":[{"constant":false,"id":39,"mutability":"mutable","name":"spender","nameLocation":"1832:7:0","nodeType":"VariableDeclaration","scope":46,"src":"1824:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":38,"name":"address","nodeType":"ElementaryTypeName","src":"1824:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":41,"mutability":"mutable","name":"amount","nameLocation":"1849:6:0","nodeType":"VariableDeclaration","scope":46,"src":"1841:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":40,"name":"uint256","nodeType":"ElementaryTypeName","src":"1841:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1823:33:0"},"returnParameters":{"id":45,"nodeType":"ParameterList","parameters":[{"constant":false,"id":44,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":46,"src":"1875:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":43,"name":"bool","nodeType":"ElementaryTypeName","src":"1875:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1874:6:0"},"scope":77,"src":"1807:74:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":47,"nodeType":"StructuredDocumentation","src":"1887:287:0","text":" @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":58,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2188:12:0","nodeType":"FunctionDefinition","parameters":{"id":54,"nodeType":"ParameterList","parameters":[{"constant":false,"id":49,"mutability":"mutable","name":"from","nameLocation":"2218:4:0","nodeType":"VariableDeclaration","scope":58,"src":"2210:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":48,"name":"address","nodeType":"ElementaryTypeName","src":"2210:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":51,"mutability":"mutable","name":"to","nameLocation":"2240:2:0","nodeType":"VariableDeclaration","scope":58,"src":"2232:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":50,"name":"address","nodeType":"ElementaryTypeName","src":"2232:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":53,"mutability":"mutable","name":"amount","nameLocation":"2260:6:0","nodeType":"VariableDeclaration","scope":58,"src":"2252:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":52,"name":"uint256","nodeType":"ElementaryTypeName","src":"2252:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2200:72:0"},"returnParameters":{"id":57,"nodeType":"ParameterList","parameters":[{"constant":false,"id":56,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":58,"src":"2291:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":55,"name":"bool","nodeType":"ElementaryTypeName","src":"2291:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2290:6:0"},"scope":77,"src":"2179:118:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"anonymous":false,"documentation":{"id":59,"nodeType":"StructuredDocumentation","src":"2303:158:0","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":67,"name":"Transfer","nameLocation":"2472:8:0","nodeType":"EventDefinition","parameters":{"id":66,"nodeType":"ParameterList","parameters":[{"constant":false,"id":61,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"2497:4:0","nodeType":"VariableDeclaration","scope":67,"src":"2481:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":60,"name":"address","nodeType":"ElementaryTypeName","src":"2481:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":63,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"2519:2:0","nodeType":"VariableDeclaration","scope":67,"src":"2503:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":62,"name":"address","nodeType":"ElementaryTypeName","src":"2503:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":65,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"2531:5:0","nodeType":"VariableDeclaration","scope":67,"src":"2523:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":64,"name":"uint256","nodeType":"ElementaryTypeName","src":"2523:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2480:57:0"},"src":"2466:72:0"},{"anonymous":false,"documentation":{"id":68,"nodeType":"StructuredDocumentation","src":"2544:148:0","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":76,"name":"Approval","nameLocation":"2703:8:0","nodeType":"EventDefinition","parameters":{"id":75,"nodeType":"ParameterList","parameters":[{"constant":false,"id":70,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"2728:5:0","nodeType":"VariableDeclaration","scope":76,"src":"2712:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":69,"name":"address","nodeType":"ElementaryTypeName","src":"2712:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":72,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"2751:7:0","nodeType":"VariableDeclaration","scope":76,"src":"2735:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":71,"name":"address","nodeType":"ElementaryTypeName","src":"2735:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":74,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"2768:5:0","nodeType":"VariableDeclaration","scope":76,"src":"2760:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":73,"name":"uint256","nodeType":"ElementaryTypeName","src":"2760:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2711:63:0"},"src":"2697:78:0"}],"scope":78,"src":"202:2575:0","usedErrors":[]}],"src":"106:2672:0"},"id":0},"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol","exportedSymbols":{"AddressUpgradeable":[544],"IERC20Upgradeable":[77],"SafeERC20Upgradeable":[301]},"id":302,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":79,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"100:23:1"},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol","file":"../IERC20Upgradeable.sol","id":80,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":302,"sourceUnit":78,"src":"125:34:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol","file":"../../../utils/AddressUpgradeable.sol","id":81,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":302,"sourceUnit":545,"src":"160:47:1","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SafeERC20Upgradeable","contractDependencies":[],"contractKind":"library","documentation":{"id":82,"nodeType":"StructuredDocumentation","src":"209:457:1","text":" @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."},"fullyImplemented":true,"id":301,"linearizedBaseContracts":[301],"name":"SafeERC20Upgradeable","nameLocation":"675:20:1","nodeType":"ContractDefinition","nodes":[{"global":false,"id":85,"libraryName":{"id":83,"name":"AddressUpgradeable","nameLocations":["708:18:1"],"nodeType":"IdentifierPath","referencedDeclaration":544,"src":"708:18:1"},"nodeType":"UsingForDirective","src":"702:37:1","typeName":{"id":84,"name":"address","nodeType":"ElementaryTypeName","src":"731:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},{"body":{"id":107,"nodeType":"Block","src":"858:103:1","statements":[{"expression":{"arguments":[{"id":96,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":88,"src":"888:5:1","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$77","typeString":"contract IERC20Upgradeable"}},{"arguments":[{"expression":{"expression":{"id":99,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":88,"src":"918:5:1","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$77","typeString":"contract IERC20Upgradeable"}},"id":100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"924:8:1","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":26,"src":"918:14:1","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"933:8:1","memberName":"selector","nodeType":"MemberAccess","src":"918:23:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":102,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":90,"src":"943:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":103,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":92,"src":"947:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":97,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"895:3:1","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":98,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"899:18:1","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"895:22:1","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":104,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"895:58:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20Upgradeable_$77","typeString":"contract IERC20Upgradeable"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":95,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":300,"src":"868:19:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$77_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20Upgradeable,bytes memory)"}},"id":105,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"868:86:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":106,"nodeType":"ExpressionStatement","src":"868:86:1"}]},"id":108,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransfer","nameLocation":"754:12:1","nodeType":"FunctionDefinition","parameters":{"id":93,"nodeType":"ParameterList","parameters":[{"constant":false,"id":88,"mutability":"mutable","name":"token","nameLocation":"794:5:1","nodeType":"VariableDeclaration","scope":108,"src":"776:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$77","typeString":"contract IERC20Upgradeable"},"typeName":{"id":87,"nodeType":"UserDefinedTypeName","pathNode":{"id":86,"name":"IERC20Upgradeable","nameLocations":["776:17:1"],"nodeType":"IdentifierPath","referencedDeclaration":77,"src":"776:17:1"},"referencedDeclaration":77,"src":"776:17:1","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$77","typeString":"contract IERC20Upgradeable"}},"visibility":"internal"},{"constant":false,"id":90,"mutability":"mutable","name":"to","nameLocation":"817:2:1","nodeType":"VariableDeclaration","scope":108,"src":"809:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":89,"name":"address","nodeType":"ElementaryTypeName","src":"809:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":92,"mutability":"mutable","name":"value","nameLocation":"837:5:1","nodeType":"VariableDeclaration","scope":108,"src":"829:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":91,"name":"uint256","nodeType":"ElementaryTypeName","src":"829:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"766:82:1"},"returnParameters":{"id":94,"nodeType":"ParameterList","parameters":[],"src":"858:0:1"},"scope":301,"src":"745:216:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":133,"nodeType":"Block","src":"1106:113:1","statements":[{"expression":{"arguments":[{"id":121,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"1136:5:1","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$77","typeString":"contract IERC20Upgradeable"}},{"arguments":[{"expression":{"expression":{"id":124,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"1166:5:1","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$77","typeString":"contract IERC20Upgradeable"}},"id":125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1172:12:1","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":58,"src":"1166:18:1","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1185:8:1","memberName":"selector","nodeType":"MemberAccess","src":"1166:27:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":127,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":113,"src":"1195:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":128,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":115,"src":"1201:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":129,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":117,"src":"1205:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":122,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1143:3:1","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":123,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1147:18:1","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"1143:22:1","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":130,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1143:68:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20Upgradeable_$77","typeString":"contract IERC20Upgradeable"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":120,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":300,"src":"1116:19:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$77_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20Upgradeable,bytes memory)"}},"id":131,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1116:96:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":132,"nodeType":"ExpressionStatement","src":"1116:96:1"}]},"id":134,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"976:16:1","nodeType":"FunctionDefinition","parameters":{"id":118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":111,"mutability":"mutable","name":"token","nameLocation":"1020:5:1","nodeType":"VariableDeclaration","scope":134,"src":"1002:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$77","typeString":"contract IERC20Upgradeable"},"typeName":{"id":110,"nodeType":"UserDefinedTypeName","pathNode":{"id":109,"name":"IERC20Upgradeable","nameLocations":["1002:17:1"],"nodeType":"IdentifierPath","referencedDeclaration":77,"src":"1002:17:1"},"referencedDeclaration":77,"src":"1002:17:1","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$77","typeString":"contract IERC20Upgradeable"}},"visibility":"internal"},{"constant":false,"id":113,"mutability":"mutable","name":"from","nameLocation":"1043:4:1","nodeType":"VariableDeclaration","scope":134,"src":"1035:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":112,"name":"address","nodeType":"ElementaryTypeName","src":"1035:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":115,"mutability":"mutable","name":"to","nameLocation":"1065:2:1","nodeType":"VariableDeclaration","scope":134,"src":"1057:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":114,"name":"address","nodeType":"ElementaryTypeName","src":"1057:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":117,"mutability":"mutable","name":"value","nameLocation":"1085:5:1","nodeType":"VariableDeclaration","scope":134,"src":"1077:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":116,"name":"uint256","nodeType":"ElementaryTypeName","src":"1077:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"992:104:1"},"returnParameters":{"id":119,"nodeType":"ParameterList","parameters":[],"src":"1106:0:1"},"scope":301,"src":"967:252:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":177,"nodeType":"Block","src":"1596:497:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":146,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":142,"src":"1845:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1854:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1845:10:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":149,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1844:12:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":154,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1885:4:1","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20Upgradeable_$301","typeString":"library SafeERC20Upgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20Upgradeable_$301","typeString":"library SafeERC20Upgradeable"}],"id":153,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1877:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":152,"name":"address","nodeType":"ElementaryTypeName","src":"1877:7:1","typeDescriptions":{}}},"id":155,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1877:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":156,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":140,"src":"1892:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":150,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":138,"src":"1861:5:1","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$77","typeString":"contract IERC20Upgradeable"}},"id":151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1867:9:1","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":36,"src":"1861:15:1","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1861:39:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":158,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1904:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1861:44:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":160,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1860:46:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1844:62:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365","id":162,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1920:56:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25","typeString":"literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""},"value":"SafeERC20: approve from non-zero to non-zero allowance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25","typeString":"literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""}],"id":145,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1823:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":163,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1823:163:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":164,"nodeType":"ExpressionStatement","src":"1823:163:1"},{"expression":{"arguments":[{"id":166,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":138,"src":"2016:5:1","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$77","typeString":"contract IERC20Upgradeable"}},{"arguments":[{"expression":{"expression":{"id":169,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":138,"src":"2046:5:1","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$77","typeString":"contract IERC20Upgradeable"}},"id":170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2052:7:1","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":46,"src":"2046:13:1","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2060:8:1","memberName":"selector","nodeType":"MemberAccess","src":"2046:22:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":172,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":140,"src":"2070:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":173,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":142,"src":"2079:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":167,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2023:3:1","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":168,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2027:18:1","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"2023:22:1","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":174,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2023:62:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20Upgradeable_$77","typeString":"contract IERC20Upgradeable"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":165,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":300,"src":"1996:19:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$77_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20Upgradeable,bytes memory)"}},"id":175,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1996:90:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":176,"nodeType":"ExpressionStatement","src":"1996:90:1"}]},"documentation":{"id":135,"nodeType":"StructuredDocumentation","src":"1225:249:1","text":" @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."},"id":178,"implemented":true,"kind":"function","modifiers":[],"name":"safeApprove","nameLocation":"1488:11:1","nodeType":"FunctionDefinition","parameters":{"id":143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":138,"mutability":"mutable","name":"token","nameLocation":"1527:5:1","nodeType":"VariableDeclaration","scope":178,"src":"1509:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$77","typeString":"contract IERC20Upgradeable"},"typeName":{"id":137,"nodeType":"UserDefinedTypeName","pathNode":{"id":136,"name":"IERC20Upgradeable","nameLocations":["1509:17:1"],"nodeType":"IdentifierPath","referencedDeclaration":77,"src":"1509:17:1"},"referencedDeclaration":77,"src":"1509:17:1","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$77","typeString":"contract IERC20Upgradeable"}},"visibility":"internal"},{"constant":false,"id":140,"mutability":"mutable","name":"spender","nameLocation":"1550:7:1","nodeType":"VariableDeclaration","scope":178,"src":"1542:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":139,"name":"address","nodeType":"ElementaryTypeName","src":"1542:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":142,"mutability":"mutable","name":"value","nameLocation":"1575:5:1","nodeType":"VariableDeclaration","scope":178,"src":"1567:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":141,"name":"uint256","nodeType":"ElementaryTypeName","src":"1567:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1499:87:1"},"returnParameters":{"id":144,"nodeType":"ParameterList","parameters":[],"src":"1596:0:1"},"scope":301,"src":"1479:614:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":213,"nodeType":"Block","src":"2226:194:1","statements":[{"assignments":[189],"declarations":[{"constant":false,"id":189,"mutability":"mutable","name":"newAllowance","nameLocation":"2244:12:1","nodeType":"VariableDeclaration","scope":213,"src":"2236:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":188,"name":"uint256","nodeType":"ElementaryTypeName","src":"2236:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":200,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":194,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2283:4:1","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20Upgradeable_$301","typeString":"library SafeERC20Upgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20Upgradeable_$301","typeString":"library SafeERC20Upgradeable"}],"id":193,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2275:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":192,"name":"address","nodeType":"ElementaryTypeName","src":"2275:7:1","typeDescriptions":{}}},"id":195,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2275:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":196,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":183,"src":"2290:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":190,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":181,"src":"2259:5:1","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$77","typeString":"contract IERC20Upgradeable"}},"id":191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2265:9:1","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":36,"src":"2259:15:1","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":197,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2259:39:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":198,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":185,"src":"2301:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2259:47:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2236:70:1"},{"expression":{"arguments":[{"id":202,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":181,"src":"2336:5:1","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$77","typeString":"contract IERC20Upgradeable"}},{"arguments":[{"expression":{"expression":{"id":205,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":181,"src":"2366:5:1","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$77","typeString":"contract IERC20Upgradeable"}},"id":206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2372:7:1","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":46,"src":"2366:13:1","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2380:8:1","memberName":"selector","nodeType":"MemberAccess","src":"2366:22:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":208,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":183,"src":"2390:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":209,"name":"newAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":189,"src":"2399:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":203,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2343:3:1","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":204,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2347:18:1","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"2343:22:1","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":210,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2343:69:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20Upgradeable_$77","typeString":"contract IERC20Upgradeable"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":201,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":300,"src":"2316:19:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$77_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20Upgradeable,bytes memory)"}},"id":211,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2316:97:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":212,"nodeType":"ExpressionStatement","src":"2316:97:1"}]},"id":214,"implemented":true,"kind":"function","modifiers":[],"name":"safeIncreaseAllowance","nameLocation":"2108:21:1","nodeType":"FunctionDefinition","parameters":{"id":186,"nodeType":"ParameterList","parameters":[{"constant":false,"id":181,"mutability":"mutable","name":"token","nameLocation":"2157:5:1","nodeType":"VariableDeclaration","scope":214,"src":"2139:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$77","typeString":"contract IERC20Upgradeable"},"typeName":{"id":180,"nodeType":"UserDefinedTypeName","pathNode":{"id":179,"name":"IERC20Upgradeable","nameLocations":["2139:17:1"],"nodeType":"IdentifierPath","referencedDeclaration":77,"src":"2139:17:1"},"referencedDeclaration":77,"src":"2139:17:1","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$77","typeString":"contract IERC20Upgradeable"}},"visibility":"internal"},{"constant":false,"id":183,"mutability":"mutable","name":"spender","nameLocation":"2180:7:1","nodeType":"VariableDeclaration","scope":214,"src":"2172:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":182,"name":"address","nodeType":"ElementaryTypeName","src":"2172:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":185,"mutability":"mutable","name":"value","nameLocation":"2205:5:1","nodeType":"VariableDeclaration","scope":214,"src":"2197:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":184,"name":"uint256","nodeType":"ElementaryTypeName","src":"2197:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2129:87:1"},"returnParameters":{"id":187,"nodeType":"ParameterList","parameters":[],"src":"2226:0:1"},"scope":301,"src":"2099:321:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":261,"nodeType":"Block","src":"2553:370:1","statements":[{"id":260,"nodeType":"UncheckedBlock","src":"2563:354:1","statements":[{"assignments":[225],"declarations":[{"constant":false,"id":225,"mutability":"mutable","name":"oldAllowance","nameLocation":"2595:12:1","nodeType":"VariableDeclaration","scope":260,"src":"2587:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":224,"name":"uint256","nodeType":"ElementaryTypeName","src":"2587:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":234,"initialValue":{"arguments":[{"arguments":[{"id":230,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2634:4:1","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20Upgradeable_$301","typeString":"library SafeERC20Upgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20Upgradeable_$301","typeString":"library SafeERC20Upgradeable"}],"id":229,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2626:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":228,"name":"address","nodeType":"ElementaryTypeName","src":"2626:7:1","typeDescriptions":{}}},"id":231,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2626:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":232,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"2641:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":226,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":217,"src":"2610:5:1","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$77","typeString":"contract IERC20Upgradeable"}},"id":227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2616:9:1","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":36,"src":"2610:15:1","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":233,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2610:39:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2587:62:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":236,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":225,"src":"2671:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":237,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":221,"src":"2687:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2671:21:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f","id":239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2694:43:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a","typeString":"literal_string \"SafeERC20: decreased allowance below zero\""},"value":"SafeERC20: decreased allowance below zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a","typeString":"literal_string \"SafeERC20: decreased allowance below zero\""}],"id":235,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2663:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":240,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2663:75:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":241,"nodeType":"ExpressionStatement","src":"2663:75:1"},{"assignments":[243],"declarations":[{"constant":false,"id":243,"mutability":"mutable","name":"newAllowance","nameLocation":"2760:12:1","nodeType":"VariableDeclaration","scope":260,"src":"2752:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":242,"name":"uint256","nodeType":"ElementaryTypeName","src":"2752:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":247,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":244,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":225,"src":"2775:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":245,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":221,"src":"2790:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2775:20:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2752:43:1"},{"expression":{"arguments":[{"id":249,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":217,"src":"2829:5:1","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$77","typeString":"contract IERC20Upgradeable"}},{"arguments":[{"expression":{"expression":{"id":252,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":217,"src":"2859:5:1","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$77","typeString":"contract IERC20Upgradeable"}},"id":253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2865:7:1","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":46,"src":"2859:13:1","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2873:8:1","memberName":"selector","nodeType":"MemberAccess","src":"2859:22:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":255,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"2883:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":256,"name":"newAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":243,"src":"2892:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":250,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2836:3:1","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":251,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2840:18:1","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"2836:22:1","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":257,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2836:69:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20Upgradeable_$77","typeString":"contract IERC20Upgradeable"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":248,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":300,"src":"2809:19:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$77_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20Upgradeable,bytes memory)"}},"id":258,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2809:97:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":259,"nodeType":"ExpressionStatement","src":"2809:97:1"}]}]},"id":262,"implemented":true,"kind":"function","modifiers":[],"name":"safeDecreaseAllowance","nameLocation":"2435:21:1","nodeType":"FunctionDefinition","parameters":{"id":222,"nodeType":"ParameterList","parameters":[{"constant":false,"id":217,"mutability":"mutable","name":"token","nameLocation":"2484:5:1","nodeType":"VariableDeclaration","scope":262,"src":"2466:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$77","typeString":"contract IERC20Upgradeable"},"typeName":{"id":216,"nodeType":"UserDefinedTypeName","pathNode":{"id":215,"name":"IERC20Upgradeable","nameLocations":["2466:17:1"],"nodeType":"IdentifierPath","referencedDeclaration":77,"src":"2466:17:1"},"referencedDeclaration":77,"src":"2466:17:1","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$77","typeString":"contract IERC20Upgradeable"}},"visibility":"internal"},{"constant":false,"id":219,"mutability":"mutable","name":"spender","nameLocation":"2507:7:1","nodeType":"VariableDeclaration","scope":262,"src":"2499:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":218,"name":"address","nodeType":"ElementaryTypeName","src":"2499:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":221,"mutability":"mutable","name":"value","nameLocation":"2532:5:1","nodeType":"VariableDeclaration","scope":262,"src":"2524:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":220,"name":"uint256","nodeType":"ElementaryTypeName","src":"2524:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2456:87:1"},"returnParameters":{"id":223,"nodeType":"ParameterList","parameters":[],"src":"2553:0:1"},"scope":301,"src":"2426:497:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":299,"nodeType":"Block","src":"3387:636:1","statements":[{"assignments":[272],"declarations":[{"constant":false,"id":272,"mutability":"mutable","name":"returndata","nameLocation":"3749:10:1","nodeType":"VariableDeclaration","scope":299,"src":"3736:23:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":271,"name":"bytes","nodeType":"ElementaryTypeName","src":"3736:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":281,"initialValue":{"arguments":[{"id":278,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":268,"src":"3790:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564","id":279,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3796:34:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b","typeString":"literal_string \"SafeERC20: low-level call failed\""},"value":"SafeERC20: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b","typeString":"literal_string \"SafeERC20: low-level call failed\""}],"expression":{"arguments":[{"id":275,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":266,"src":"3770:5:1","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$77","typeString":"contract IERC20Upgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20Upgradeable_$77","typeString":"contract IERC20Upgradeable"}],"id":274,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3762:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":273,"name":"address","nodeType":"ElementaryTypeName","src":"3762:7:1","typeDescriptions":{}}},"id":276,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3762:14:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3777:12:1","memberName":"functionCall","nodeType":"MemberAccess","referencedDeclaration":390,"src":"3762:27:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$attached_to$_t_address_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":280,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3762:69:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3736:95:1"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":282,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":272,"src":"3845:10:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3856:6:1","memberName":"length","nodeType":"MemberAccess","src":"3845:17:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":284,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3865:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3845:21:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":298,"nodeType":"IfStatement","src":"3841:176:1","trueBody":{"id":297,"nodeType":"Block","src":"3868:149:1","statements":[{"expression":{"arguments":[{"arguments":[{"id":289,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":272,"src":"3940:10:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":291,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3953:4:1","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":290,"name":"bool","nodeType":"ElementaryTypeName","src":"3953:4:1","typeDescriptions":{}}}],"id":292,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"3952:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}],"expression":{"id":287,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3929:3:1","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":288,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3933:6:1","memberName":"decode","nodeType":"MemberAccess","src":"3929:10:1","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":293,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3929:30:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564","id":294,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3961:44:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd","typeString":"literal_string \"SafeERC20: ERC20 operation did not succeed\""},"value":"SafeERC20: ERC20 operation did not succeed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd","typeString":"literal_string \"SafeERC20: ERC20 operation did not succeed\""}],"id":286,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3921:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":295,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3921:85:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":296,"nodeType":"ExpressionStatement","src":"3921:85:1"}]}}]},"documentation":{"id":263,"nodeType":"StructuredDocumentation","src":"2929:372:1","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."},"id":300,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturn","nameLocation":"3315:19:1","nodeType":"FunctionDefinition","parameters":{"id":269,"nodeType":"ParameterList","parameters":[{"constant":false,"id":266,"mutability":"mutable","name":"token","nameLocation":"3353:5:1","nodeType":"VariableDeclaration","scope":300,"src":"3335:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$77","typeString":"contract IERC20Upgradeable"},"typeName":{"id":265,"nodeType":"UserDefinedTypeName","pathNode":{"id":264,"name":"IERC20Upgradeable","nameLocations":["3335:17:1"],"nodeType":"IdentifierPath","referencedDeclaration":77,"src":"3335:17:1"},"referencedDeclaration":77,"src":"3335:17:1","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$77","typeString":"contract IERC20Upgradeable"}},"visibility":"internal"},{"constant":false,"id":268,"mutability":"mutable","name":"data","nameLocation":"3373:4:1","nodeType":"VariableDeclaration","scope":300,"src":"3360:17:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":267,"name":"bytes","nodeType":"ElementaryTypeName","src":"3360:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3334:44:1"},"returnParameters":{"id":270,"nodeType":"ParameterList","parameters":[],"src":"3387:0:1"},"scope":301,"src":"3306:717:1","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":302,"src":"667:3358:1","usedErrors":[]}],"src":"100:3926:1"},"id":1},"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[544]},"id":545,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":303,"literals":["solidity","^","0.8",".1"],"nodeType":"PragmaDirective","src":"101:23:2"},{"abstract":false,"baseContracts":[],"canonicalName":"AddressUpgradeable","contractDependencies":[],"contractKind":"library","documentation":{"id":304,"nodeType":"StructuredDocumentation","src":"126:67:2","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":544,"linearizedBaseContracts":[544],"name":"AddressUpgradeable","nameLocation":"202:18:2","nodeType":"ContractDefinition","nodes":[{"body":{"id":318,"nodeType":"Block","src":"1252:254:2","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":312,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":307,"src":"1476:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1484:4:2","memberName":"code","nodeType":"MemberAccess","src":"1476:12:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1489:6:2","memberName":"length","nodeType":"MemberAccess","src":"1476:19:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1498:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1476:23:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":311,"id":317,"nodeType":"Return","src":"1469:30:2"}]},"documentation":{"id":305,"nodeType":"StructuredDocumentation","src":"227:954:2","text":" @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="},"id":319,"implemented":true,"kind":"function","modifiers":[],"name":"isContract","nameLocation":"1195:10:2","nodeType":"FunctionDefinition","parameters":{"id":308,"nodeType":"ParameterList","parameters":[{"constant":false,"id":307,"mutability":"mutable","name":"account","nameLocation":"1214:7:2","nodeType":"VariableDeclaration","scope":319,"src":"1206:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":306,"name":"address","nodeType":"ElementaryTypeName","src":"1206:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1205:17:2"},"returnParameters":{"id":311,"nodeType":"ParameterList","parameters":[{"constant":false,"id":310,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":319,"src":"1246:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":309,"name":"bool","nodeType":"ElementaryTypeName","src":"1246:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1245:6:2"},"scope":544,"src":"1186:320:2","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":352,"nodeType":"Block","src":"2494:241:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":330,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2520:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_AddressUpgradeable_$544","typeString":"library AddressUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_AddressUpgradeable_$544","typeString":"library AddressUpgradeable"}],"id":329,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2512:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":328,"name":"address","nodeType":"ElementaryTypeName","src":"2512:7:2","typeDescriptions":{}}},"id":331,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2512:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2526:7:2","memberName":"balance","nodeType":"MemberAccess","src":"2512:21:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":333,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":324,"src":"2537:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2512:31:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e6365","id":335,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2545:31:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""},"value":"Address: insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""}],"id":327,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2504:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":336,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2504:73:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":337,"nodeType":"ExpressionStatement","src":"2504:73:2"},{"assignments":[339,null],"declarations":[{"constant":false,"id":339,"mutability":"mutable","name":"success","nameLocation":"2594:7:2","nodeType":"VariableDeclaration","scope":352,"src":"2589:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":338,"name":"bool","nodeType":"ElementaryTypeName","src":"2589:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":346,"initialValue":{"arguments":[{"hexValue":"","id":344,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2637:2:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":340,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":322,"src":"2607:9:2","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2617:4:2","memberName":"call","nodeType":"MemberAccess","src":"2607:14:2","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":342,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":324,"src":"2629:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2607:29:2","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":345,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2607:33:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2588:52:2"},{"expression":{"arguments":[{"id":348,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":339,"src":"2658:7:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564","id":349,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2667:60:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""},"value":"Address: unable to send value, recipient may have reverted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""}],"id":347,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2650:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":350,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2650:78:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":351,"nodeType":"ExpressionStatement","src":"2650:78:2"}]},"documentation":{"id":320,"nodeType":"StructuredDocumentation","src":"1512:906:2","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":353,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"2432:9:2","nodeType":"FunctionDefinition","parameters":{"id":325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":322,"mutability":"mutable","name":"recipient","nameLocation":"2458:9:2","nodeType":"VariableDeclaration","scope":353,"src":"2442:25:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":321,"name":"address","nodeType":"ElementaryTypeName","src":"2442:15:2","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":324,"mutability":"mutable","name":"amount","nameLocation":"2477:6:2","nodeType":"VariableDeclaration","scope":353,"src":"2469:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":323,"name":"uint256","nodeType":"ElementaryTypeName","src":"2469:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2441:43:2"},"returnParameters":{"id":326,"nodeType":"ParameterList","parameters":[],"src":"2494:0:2"},"scope":544,"src":"2423:312:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":369,"nodeType":"Block","src":"3566:84:2","statements":[{"expression":{"arguments":[{"id":364,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":356,"src":"3596:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":365,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":358,"src":"3604:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564","id":366,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3610:32:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""},"value":"Address: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""}],"id":363,"name":"functionCall","nodeType":"Identifier","overloadedDeclarations":[370,390],"referencedDeclaration":390,"src":"3583:12:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":367,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3583:60:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":362,"id":368,"nodeType":"Return","src":"3576:67:2"}]},"documentation":{"id":354,"nodeType":"StructuredDocumentation","src":"2741:731:2","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"},"id":370,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3486:12:2","nodeType":"FunctionDefinition","parameters":{"id":359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":356,"mutability":"mutable","name":"target","nameLocation":"3507:6:2","nodeType":"VariableDeclaration","scope":370,"src":"3499:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":355,"name":"address","nodeType":"ElementaryTypeName","src":"3499:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":358,"mutability":"mutable","name":"data","nameLocation":"3528:4:2","nodeType":"VariableDeclaration","scope":370,"src":"3515:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":357,"name":"bytes","nodeType":"ElementaryTypeName","src":"3515:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3498:35:2"},"returnParameters":{"id":362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":361,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":370,"src":"3552:12:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":360,"name":"bytes","nodeType":"ElementaryTypeName","src":"3552:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3551:14:2"},"scope":544,"src":"3477:173:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":389,"nodeType":"Block","src":"4019:76:2","statements":[{"expression":{"arguments":[{"id":383,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":373,"src":"4058:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":384,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":375,"src":"4066:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":385,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4072:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":386,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":377,"src":"4075:12:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":382,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[410,460],"referencedDeclaration":460,"src":"4036:21:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":387,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4036:52:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":381,"id":388,"nodeType":"Return","src":"4029:59:2"}]},"documentation":{"id":371,"nodeType":"StructuredDocumentation","src":"3656:211:2","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":390,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3881:12:2","nodeType":"FunctionDefinition","parameters":{"id":378,"nodeType":"ParameterList","parameters":[{"constant":false,"id":373,"mutability":"mutable","name":"target","nameLocation":"3911:6:2","nodeType":"VariableDeclaration","scope":390,"src":"3903:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":372,"name":"address","nodeType":"ElementaryTypeName","src":"3903:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":375,"mutability":"mutable","name":"data","nameLocation":"3940:4:2","nodeType":"VariableDeclaration","scope":390,"src":"3927:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":374,"name":"bytes","nodeType":"ElementaryTypeName","src":"3927:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":377,"mutability":"mutable","name":"errorMessage","nameLocation":"3968:12:2","nodeType":"VariableDeclaration","scope":390,"src":"3954:26:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":376,"name":"string","nodeType":"ElementaryTypeName","src":"3954:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3893:93:2"},"returnParameters":{"id":381,"nodeType":"ParameterList","parameters":[{"constant":false,"id":380,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":390,"src":"4005:12:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":379,"name":"bytes","nodeType":"ElementaryTypeName","src":"4005:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4004:14:2"},"scope":544,"src":"3872:223:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":409,"nodeType":"Block","src":"4600:111:2","statements":[{"expression":{"arguments":[{"id":403,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":393,"src":"4639:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":404,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":395,"src":"4647:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":405,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":397,"src":"4653:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564","id":406,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4660:43:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""},"value":"Address: low-level call with value failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""}],"id":402,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[410,460],"referencedDeclaration":460,"src":"4617:21:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":407,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4617:87:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":401,"id":408,"nodeType":"Return","src":"4610:94:2"}]},"documentation":{"id":391,"nodeType":"StructuredDocumentation","src":"4101:351:2","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"},"id":410,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4466:21:2","nodeType":"FunctionDefinition","parameters":{"id":398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":393,"mutability":"mutable","name":"target","nameLocation":"4505:6:2","nodeType":"VariableDeclaration","scope":410,"src":"4497:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":392,"name":"address","nodeType":"ElementaryTypeName","src":"4497:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":395,"mutability":"mutable","name":"data","nameLocation":"4534:4:2","nodeType":"VariableDeclaration","scope":410,"src":"4521:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":394,"name":"bytes","nodeType":"ElementaryTypeName","src":"4521:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":397,"mutability":"mutable","name":"value","nameLocation":"4556:5:2","nodeType":"VariableDeclaration","scope":410,"src":"4548:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":396,"name":"uint256","nodeType":"ElementaryTypeName","src":"4548:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4487:80:2"},"returnParameters":{"id":401,"nodeType":"ParameterList","parameters":[{"constant":false,"id":400,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":410,"src":"4586:12:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":399,"name":"bytes","nodeType":"ElementaryTypeName","src":"4586:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4585:14:2"},"scope":544,"src":"4457:254:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":459,"nodeType":"Block","src":"5138:320:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":427,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5164:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_AddressUpgradeable_$544","typeString":"library AddressUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_AddressUpgradeable_$544","typeString":"library AddressUpgradeable"}],"id":426,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5156:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":425,"name":"address","nodeType":"ElementaryTypeName","src":"5156:7:2","typeDescriptions":{}}},"id":428,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5156:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5170:7:2","memberName":"balance","nodeType":"MemberAccess","src":"5156:21:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":430,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":417,"src":"5181:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5156:30:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c","id":432,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5188:40:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""},"value":"Address: insufficient balance for call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""}],"id":424,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5148:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":433,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5148:81:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":434,"nodeType":"ExpressionStatement","src":"5148:81:2"},{"expression":{"arguments":[{"arguments":[{"id":437,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":413,"src":"5258:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":436,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":319,"src":"5247:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":438,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5247:18:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","id":439,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5267:31:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""},"value":"Address: call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""}],"id":435,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5239:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":440,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5239:60:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":441,"nodeType":"ExpressionStatement","src":"5239:60:2"},{"assignments":[443,445],"declarations":[{"constant":false,"id":443,"mutability":"mutable","name":"success","nameLocation":"5316:7:2","nodeType":"VariableDeclaration","scope":459,"src":"5311:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":442,"name":"bool","nodeType":"ElementaryTypeName","src":"5311:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":445,"mutability":"mutable","name":"returndata","nameLocation":"5338:10:2","nodeType":"VariableDeclaration","scope":459,"src":"5325:23:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":444,"name":"bytes","nodeType":"ElementaryTypeName","src":"5325:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":452,"initialValue":{"arguments":[{"id":450,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":415,"src":"5378:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":446,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":413,"src":"5352:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5359:4:2","memberName":"call","nodeType":"MemberAccess","src":"5352:11:2","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":448,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":417,"src":"5371:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5352:25:2","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":451,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5352:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5310:73:2"},{"expression":{"arguments":[{"id":454,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":443,"src":"5417:7:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":455,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":445,"src":"5426:10:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":456,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":419,"src":"5438:12:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":453,"name":"verifyCallResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":543,"src":"5400:16:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bool,bytes memory,string memory) pure returns (bytes memory)"}},"id":457,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5400:51:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":423,"id":458,"nodeType":"Return","src":"5393:58:2"}]},"documentation":{"id":411,"nodeType":"StructuredDocumentation","src":"4717:237:2","text":" @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":460,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4968:21:2","nodeType":"FunctionDefinition","parameters":{"id":420,"nodeType":"ParameterList","parameters":[{"constant":false,"id":413,"mutability":"mutable","name":"target","nameLocation":"5007:6:2","nodeType":"VariableDeclaration","scope":460,"src":"4999:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":412,"name":"address","nodeType":"ElementaryTypeName","src":"4999:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":415,"mutability":"mutable","name":"data","nameLocation":"5036:4:2","nodeType":"VariableDeclaration","scope":460,"src":"5023:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":414,"name":"bytes","nodeType":"ElementaryTypeName","src":"5023:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":417,"mutability":"mutable","name":"value","nameLocation":"5058:5:2","nodeType":"VariableDeclaration","scope":460,"src":"5050:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":416,"name":"uint256","nodeType":"ElementaryTypeName","src":"5050:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":419,"mutability":"mutable","name":"errorMessage","nameLocation":"5087:12:2","nodeType":"VariableDeclaration","scope":460,"src":"5073:26:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":418,"name":"string","nodeType":"ElementaryTypeName","src":"5073:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4989:116:2"},"returnParameters":{"id":423,"nodeType":"ParameterList","parameters":[{"constant":false,"id":422,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":460,"src":"5124:12:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":421,"name":"bytes","nodeType":"ElementaryTypeName","src":"5124:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5123:14:2"},"scope":544,"src":"4959:499:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":476,"nodeType":"Block","src":"5735:97:2","statements":[{"expression":{"arguments":[{"id":471,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":463,"src":"5771:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":472,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":465,"src":"5779:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564","id":473,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5785:39:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""},"value":"Address: low-level static call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""}],"id":470,"name":"functionStaticCall","nodeType":"Identifier","overloadedDeclarations":[477,512],"referencedDeclaration":512,"src":"5752:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) view returns (bytes memory)"}},"id":474,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5752:73:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":469,"id":475,"nodeType":"Return","src":"5745:80:2"}]},"documentation":{"id":461,"nodeType":"StructuredDocumentation","src":"5464:166:2","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":477,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5644:18:2","nodeType":"FunctionDefinition","parameters":{"id":466,"nodeType":"ParameterList","parameters":[{"constant":false,"id":463,"mutability":"mutable","name":"target","nameLocation":"5671:6:2","nodeType":"VariableDeclaration","scope":477,"src":"5663:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":462,"name":"address","nodeType":"ElementaryTypeName","src":"5663:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":465,"mutability":"mutable","name":"data","nameLocation":"5692:4:2","nodeType":"VariableDeclaration","scope":477,"src":"5679:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":464,"name":"bytes","nodeType":"ElementaryTypeName","src":"5679:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5662:35:2"},"returnParameters":{"id":469,"nodeType":"ParameterList","parameters":[{"constant":false,"id":468,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":477,"src":"5721:12:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":467,"name":"bytes","nodeType":"ElementaryTypeName","src":"5721:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5720:14:2"},"scope":544,"src":"5635:197:2","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":511,"nodeType":"Block","src":"6174:228:2","statements":[{"expression":{"arguments":[{"arguments":[{"id":491,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":480,"src":"6203:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":490,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":319,"src":"6192:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":492,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6192:18:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374","id":493,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6212:38:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9","typeString":"literal_string \"Address: static call to non-contract\""},"value":"Address: static call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9","typeString":"literal_string \"Address: static call to non-contract\""}],"id":489,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6184:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":494,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6184:67:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":495,"nodeType":"ExpressionStatement","src":"6184:67:2"},{"assignments":[497,499],"declarations":[{"constant":false,"id":497,"mutability":"mutable","name":"success","nameLocation":"6268:7:2","nodeType":"VariableDeclaration","scope":511,"src":"6263:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":496,"name":"bool","nodeType":"ElementaryTypeName","src":"6263:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":499,"mutability":"mutable","name":"returndata","nameLocation":"6290:10:2","nodeType":"VariableDeclaration","scope":511,"src":"6277:23:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":498,"name":"bytes","nodeType":"ElementaryTypeName","src":"6277:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":504,"initialValue":{"arguments":[{"id":502,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":482,"src":"6322:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":500,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":480,"src":"6304:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6311:10:2","memberName":"staticcall","nodeType":"MemberAccess","src":"6304:17:2","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":503,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6304:23:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6262:65:2"},{"expression":{"arguments":[{"id":506,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":497,"src":"6361:7:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":507,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":499,"src":"6370:10:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":508,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":484,"src":"6382:12:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":505,"name":"verifyCallResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":543,"src":"6344:16:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bool,bytes memory,string memory) pure returns (bytes memory)"}},"id":509,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6344:51:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":488,"id":510,"nodeType":"Return","src":"6337:58:2"}]},"documentation":{"id":478,"nodeType":"StructuredDocumentation","src":"5838:173:2","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":512,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"6025:18:2","nodeType":"FunctionDefinition","parameters":{"id":485,"nodeType":"ParameterList","parameters":[{"constant":false,"id":480,"mutability":"mutable","name":"target","nameLocation":"6061:6:2","nodeType":"VariableDeclaration","scope":512,"src":"6053:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":479,"name":"address","nodeType":"ElementaryTypeName","src":"6053:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":482,"mutability":"mutable","name":"data","nameLocation":"6090:4:2","nodeType":"VariableDeclaration","scope":512,"src":"6077:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":481,"name":"bytes","nodeType":"ElementaryTypeName","src":"6077:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":484,"mutability":"mutable","name":"errorMessage","nameLocation":"6118:12:2","nodeType":"VariableDeclaration","scope":512,"src":"6104:26:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":483,"name":"string","nodeType":"ElementaryTypeName","src":"6104:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6043:93:2"},"returnParameters":{"id":488,"nodeType":"ParameterList","parameters":[{"constant":false,"id":487,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":512,"src":"6160:12:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":486,"name":"bytes","nodeType":"ElementaryTypeName","src":"6160:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6159:14:2"},"scope":544,"src":"6016:386:2","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":542,"nodeType":"Block","src":"6782:532:2","statements":[{"condition":{"id":524,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":515,"src":"6796:7:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":540,"nodeType":"Block","src":"6853:455:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":528,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":517,"src":"6937:10:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6948:6:2","memberName":"length","nodeType":"MemberAccess","src":"6937:17:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":530,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6957:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6937:21:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":538,"nodeType":"Block","src":"7245:53:2","statements":[{"expression":{"arguments":[{"id":535,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":519,"src":"7270:12:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":534,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"7263:6:2","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":536,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7263:20:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":537,"nodeType":"ExpressionStatement","src":"7263:20:2"}]},"id":539,"nodeType":"IfStatement","src":"6933:365:2","trueBody":{"id":533,"nodeType":"Block","src":"6960:279:2","statements":[{"AST":{"nodeType":"YulBlock","src":"7080:145:2","statements":[{"nodeType":"YulVariableDeclaration","src":"7102:40:2","value":{"arguments":[{"name":"returndata","nodeType":"YulIdentifier","src":"7131:10:2"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7125:5:2"},"nodeType":"YulFunctionCall","src":"7125:17:2"},"variables":[{"name":"returndata_size","nodeType":"YulTypedName","src":"7106:15:2","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7174:2:2","type":"","value":"32"},{"name":"returndata","nodeType":"YulIdentifier","src":"7178:10:2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7170:3:2"},"nodeType":"YulFunctionCall","src":"7170:19:2"},{"name":"returndata_size","nodeType":"YulIdentifier","src":"7191:15:2"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7163:6:2"},"nodeType":"YulFunctionCall","src":"7163:44:2"},"nodeType":"YulExpressionStatement","src":"7163:44:2"}]},"evmVersion":"paris","externalReferences":[{"declaration":517,"isOffset":false,"isSlot":false,"src":"7131:10:2","valueSize":1},{"declaration":517,"isOffset":false,"isSlot":false,"src":"7178:10:2","valueSize":1}],"id":532,"nodeType":"InlineAssembly","src":"7071:154:2"}]}}]},"id":541,"nodeType":"IfStatement","src":"6792:516:2","trueBody":{"id":527,"nodeType":"Block","src":"6805:42:2","statements":[{"expression":{"id":525,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":517,"src":"6826:10:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":523,"id":526,"nodeType":"Return","src":"6819:17:2"}]}}]},"documentation":{"id":513,"nodeType":"StructuredDocumentation","src":"6408:209:2","text":" @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"},"id":543,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"6631:16:2","nodeType":"FunctionDefinition","parameters":{"id":520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":515,"mutability":"mutable","name":"success","nameLocation":"6662:7:2","nodeType":"VariableDeclaration","scope":543,"src":"6657:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":514,"name":"bool","nodeType":"ElementaryTypeName","src":"6657:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":517,"mutability":"mutable","name":"returndata","nameLocation":"6692:10:2","nodeType":"VariableDeclaration","scope":543,"src":"6679:23:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":516,"name":"bytes","nodeType":"ElementaryTypeName","src":"6679:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":519,"mutability":"mutable","name":"errorMessage","nameLocation":"6726:12:2","nodeType":"VariableDeclaration","scope":543,"src":"6712:26:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":518,"name":"string","nodeType":"ElementaryTypeName","src":"6712:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6647:97:2"},"returnParameters":{"id":523,"nodeType":"ParameterList","parameters":[{"constant":false,"id":522,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":543,"src":"6768:12:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":521,"name":"bytes","nodeType":"ElementaryTypeName","src":"6768:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6767:14:2"},"scope":544,"src":"6622:692:2","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":545,"src":"194:7122:2","usedErrors":[]}],"src":"101:7216:2"},"id":2},"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[1362],"Ownable":[649]},"id":650,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":546,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"87:23:3"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":547,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":650,"sourceUnit":1363,"src":"112:30:3","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":549,"name":"Context","nameLocations":["668:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":1362,"src":"668:7:3"},"id":550,"nodeType":"InheritanceSpecifier","src":"668:7:3"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":548,"nodeType":"StructuredDocumentation","src":"144:494:3","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":649,"linearizedBaseContracts":[649,1362],"name":"Ownable","nameLocation":"657:7:3","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":552,"mutability":"mutable","name":"_owner","nameLocation":"698:6:3","nodeType":"VariableDeclaration","scope":649,"src":"682:22:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":551,"name":"address","nodeType":"ElementaryTypeName","src":"682:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":558,"name":"OwnershipTransferred","nameLocation":"717:20:3","nodeType":"EventDefinition","parameters":{"id":557,"nodeType":"ParameterList","parameters":[{"constant":false,"id":554,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"754:13:3","nodeType":"VariableDeclaration","scope":558,"src":"738:29:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":553,"name":"address","nodeType":"ElementaryTypeName","src":"738:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":556,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"785:8:3","nodeType":"VariableDeclaration","scope":558,"src":"769:24:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":555,"name":"address","nodeType":"ElementaryTypeName","src":"769:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"737:57:3"},"src":"711:84:3"},{"body":{"id":567,"nodeType":"Block","src":"911:49:3","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":563,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1352,"src":"940:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":564,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"940:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":562,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":648,"src":"921:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":565,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"921:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":566,"nodeType":"ExpressionStatement","src":"921:32:3"}]},"documentation":{"id":559,"nodeType":"StructuredDocumentation","src":"801:91:3","text":" @dev Initializes the contract setting the deployer as the initial owner."},"id":568,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":560,"nodeType":"ParameterList","parameters":[],"src":"908:2:3"},"returnParameters":{"id":561,"nodeType":"ParameterList","parameters":[],"src":"911:0:3"},"scope":649,"src":"897:63:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":576,"nodeType":"Block","src":"1091:30:3","statements":[{"expression":{"id":574,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":552,"src":"1108:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":573,"id":575,"nodeType":"Return","src":"1101:13:3"}]},"documentation":{"id":569,"nodeType":"StructuredDocumentation","src":"966:65:3","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":577,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1045:5:3","nodeType":"FunctionDefinition","parameters":{"id":570,"nodeType":"ParameterList","parameters":[],"src":"1050:2:3"},"returnParameters":{"id":573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":572,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":577,"src":"1082:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":571,"name":"address","nodeType":"ElementaryTypeName","src":"1082:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1081:9:3"},"scope":649,"src":"1036:85:3","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":590,"nodeType":"Block","src":"1230:96:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":581,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":577,"src":"1248:5:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":582,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1248:7:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":583,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1352,"src":"1259:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":584,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1259:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1248:23:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":586,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1273:34:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":580,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1240:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":587,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1240:68:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":588,"nodeType":"ExpressionStatement","src":"1240:68:3"},{"id":589,"nodeType":"PlaceholderStatement","src":"1318:1:3"}]},"documentation":{"id":578,"nodeType":"StructuredDocumentation","src":"1127:77:3","text":" @dev Throws if called by any account other than the owner."},"id":591,"name":"onlyOwner","nameLocation":"1218:9:3","nodeType":"ModifierDefinition","parameters":{"id":579,"nodeType":"ParameterList","parameters":[],"src":"1227:2:3"},"src":"1209:117:3","virtual":false,"visibility":"internal"},{"body":{"id":604,"nodeType":"Block","src":"1722:47:3","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":600,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1759:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":599,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1751:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":598,"name":"address","nodeType":"ElementaryTypeName","src":"1751:7:3","typeDescriptions":{}}},"id":601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1751:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":597,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":648,"src":"1732:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":602,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1732:30:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":603,"nodeType":"ExpressionStatement","src":"1732:30:3"}]},"documentation":{"id":592,"nodeType":"StructuredDocumentation","src":"1332:331:3","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."},"functionSelector":"715018a6","id":605,"implemented":true,"kind":"function","modifiers":[{"id":595,"kind":"modifierInvocation","modifierName":{"id":594,"name":"onlyOwner","nameLocations":["1712:9:3"],"nodeType":"IdentifierPath","referencedDeclaration":591,"src":"1712:9:3"},"nodeType":"ModifierInvocation","src":"1712:9:3"}],"name":"renounceOwnership","nameLocation":"1677:17:3","nodeType":"FunctionDefinition","parameters":{"id":593,"nodeType":"ParameterList","parameters":[],"src":"1694:2:3"},"returnParameters":{"id":596,"nodeType":"ParameterList","parameters":[],"src":"1722:0:3"},"scope":649,"src":"1668:101:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":627,"nodeType":"Block","src":"1988:128:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":614,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":608,"src":"2006:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2026:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":616,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2018:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":615,"name":"address","nodeType":"ElementaryTypeName","src":"2018:7:3","typeDescriptions":{}}},"id":618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2018:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2006:22:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":620,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2030:40:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":613,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1998:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":621,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1998:73:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":622,"nodeType":"ExpressionStatement","src":"1998:73:3"},{"expression":{"arguments":[{"id":624,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":608,"src":"2100:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":623,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":648,"src":"2081:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":625,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2081:28:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":626,"nodeType":"ExpressionStatement","src":"2081:28:3"}]},"documentation":{"id":606,"nodeType":"StructuredDocumentation","src":"1775:138:3","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":628,"implemented":true,"kind":"function","modifiers":[{"id":611,"kind":"modifierInvocation","modifierName":{"id":610,"name":"onlyOwner","nameLocations":["1978:9:3"],"nodeType":"IdentifierPath","referencedDeclaration":591,"src":"1978:9:3"},"nodeType":"ModifierInvocation","src":"1978:9:3"}],"name":"transferOwnership","nameLocation":"1927:17:3","nodeType":"FunctionDefinition","parameters":{"id":609,"nodeType":"ParameterList","parameters":[{"constant":false,"id":608,"mutability":"mutable","name":"newOwner","nameLocation":"1953:8:3","nodeType":"VariableDeclaration","scope":628,"src":"1945:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":607,"name":"address","nodeType":"ElementaryTypeName","src":"1945:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1944:18:3"},"returnParameters":{"id":612,"nodeType":"ParameterList","parameters":[],"src":"1988:0:3"},"scope":649,"src":"1918:198:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":647,"nodeType":"Block","src":"2333:124:3","statements":[{"assignments":[635],"declarations":[{"constant":false,"id":635,"mutability":"mutable","name":"oldOwner","nameLocation":"2351:8:3","nodeType":"VariableDeclaration","scope":647,"src":"2343:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":634,"name":"address","nodeType":"ElementaryTypeName","src":"2343:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":637,"initialValue":{"id":636,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":552,"src":"2362:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2343:25:3"},{"expression":{"id":640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":638,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":552,"src":"2378:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":639,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":631,"src":"2387:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2378:17:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":641,"nodeType":"ExpressionStatement","src":"2378:17:3"},{"eventCall":{"arguments":[{"id":643,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":635,"src":"2431:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":644,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":631,"src":"2441:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":642,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":558,"src":"2410:20:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":645,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2410:40:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":646,"nodeType":"EmitStatement","src":"2405:45:3"}]},"documentation":{"id":629,"nodeType":"StructuredDocumentation","src":"2122:143:3","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":648,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2279:18:3","nodeType":"FunctionDefinition","parameters":{"id":632,"nodeType":"ParameterList","parameters":[{"constant":false,"id":631,"mutability":"mutable","name":"newOwner","nameLocation":"2306:8:3","nodeType":"VariableDeclaration","scope":648,"src":"2298:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":630,"name":"address","nodeType":"ElementaryTypeName","src":"2298:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2297:18:3"},"returnParameters":{"id":633,"nodeType":"ParameterList","parameters":[],"src":"2333:0:3"},"scope":649,"src":"2270:187:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":650,"src":"639:1820:3","usedErrors":[]}],"src":"87:2373:3"},"id":3},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","exportedSymbols":{"Context":[1362],"ERC20":[1237],"IERC20":[1315],"IERC20Metadata":[1340]},"id":1238,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":651,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"105:23:4"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"./IERC20.sol","id":652,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1238,"sourceUnit":1316,"src":"130:22:4","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"./extensions/IERC20Metadata.sol","id":653,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1238,"sourceUnit":1341,"src":"153:41:4","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":654,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1238,"sourceUnit":1363,"src":"195:33:4","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":656,"name":"Context","nameLocations":["1421:7:4"],"nodeType":"IdentifierPath","referencedDeclaration":1362,"src":"1421:7:4"},"id":657,"nodeType":"InheritanceSpecifier","src":"1421:7:4"},{"baseName":{"id":658,"name":"IERC20","nameLocations":["1430:6:4"],"nodeType":"IdentifierPath","referencedDeclaration":1315,"src":"1430:6:4"},"id":659,"nodeType":"InheritanceSpecifier","src":"1430:6:4"},{"baseName":{"id":660,"name":"IERC20Metadata","nameLocations":["1438:14:4"],"nodeType":"IdentifierPath","referencedDeclaration":1340,"src":"1438:14:4"},"id":661,"nodeType":"InheritanceSpecifier","src":"1438:14:4"}],"canonicalName":"ERC20","contractDependencies":[],"contractKind":"contract","documentation":{"id":655,"nodeType":"StructuredDocumentation","src":"230:1172:4","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."},"fullyImplemented":true,"id":1237,"linearizedBaseContracts":[1237,1340,1315,1362],"name":"ERC20","nameLocation":"1412:5:4","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":665,"mutability":"mutable","name":"_balances","nameLocation":"1495:9:4","nodeType":"VariableDeclaration","scope":1237,"src":"1459:45:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":664,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":662,"name":"address","nodeType":"ElementaryTypeName","src":"1467:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1459:27:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":663,"name":"uint256","nodeType":"ElementaryTypeName","src":"1478:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":671,"mutability":"mutable","name":"_allowances","nameLocation":"1567:11:4","nodeType":"VariableDeclaration","scope":1237,"src":"1511:67:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":670,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":666,"name":"address","nodeType":"ElementaryTypeName","src":"1519:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1511:47:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":669,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":667,"name":"address","nodeType":"ElementaryTypeName","src":"1538:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1530:27:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":668,"name":"uint256","nodeType":"ElementaryTypeName","src":"1549:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":673,"mutability":"mutable","name":"_totalSupply","nameLocation":"1601:12:4","nodeType":"VariableDeclaration","scope":1237,"src":"1585:28:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":672,"name":"uint256","nodeType":"ElementaryTypeName","src":"1585:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":675,"mutability":"mutable","name":"_name","nameLocation":"1635:5:4","nodeType":"VariableDeclaration","scope":1237,"src":"1620:20:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":674,"name":"string","nodeType":"ElementaryTypeName","src":"1620:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":677,"mutability":"mutable","name":"_symbol","nameLocation":"1661:7:4","nodeType":"VariableDeclaration","scope":1237,"src":"1646:22:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":676,"name":"string","nodeType":"ElementaryTypeName","src":"1646:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":693,"nodeType":"Block","src":"2034:57:4","statements":[{"expression":{"id":687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":685,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":675,"src":"2044:5:4","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":686,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":680,"src":"2052:5:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2044:13:4","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":688,"nodeType":"ExpressionStatement","src":"2044:13:4"},{"expression":{"id":691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":689,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":677,"src":"2067:7:4","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":690,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":682,"src":"2077:7:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2067:17:4","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":692,"nodeType":"ExpressionStatement","src":"2067:17:4"}]},"documentation":{"id":678,"nodeType":"StructuredDocumentation","src":"1675:298:4","text":" @dev Sets the values for {name} and {symbol}.\n The default value of {decimals} is 18. To select a different value for\n {decimals} you should overload it.\n All two of these values are immutable: they can only be set once during\n construction."},"id":694,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":683,"nodeType":"ParameterList","parameters":[{"constant":false,"id":680,"mutability":"mutable","name":"name_","nameLocation":"2004:5:4","nodeType":"VariableDeclaration","scope":694,"src":"1990:19:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":679,"name":"string","nodeType":"ElementaryTypeName","src":"1990:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":682,"mutability":"mutable","name":"symbol_","nameLocation":"2025:7:4","nodeType":"VariableDeclaration","scope":694,"src":"2011:21:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":681,"name":"string","nodeType":"ElementaryTypeName","src":"2011:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1989:44:4"},"returnParameters":{"id":684,"nodeType":"ParameterList","parameters":[],"src":"2034:0:4"},"scope":1237,"src":"1978:113:4","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[1327],"body":{"id":703,"nodeType":"Block","src":"2225:29:4","statements":[{"expression":{"id":701,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":675,"src":"2242:5:4","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":700,"id":702,"nodeType":"Return","src":"2235:12:4"}]},"documentation":{"id":695,"nodeType":"StructuredDocumentation","src":"2097:54:4","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":704,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2165:4:4","nodeType":"FunctionDefinition","overrides":{"id":697,"nodeType":"OverrideSpecifier","overrides":[],"src":"2192:8:4"},"parameters":{"id":696,"nodeType":"ParameterList","parameters":[],"src":"2169:2:4"},"returnParameters":{"id":700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":699,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":704,"src":"2210:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":698,"name":"string","nodeType":"ElementaryTypeName","src":"2210:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2209:15:4"},"scope":1237,"src":"2156:98:4","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1333],"body":{"id":713,"nodeType":"Block","src":"2438:31:4","statements":[{"expression":{"id":711,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":677,"src":"2455:7:4","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":710,"id":712,"nodeType":"Return","src":"2448:14:4"}]},"documentation":{"id":705,"nodeType":"StructuredDocumentation","src":"2260:102:4","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":714,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2376:6:4","nodeType":"FunctionDefinition","overrides":{"id":707,"nodeType":"OverrideSpecifier","overrides":[],"src":"2405:8:4"},"parameters":{"id":706,"nodeType":"ParameterList","parameters":[],"src":"2382:2:4"},"returnParameters":{"id":710,"nodeType":"ParameterList","parameters":[{"constant":false,"id":709,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":714,"src":"2423:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":708,"name":"string","nodeType":"ElementaryTypeName","src":"2423:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2422:15:4"},"scope":1237,"src":"2367:102:4","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1339],"body":{"id":723,"nodeType":"Block","src":"3158:26:4","statements":[{"expression":{"hexValue":"3138","id":721,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3175:2:4","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":720,"id":722,"nodeType":"Return","src":"3168:9:4"}]},"documentation":{"id":715,"nodeType":"StructuredDocumentation","src":"2475:613:4","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless this function is\n overridden;\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":724,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"3102:8:4","nodeType":"FunctionDefinition","overrides":{"id":717,"nodeType":"OverrideSpecifier","overrides":[],"src":"3133:8:4"},"parameters":{"id":716,"nodeType":"ParameterList","parameters":[],"src":"3110:2:4"},"returnParameters":{"id":720,"nodeType":"ParameterList","parameters":[{"constant":false,"id":719,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":724,"src":"3151:5:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":718,"name":"uint8","nodeType":"ElementaryTypeName","src":"3151:5:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"3150:7:4"},"scope":1237,"src":"3093:91:4","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1246],"body":{"id":733,"nodeType":"Block","src":"3314:36:4","statements":[{"expression":{"id":731,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":673,"src":"3331:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":730,"id":732,"nodeType":"Return","src":"3324:19:4"}]},"documentation":{"id":725,"nodeType":"StructuredDocumentation","src":"3190:49:4","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":734,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"3253:11:4","nodeType":"FunctionDefinition","overrides":{"id":727,"nodeType":"OverrideSpecifier","overrides":[],"src":"3287:8:4"},"parameters":{"id":726,"nodeType":"ParameterList","parameters":[],"src":"3264:2:4"},"returnParameters":{"id":730,"nodeType":"ParameterList","parameters":[{"constant":false,"id":729,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":734,"src":"3305:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":728,"name":"uint256","nodeType":"ElementaryTypeName","src":"3305:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3304:9:4"},"scope":1237,"src":"3244:106:4","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1254],"body":{"id":747,"nodeType":"Block","src":"3491:42:4","statements":[{"expression":{"baseExpression":{"id":743,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":665,"src":"3508:9:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":745,"indexExpression":{"id":744,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":737,"src":"3518:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3508:18:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":742,"id":746,"nodeType":"Return","src":"3501:25:4"}]},"documentation":{"id":735,"nodeType":"StructuredDocumentation","src":"3356:47:4","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":748,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"3417:9:4","nodeType":"FunctionDefinition","overrides":{"id":739,"nodeType":"OverrideSpecifier","overrides":[],"src":"3464:8:4"},"parameters":{"id":738,"nodeType":"ParameterList","parameters":[{"constant":false,"id":737,"mutability":"mutable","name":"account","nameLocation":"3435:7:4","nodeType":"VariableDeclaration","scope":748,"src":"3427:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":736,"name":"address","nodeType":"ElementaryTypeName","src":"3427:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3426:17:4"},"returnParameters":{"id":742,"nodeType":"ParameterList","parameters":[{"constant":false,"id":741,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":748,"src":"3482:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":740,"name":"uint256","nodeType":"ElementaryTypeName","src":"3482:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3481:9:4"},"scope":1237,"src":"3408:125:4","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1264],"body":{"id":772,"nodeType":"Block","src":"3814:104:4","statements":[{"assignments":[760],"declarations":[{"constant":false,"id":760,"mutability":"mutable","name":"owner","nameLocation":"3832:5:4","nodeType":"VariableDeclaration","scope":772,"src":"3824:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":759,"name":"address","nodeType":"ElementaryTypeName","src":"3824:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":763,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":761,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1352,"src":"3840:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":762,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3840:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3824:28:4"},{"expression":{"arguments":[{"id":765,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":760,"src":"3872:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":766,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":751,"src":"3879:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":767,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":753,"src":"3883:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":764,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":998,"src":"3862:9:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":768,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3862:28:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":769,"nodeType":"ExpressionStatement","src":"3862:28:4"},{"expression":{"hexValue":"74727565","id":770,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3907:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":758,"id":771,"nodeType":"Return","src":"3900:11:4"}]},"documentation":{"id":749,"nodeType":"StructuredDocumentation","src":"3539:185:4","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."},"functionSelector":"a9059cbb","id":773,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"3738:8:4","nodeType":"FunctionDefinition","overrides":{"id":755,"nodeType":"OverrideSpecifier","overrides":[],"src":"3790:8:4"},"parameters":{"id":754,"nodeType":"ParameterList","parameters":[{"constant":false,"id":751,"mutability":"mutable","name":"to","nameLocation":"3755:2:4","nodeType":"VariableDeclaration","scope":773,"src":"3747:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":750,"name":"address","nodeType":"ElementaryTypeName","src":"3747:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":753,"mutability":"mutable","name":"amount","nameLocation":"3767:6:4","nodeType":"VariableDeclaration","scope":773,"src":"3759:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":752,"name":"uint256","nodeType":"ElementaryTypeName","src":"3759:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3746:28:4"},"returnParameters":{"id":758,"nodeType":"ParameterList","parameters":[{"constant":false,"id":757,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":773,"src":"3808:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":756,"name":"bool","nodeType":"ElementaryTypeName","src":"3808:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3807:6:4"},"scope":1237,"src":"3729:189:4","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1274],"body":{"id":790,"nodeType":"Block","src":"4074:51:4","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":784,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":671,"src":"4091:11:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":786,"indexExpression":{"id":785,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":776,"src":"4103:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4091:18:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":788,"indexExpression":{"id":787,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":778,"src":"4110:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4091:27:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":783,"id":789,"nodeType":"Return","src":"4084:34:4"}]},"documentation":{"id":774,"nodeType":"StructuredDocumentation","src":"3924:47:4","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":791,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"3985:9:4","nodeType":"FunctionDefinition","overrides":{"id":780,"nodeType":"OverrideSpecifier","overrides":[],"src":"4047:8:4"},"parameters":{"id":779,"nodeType":"ParameterList","parameters":[{"constant":false,"id":776,"mutability":"mutable","name":"owner","nameLocation":"4003:5:4","nodeType":"VariableDeclaration","scope":791,"src":"3995:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":775,"name":"address","nodeType":"ElementaryTypeName","src":"3995:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":778,"mutability":"mutable","name":"spender","nameLocation":"4018:7:4","nodeType":"VariableDeclaration","scope":791,"src":"4010:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":777,"name":"address","nodeType":"ElementaryTypeName","src":"4010:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3994:32:4"},"returnParameters":{"id":783,"nodeType":"ParameterList","parameters":[{"constant":false,"id":782,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":791,"src":"4065:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":781,"name":"uint256","nodeType":"ElementaryTypeName","src":"4065:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4064:9:4"},"scope":1237,"src":"3976:149:4","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1284],"body":{"id":815,"nodeType":"Block","src":"4522:108:4","statements":[{"assignments":[803],"declarations":[{"constant":false,"id":803,"mutability":"mutable","name":"owner","nameLocation":"4540:5:4","nodeType":"VariableDeclaration","scope":815,"src":"4532:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":802,"name":"address","nodeType":"ElementaryTypeName","src":"4532:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":806,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":804,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1352,"src":"4548:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":805,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4548:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4532:28:4"},{"expression":{"arguments":[{"id":808,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":803,"src":"4579:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":809,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":794,"src":"4586:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":810,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":796,"src":"4595:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":807,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1171,"src":"4570:8:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":811,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4570:32:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":812,"nodeType":"ExpressionStatement","src":"4570:32:4"},{"expression":{"hexValue":"74727565","id":813,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4619:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":801,"id":814,"nodeType":"Return","src":"4612:11:4"}]},"documentation":{"id":792,"nodeType":"StructuredDocumentation","src":"4131:297:4","text":" @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":816,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4442:7:4","nodeType":"FunctionDefinition","overrides":{"id":798,"nodeType":"OverrideSpecifier","overrides":[],"src":"4498:8:4"},"parameters":{"id":797,"nodeType":"ParameterList","parameters":[{"constant":false,"id":794,"mutability":"mutable","name":"spender","nameLocation":"4458:7:4","nodeType":"VariableDeclaration","scope":816,"src":"4450:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":793,"name":"address","nodeType":"ElementaryTypeName","src":"4450:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":796,"mutability":"mutable","name":"amount","nameLocation":"4475:6:4","nodeType":"VariableDeclaration","scope":816,"src":"4467:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":795,"name":"uint256","nodeType":"ElementaryTypeName","src":"4467:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4449:33:4"},"returnParameters":{"id":801,"nodeType":"ParameterList","parameters":[{"constant":false,"id":800,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":816,"src":"4516:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":799,"name":"bool","nodeType":"ElementaryTypeName","src":"4516:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4515:6:4"},"scope":1237,"src":"4433:197:4","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1296],"body":{"id":848,"nodeType":"Block","src":"5325:153:4","statements":[{"assignments":[830],"declarations":[{"constant":false,"id":830,"mutability":"mutable","name":"spender","nameLocation":"5343:7:4","nodeType":"VariableDeclaration","scope":848,"src":"5335:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":829,"name":"address","nodeType":"ElementaryTypeName","src":"5335:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":833,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":831,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1352,"src":"5353:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":832,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5353:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5335:30:4"},{"expression":{"arguments":[{"id":835,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":819,"src":"5391:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":836,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":830,"src":"5397:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":837,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":823,"src":"5406:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":834,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1214,"src":"5375:15:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":838,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5375:38:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":839,"nodeType":"ExpressionStatement","src":"5375:38:4"},{"expression":{"arguments":[{"id":841,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":819,"src":"5433:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":842,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":821,"src":"5439:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":843,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":823,"src":"5443:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":840,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":998,"src":"5423:9:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":844,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5423:27:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":845,"nodeType":"ExpressionStatement","src":"5423:27:4"},{"expression":{"hexValue":"74727565","id":846,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5467:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":828,"id":847,"nodeType":"Return","src":"5460:11:4"}]},"documentation":{"id":817,"nodeType":"StructuredDocumentation","src":"4636:551:4","text":" @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."},"functionSelector":"23b872dd","id":849,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"5201:12:4","nodeType":"FunctionDefinition","overrides":{"id":825,"nodeType":"OverrideSpecifier","overrides":[],"src":"5301:8:4"},"parameters":{"id":824,"nodeType":"ParameterList","parameters":[{"constant":false,"id":819,"mutability":"mutable","name":"from","nameLocation":"5231:4:4","nodeType":"VariableDeclaration","scope":849,"src":"5223:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":818,"name":"address","nodeType":"ElementaryTypeName","src":"5223:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":821,"mutability":"mutable","name":"to","nameLocation":"5253:2:4","nodeType":"VariableDeclaration","scope":849,"src":"5245:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":820,"name":"address","nodeType":"ElementaryTypeName","src":"5245:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":823,"mutability":"mutable","name":"amount","nameLocation":"5273:6:4","nodeType":"VariableDeclaration","scope":849,"src":"5265:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":822,"name":"uint256","nodeType":"ElementaryTypeName","src":"5265:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5213:72:4"},"returnParameters":{"id":828,"nodeType":"ParameterList","parameters":[{"constant":false,"id":827,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":849,"src":"5319:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":826,"name":"bool","nodeType":"ElementaryTypeName","src":"5319:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5318:6:4"},"scope":1237,"src":"5192:286:4","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":878,"nodeType":"Block","src":"5967:142:4","statements":[{"assignments":[860],"declarations":[{"constant":false,"id":860,"mutability":"mutable","name":"owner","nameLocation":"5985:5:4","nodeType":"VariableDeclaration","scope":878,"src":"5977:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":859,"name":"address","nodeType":"ElementaryTypeName","src":"5977:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":863,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":861,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1352,"src":"5993:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":862,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5993:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5977:28:4"},{"expression":{"arguments":[{"id":865,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":860,"src":"6024:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":866,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":852,"src":"6031:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"baseExpression":{"id":867,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":671,"src":"6040:11:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":869,"indexExpression":{"id":868,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":860,"src":"6052:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6040:18:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":871,"indexExpression":{"id":870,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":852,"src":"6059:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6040:27:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":872,"name":"addedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":854,"src":"6070:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6040:40:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":864,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1171,"src":"6015:8:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":874,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6015:66:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":875,"nodeType":"ExpressionStatement","src":"6015:66:4"},{"expression":{"hexValue":"74727565","id":876,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6098:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":858,"id":877,"nodeType":"Return","src":"6091:11:4"}]},"documentation":{"id":850,"nodeType":"StructuredDocumentation","src":"5484:384:4","text":" @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"39509351","id":879,"implemented":true,"kind":"function","modifiers":[],"name":"increaseAllowance","nameLocation":"5882:17:4","nodeType":"FunctionDefinition","parameters":{"id":855,"nodeType":"ParameterList","parameters":[{"constant":false,"id":852,"mutability":"mutable","name":"spender","nameLocation":"5908:7:4","nodeType":"VariableDeclaration","scope":879,"src":"5900:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":851,"name":"address","nodeType":"ElementaryTypeName","src":"5900:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":854,"mutability":"mutable","name":"addedValue","nameLocation":"5925:10:4","nodeType":"VariableDeclaration","scope":879,"src":"5917:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":853,"name":"uint256","nodeType":"ElementaryTypeName","src":"5917:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5899:37:4"},"returnParameters":{"id":858,"nodeType":"ParameterList","parameters":[{"constant":false,"id":857,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":879,"src":"5961:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":856,"name":"bool","nodeType":"ElementaryTypeName","src":"5961:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5960:6:4"},"scope":1237,"src":"5873:236:4","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":920,"nodeType":"Block","src":"6695:330:4","statements":[{"assignments":[890],"declarations":[{"constant":false,"id":890,"mutability":"mutable","name":"owner","nameLocation":"6713:5:4","nodeType":"VariableDeclaration","scope":920,"src":"6705:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":889,"name":"address","nodeType":"ElementaryTypeName","src":"6705:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":893,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":891,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1352,"src":"6721:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":892,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6721:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6705:28:4"},{"assignments":[895],"declarations":[{"constant":false,"id":895,"mutability":"mutable","name":"currentAllowance","nameLocation":"6751:16:4","nodeType":"VariableDeclaration","scope":920,"src":"6743:24:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":894,"name":"uint256","nodeType":"ElementaryTypeName","src":"6743:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":901,"initialValue":{"baseExpression":{"baseExpression":{"id":896,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":671,"src":"6770:11:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":898,"indexExpression":{"id":897,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":890,"src":"6782:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6770:18:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":900,"indexExpression":{"id":899,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":882,"src":"6789:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6770:27:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6743:54:4"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":903,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":895,"src":"6815:16:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":904,"name":"subtractedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":884,"src":"6835:15:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6815:35:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f","id":906,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6852:39:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","typeString":"literal_string \"ERC20: decreased allowance below zero\""},"value":"ERC20: decreased allowance below zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","typeString":"literal_string \"ERC20: decreased allowance below zero\""}],"id":902,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6807:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":907,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6807:85:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":908,"nodeType":"ExpressionStatement","src":"6807:85:4"},{"id":917,"nodeType":"UncheckedBlock","src":"6902:95:4","statements":[{"expression":{"arguments":[{"id":910,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":890,"src":"6935:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":911,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":882,"src":"6942:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":912,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":895,"src":"6951:16:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":913,"name":"subtractedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":884,"src":"6970:15:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6951:34:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":909,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1171,"src":"6926:8:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":915,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6926:60:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":916,"nodeType":"ExpressionStatement","src":"6926:60:4"}]},{"expression":{"hexValue":"74727565","id":918,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7014:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":888,"id":919,"nodeType":"Return","src":"7007:11:4"}]},"documentation":{"id":880,"nodeType":"StructuredDocumentation","src":"6115:476:4","text":" @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."},"functionSelector":"a457c2d7","id":921,"implemented":true,"kind":"function","modifiers":[],"name":"decreaseAllowance","nameLocation":"6605:17:4","nodeType":"FunctionDefinition","parameters":{"id":885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":882,"mutability":"mutable","name":"spender","nameLocation":"6631:7:4","nodeType":"VariableDeclaration","scope":921,"src":"6623:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":881,"name":"address","nodeType":"ElementaryTypeName","src":"6623:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":884,"mutability":"mutable","name":"subtractedValue","nameLocation":"6648:15:4","nodeType":"VariableDeclaration","scope":921,"src":"6640:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":883,"name":"uint256","nodeType":"ElementaryTypeName","src":"6640:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6622:42:4"},"returnParameters":{"id":888,"nodeType":"ParameterList","parameters":[{"constant":false,"id":887,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":921,"src":"6689:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":886,"name":"bool","nodeType":"ElementaryTypeName","src":"6689:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6688:6:4"},"scope":1237,"src":"6596:429:4","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":997,"nodeType":"Block","src":"7596:543:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":932,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":924,"src":"7614:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":935,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7630:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":934,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7622:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":933,"name":"address","nodeType":"ElementaryTypeName","src":"7622:7:4","typeDescriptions":{}}},"id":936,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7622:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7614:18:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373","id":938,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7634:39:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","typeString":"literal_string \"ERC20: transfer from the zero address\""},"value":"ERC20: transfer from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","typeString":"literal_string \"ERC20: transfer from the zero address\""}],"id":931,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7606:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":939,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7606:68:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":940,"nodeType":"ExpressionStatement","src":"7606:68:4"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":942,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":926,"src":"7692:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":945,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7706:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":944,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7698:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":943,"name":"address","nodeType":"ElementaryTypeName","src":"7698:7:4","typeDescriptions":{}}},"id":946,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7698:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7692:16:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472657373","id":948,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7710:37:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","typeString":"literal_string \"ERC20: transfer to the zero address\""},"value":"ERC20: transfer to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","typeString":"literal_string \"ERC20: transfer to the zero address\""}],"id":941,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7684:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":949,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7684:64:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":950,"nodeType":"ExpressionStatement","src":"7684:64:4"},{"expression":{"arguments":[{"id":952,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":924,"src":"7780:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":953,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":926,"src":"7786:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":954,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":928,"src":"7790:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":951,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1225,"src":"7759:20:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":955,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7759:38:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":956,"nodeType":"ExpressionStatement","src":"7759:38:4"},{"assignments":[958],"declarations":[{"constant":false,"id":958,"mutability":"mutable","name":"fromBalance","nameLocation":"7816:11:4","nodeType":"VariableDeclaration","scope":997,"src":"7808:19:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":957,"name":"uint256","nodeType":"ElementaryTypeName","src":"7808:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":962,"initialValue":{"baseExpression":{"id":959,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":665,"src":"7830:9:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":961,"indexExpression":{"id":960,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":924,"src":"7840:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7830:15:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7808:37:4"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":964,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":958,"src":"7863:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":965,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":928,"src":"7878:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7863:21:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365","id":967,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7886:40:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","typeString":"literal_string \"ERC20: transfer amount exceeds balance\""},"value":"ERC20: transfer amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","typeString":"literal_string \"ERC20: transfer amount exceeds balance\""}],"id":963,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7855:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":968,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7855:72:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":969,"nodeType":"ExpressionStatement","src":"7855:72:4"},{"id":978,"nodeType":"UncheckedBlock","src":"7937:73:4","statements":[{"expression":{"id":976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":970,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":665,"src":"7961:9:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":972,"indexExpression":{"id":971,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":924,"src":"7971:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7961:15:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":973,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":958,"src":"7979:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":974,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":928,"src":"7993:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7979:20:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7961:38:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":977,"nodeType":"ExpressionStatement","src":"7961:38:4"}]},{"expression":{"id":983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":979,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":665,"src":"8019:9:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":981,"indexExpression":{"id":980,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":926,"src":"8029:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8019:13:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":982,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":928,"src":"8036:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8019:23:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":984,"nodeType":"ExpressionStatement","src":"8019:23:4"},{"eventCall":{"arguments":[{"id":986,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":924,"src":"8067:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":987,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":926,"src":"8073:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":988,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":928,"src":"8077:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":985,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1305,"src":"8058:8:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":989,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8058:26:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":990,"nodeType":"EmitStatement","src":"8053:31:4"},{"expression":{"arguments":[{"id":992,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":924,"src":"8115:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":993,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":926,"src":"8121:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":994,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":928,"src":"8125:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":991,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1236,"src":"8095:19:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":995,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8095:37:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":996,"nodeType":"ExpressionStatement","src":"8095:37:4"}]},"documentation":{"id":922,"nodeType":"StructuredDocumentation","src":"7031:452:4","text":" @dev Moves `amount` of tokens from `sender` to `recipient`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."},"id":998,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"7497:9:4","nodeType":"FunctionDefinition","parameters":{"id":929,"nodeType":"ParameterList","parameters":[{"constant":false,"id":924,"mutability":"mutable","name":"from","nameLocation":"7524:4:4","nodeType":"VariableDeclaration","scope":998,"src":"7516:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":923,"name":"address","nodeType":"ElementaryTypeName","src":"7516:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":926,"mutability":"mutable","name":"to","nameLocation":"7546:2:4","nodeType":"VariableDeclaration","scope":998,"src":"7538:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":925,"name":"address","nodeType":"ElementaryTypeName","src":"7538:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":928,"mutability":"mutable","name":"amount","nameLocation":"7566:6:4","nodeType":"VariableDeclaration","scope":998,"src":"7558:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":927,"name":"uint256","nodeType":"ElementaryTypeName","src":"7558:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7506:72:4"},"returnParameters":{"id":930,"nodeType":"ParameterList","parameters":[],"src":"7596:0:4"},"scope":1237,"src":"7488:651:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1053,"nodeType":"Block","src":"8480:324:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1007,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1001,"src":"8498:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1010,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8517:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1009,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8509:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1008,"name":"address","nodeType":"ElementaryTypeName","src":"8509:7:4","typeDescriptions":{}}},"id":1011,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8509:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8498:21:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206d696e7420746f20746865207a65726f2061646472657373","id":1013,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8521:33:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","typeString":"literal_string \"ERC20: mint to the zero address\""},"value":"ERC20: mint to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","typeString":"literal_string \"ERC20: mint to the zero address\""}],"id":1006,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8490:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1014,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8490:65:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1015,"nodeType":"ExpressionStatement","src":"8490:65:4"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1019,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8595:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1018,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8587:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1017,"name":"address","nodeType":"ElementaryTypeName","src":"8587:7:4","typeDescriptions":{}}},"id":1020,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8587:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1021,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1001,"src":"8599:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1022,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1003,"src":"8608:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1016,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1225,"src":"8566:20:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1023,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8566:49:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1024,"nodeType":"ExpressionStatement","src":"8566:49:4"},{"expression":{"id":1027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1025,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":673,"src":"8626:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1026,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1003,"src":"8642:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8626:22:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1028,"nodeType":"ExpressionStatement","src":"8626:22:4"},{"expression":{"id":1033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1029,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":665,"src":"8658:9:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1031,"indexExpression":{"id":1030,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1001,"src":"8668:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8658:18:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1032,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1003,"src":"8680:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8658:28:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1034,"nodeType":"ExpressionStatement","src":"8658:28:4"},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1038,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8718:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1037,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8710:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1036,"name":"address","nodeType":"ElementaryTypeName","src":"8710:7:4","typeDescriptions":{}}},"id":1039,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8710:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1040,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1001,"src":"8722:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1041,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1003,"src":"8731:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1035,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1305,"src":"8701:8:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1042,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8701:37:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1043,"nodeType":"EmitStatement","src":"8696:42:4"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1047,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8777:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1046,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8769:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1045,"name":"address","nodeType":"ElementaryTypeName","src":"8769:7:4","typeDescriptions":{}}},"id":1048,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8769:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1049,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1001,"src":"8781:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1050,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1003,"src":"8790:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1044,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1236,"src":"8749:19:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1051,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8749:48:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1052,"nodeType":"ExpressionStatement","src":"8749:48:4"}]},"documentation":{"id":999,"nodeType":"StructuredDocumentation","src":"8145:265:4","text":"@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."},"id":1054,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"8424:5:4","nodeType":"FunctionDefinition","parameters":{"id":1004,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1001,"mutability":"mutable","name":"account","nameLocation":"8438:7:4","nodeType":"VariableDeclaration","scope":1054,"src":"8430:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1000,"name":"address","nodeType":"ElementaryTypeName","src":"8430:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1003,"mutability":"mutable","name":"amount","nameLocation":"8455:6:4","nodeType":"VariableDeclaration","scope":1054,"src":"8447:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1002,"name":"uint256","nodeType":"ElementaryTypeName","src":"8447:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8429:33:4"},"returnParameters":{"id":1005,"nodeType":"ParameterList","parameters":[],"src":"8480:0:4"},"scope":1237,"src":"8415:389:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1125,"nodeType":"Block","src":"9189:511:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1063,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1057,"src":"9207:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1066,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9226:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1065,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9218:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1064,"name":"address","nodeType":"ElementaryTypeName","src":"9218:7:4","typeDescriptions":{}}},"id":1067,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9218:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9207:21:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206275726e2066726f6d20746865207a65726f2061646472657373","id":1069,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9230:35:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","typeString":"literal_string \"ERC20: burn from the zero address\""},"value":"ERC20: burn from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","typeString":"literal_string \"ERC20: burn from the zero address\""}],"id":1062,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9199:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1070,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9199:67:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1071,"nodeType":"ExpressionStatement","src":"9199:67:4"},{"expression":{"arguments":[{"id":1073,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1057,"src":"9298:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1076,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9315:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1075,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9307:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1074,"name":"address","nodeType":"ElementaryTypeName","src":"9307:7:4","typeDescriptions":{}}},"id":1077,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9307:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1078,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1059,"src":"9319:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1072,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1225,"src":"9277:20:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1079,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9277:49:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1080,"nodeType":"ExpressionStatement","src":"9277:49:4"},{"assignments":[1082],"declarations":[{"constant":false,"id":1082,"mutability":"mutable","name":"accountBalance","nameLocation":"9345:14:4","nodeType":"VariableDeclaration","scope":1125,"src":"9337:22:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1081,"name":"uint256","nodeType":"ElementaryTypeName","src":"9337:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1086,"initialValue":{"baseExpression":{"id":1083,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":665,"src":"9362:9:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1085,"indexExpression":{"id":1084,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1057,"src":"9372:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9362:18:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9337:43:4"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1088,"name":"accountBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1082,"src":"9398:14:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1089,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1059,"src":"9416:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9398:24:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365","id":1091,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9424:36:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","typeString":"literal_string \"ERC20: burn amount exceeds balance\""},"value":"ERC20: burn amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","typeString":"literal_string \"ERC20: burn amount exceeds balance\""}],"id":1087,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9390:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1092,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9390:71:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1093,"nodeType":"ExpressionStatement","src":"9390:71:4"},{"id":1102,"nodeType":"UncheckedBlock","src":"9471:79:4","statements":[{"expression":{"id":1100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1094,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":665,"src":"9495:9:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1096,"indexExpression":{"id":1095,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1057,"src":"9505:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9495:18:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1097,"name":"accountBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1082,"src":"9516:14:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1098,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1059,"src":"9533:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9516:23:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9495:44:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1101,"nodeType":"ExpressionStatement","src":"9495:44:4"}]},{"expression":{"id":1105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1103,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":673,"src":"9559:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":1104,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1059,"src":"9575:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9559:22:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1106,"nodeType":"ExpressionStatement","src":"9559:22:4"},{"eventCall":{"arguments":[{"id":1108,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1057,"src":"9606:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1111,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9623:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1110,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9615:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1109,"name":"address","nodeType":"ElementaryTypeName","src":"9615:7:4","typeDescriptions":{}}},"id":1112,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9615:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1113,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1059,"src":"9627:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1107,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1305,"src":"9597:8:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1114,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9597:37:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1115,"nodeType":"EmitStatement","src":"9592:42:4"},{"expression":{"arguments":[{"id":1117,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1057,"src":"9665:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1120,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9682:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1119,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9674:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1118,"name":"address","nodeType":"ElementaryTypeName","src":"9674:7:4","typeDescriptions":{}}},"id":1121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9674:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1122,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1059,"src":"9686:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1116,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1236,"src":"9645:19:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9645:48:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1124,"nodeType":"ExpressionStatement","src":"9645:48:4"}]},"documentation":{"id":1055,"nodeType":"StructuredDocumentation","src":"8810:309:4","text":" @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."},"id":1126,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"9133:5:4","nodeType":"FunctionDefinition","parameters":{"id":1060,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1057,"mutability":"mutable","name":"account","nameLocation":"9147:7:4","nodeType":"VariableDeclaration","scope":1126,"src":"9139:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1056,"name":"address","nodeType":"ElementaryTypeName","src":"9139:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1059,"mutability":"mutable","name":"amount","nameLocation":"9164:6:4","nodeType":"VariableDeclaration","scope":1126,"src":"9156:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1058,"name":"uint256","nodeType":"ElementaryTypeName","src":"9156:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9138:33:4"},"returnParameters":{"id":1061,"nodeType":"ParameterList","parameters":[],"src":"9189:0:4"},"scope":1237,"src":"9124:576:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1170,"nodeType":"Block","src":"10236:257:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1137,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1129,"src":"10254:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1140,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10271:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1139,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10263:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1138,"name":"address","nodeType":"ElementaryTypeName","src":"10263:7:4","typeDescriptions":{}}},"id":1141,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10263:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10254:19:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373","id":1143,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10275:38:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","typeString":"literal_string \"ERC20: approve from the zero address\""},"value":"ERC20: approve from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","typeString":"literal_string \"ERC20: approve from the zero address\""}],"id":1136,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10246:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1144,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10246:68:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1145,"nodeType":"ExpressionStatement","src":"10246:68:4"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1147,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1131,"src":"10332:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1150,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10351:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1149,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10343:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1148,"name":"address","nodeType":"ElementaryTypeName","src":"10343:7:4","typeDescriptions":{}}},"id":1151,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10343:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10332:21:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f2061646472657373","id":1153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10355:36:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","typeString":"literal_string \"ERC20: approve to the zero address\""},"value":"ERC20: approve to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","typeString":"literal_string \"ERC20: approve to the zero address\""}],"id":1146,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10324:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1154,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10324:68:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1155,"nodeType":"ExpressionStatement","src":"10324:68:4"},{"expression":{"id":1162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1156,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":671,"src":"10403:11:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":1159,"indexExpression":{"id":1157,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1129,"src":"10415:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10403:18:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1160,"indexExpression":{"id":1158,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1131,"src":"10422:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10403:27:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1161,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1133,"src":"10433:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10403:36:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1163,"nodeType":"ExpressionStatement","src":"10403:36:4"},{"eventCall":{"arguments":[{"id":1165,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1129,"src":"10463:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1166,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1131,"src":"10470:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1167,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1133,"src":"10479:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1164,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1314,"src":"10454:8:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1168,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10454:32:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1169,"nodeType":"EmitStatement","src":"10449:37:4"}]},"documentation":{"id":1127,"nodeType":"StructuredDocumentation","src":"9706:412:4","text":" @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."},"id":1171,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"10132:8:4","nodeType":"FunctionDefinition","parameters":{"id":1134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1129,"mutability":"mutable","name":"owner","nameLocation":"10158:5:4","nodeType":"VariableDeclaration","scope":1171,"src":"10150:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1128,"name":"address","nodeType":"ElementaryTypeName","src":"10150:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1131,"mutability":"mutable","name":"spender","nameLocation":"10181:7:4","nodeType":"VariableDeclaration","scope":1171,"src":"10173:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1130,"name":"address","nodeType":"ElementaryTypeName","src":"10173:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1133,"mutability":"mutable","name":"amount","nameLocation":"10206:6:4","nodeType":"VariableDeclaration","scope":1171,"src":"10198:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1132,"name":"uint256","nodeType":"ElementaryTypeName","src":"10198:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10140:78:4"},"returnParameters":{"id":1135,"nodeType":"ParameterList","parameters":[],"src":"10236:0:4"},"scope":1237,"src":"10123:370:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1213,"nodeType":"Block","src":"10890:321:4","statements":[{"assignments":[1182],"declarations":[{"constant":false,"id":1182,"mutability":"mutable","name":"currentAllowance","nameLocation":"10908:16:4","nodeType":"VariableDeclaration","scope":1213,"src":"10900:24:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1181,"name":"uint256","nodeType":"ElementaryTypeName","src":"10900:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1187,"initialValue":{"arguments":[{"id":1184,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1174,"src":"10937:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1185,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1176,"src":"10944:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1183,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":791,"src":"10927:9:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":1186,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10927:25:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10900:52:4"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1188,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1182,"src":"10966:16:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":1191,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10991:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1190,"name":"uint256","nodeType":"ElementaryTypeName","src":"10991:7:4","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":1189,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10986:4:4","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1192,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10986:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":1193,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11000:3:4","memberName":"max","nodeType":"MemberAccess","src":"10986:17:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10966:37:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1212,"nodeType":"IfStatement","src":"10962:243:4","trueBody":{"id":1211,"nodeType":"Block","src":"11005:200:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1196,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1182,"src":"11027:16:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1197,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1178,"src":"11047:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11027:26:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20696e73756666696369656e7420616c6c6f77616e6365","id":1199,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11055:31:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","typeString":"literal_string \"ERC20: insufficient allowance\""},"value":"ERC20: insufficient allowance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","typeString":"literal_string \"ERC20: insufficient allowance\""}],"id":1195,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11019:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1200,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11019:68:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1201,"nodeType":"ExpressionStatement","src":"11019:68:4"},{"id":1210,"nodeType":"UncheckedBlock","src":"11101:94:4","statements":[{"expression":{"arguments":[{"id":1203,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1174,"src":"11138:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1204,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1176,"src":"11145:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1205,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1182,"src":"11154:16:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1206,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1178,"src":"11173:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11154:25:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1202,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1171,"src":"11129:8:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1208,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11129:51:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1209,"nodeType":"ExpressionStatement","src":"11129:51:4"}]}]}}]},"documentation":{"id":1172,"nodeType":"StructuredDocumentation","src":"10499:266:4","text":" @dev Spend `amount` form the allowance of `owner` toward `spender`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."},"id":1214,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"10779:15:4","nodeType":"FunctionDefinition","parameters":{"id":1179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1174,"mutability":"mutable","name":"owner","nameLocation":"10812:5:4","nodeType":"VariableDeclaration","scope":1214,"src":"10804:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1173,"name":"address","nodeType":"ElementaryTypeName","src":"10804:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1176,"mutability":"mutable","name":"spender","nameLocation":"10835:7:4","nodeType":"VariableDeclaration","scope":1214,"src":"10827:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1175,"name":"address","nodeType":"ElementaryTypeName","src":"10827:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1178,"mutability":"mutable","name":"amount","nameLocation":"10860:6:4","nodeType":"VariableDeclaration","scope":1214,"src":"10852:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1177,"name":"uint256","nodeType":"ElementaryTypeName","src":"10852:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10794:78:4"},"returnParameters":{"id":1180,"nodeType":"ParameterList","parameters":[],"src":"10890:0:4"},"scope":1237,"src":"10770:441:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1224,"nodeType":"Block","src":"11914:2:4","statements":[]},"documentation":{"id":1215,"nodeType":"StructuredDocumentation","src":"11217:573:4","text":" @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":1225,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nameLocation":"11804:20:4","nodeType":"FunctionDefinition","parameters":{"id":1222,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1217,"mutability":"mutable","name":"from","nameLocation":"11842:4:4","nodeType":"VariableDeclaration","scope":1225,"src":"11834:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1216,"name":"address","nodeType":"ElementaryTypeName","src":"11834:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1219,"mutability":"mutable","name":"to","nameLocation":"11864:2:4","nodeType":"VariableDeclaration","scope":1225,"src":"11856:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1218,"name":"address","nodeType":"ElementaryTypeName","src":"11856:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1221,"mutability":"mutable","name":"amount","nameLocation":"11884:6:4","nodeType":"VariableDeclaration","scope":1225,"src":"11876:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1220,"name":"uint256","nodeType":"ElementaryTypeName","src":"11876:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11824:72:4"},"returnParameters":{"id":1223,"nodeType":"ParameterList","parameters":[],"src":"11914:0:4"},"scope":1237,"src":"11795:121:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1235,"nodeType":"Block","src":"12622:2:4","statements":[]},"documentation":{"id":1226,"nodeType":"StructuredDocumentation","src":"11922:577:4","text":" @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":1236,"implemented":true,"kind":"function","modifiers":[],"name":"_afterTokenTransfer","nameLocation":"12513:19:4","nodeType":"FunctionDefinition","parameters":{"id":1233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1228,"mutability":"mutable","name":"from","nameLocation":"12550:4:4","nodeType":"VariableDeclaration","scope":1236,"src":"12542:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1227,"name":"address","nodeType":"ElementaryTypeName","src":"12542:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1230,"mutability":"mutable","name":"to","nameLocation":"12572:2:4","nodeType":"VariableDeclaration","scope":1236,"src":"12564:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1229,"name":"address","nodeType":"ElementaryTypeName","src":"12564:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1232,"mutability":"mutable","name":"amount","nameLocation":"12592:6:4","nodeType":"VariableDeclaration","scope":1236,"src":"12584:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1231,"name":"uint256","nodeType":"ElementaryTypeName","src":"12584:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12532:72:4"},"returnParameters":{"id":1234,"nodeType":"ParameterList","parameters":[],"src":"12622:0:4"},"scope":1237,"src":"12504:120:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1238,"src":"1403:11223:4","usedErrors":[]}],"src":"105:12522:4"},"id":4},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[1315]},"id":1316,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1239,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"106:23:5"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":1240,"nodeType":"StructuredDocumentation","src":"131:70:5","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":1315,"linearizedBaseContracts":[1315],"name":"IERC20","nameLocation":"212:6:5","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1241,"nodeType":"StructuredDocumentation","src":"225:66:5","text":" @dev Returns the amount of tokens in existence."},"functionSelector":"18160ddd","id":1246,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"305:11:5","nodeType":"FunctionDefinition","parameters":{"id":1242,"nodeType":"ParameterList","parameters":[],"src":"316:2:5"},"returnParameters":{"id":1245,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1244,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1246,"src":"342:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1243,"name":"uint256","nodeType":"ElementaryTypeName","src":"342:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"341:9:5"},"scope":1315,"src":"296:55:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1247,"nodeType":"StructuredDocumentation","src":"357:72:5","text":" @dev Returns the amount of tokens owned by `account`."},"functionSelector":"70a08231","id":1254,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"443:9:5","nodeType":"FunctionDefinition","parameters":{"id":1250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1249,"mutability":"mutable","name":"account","nameLocation":"461:7:5","nodeType":"VariableDeclaration","scope":1254,"src":"453:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1248,"name":"address","nodeType":"ElementaryTypeName","src":"453:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"452:17:5"},"returnParameters":{"id":1253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1252,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1254,"src":"493:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1251,"name":"uint256","nodeType":"ElementaryTypeName","src":"493:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"492:9:5"},"scope":1315,"src":"434:68:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1255,"nodeType":"StructuredDocumentation","src":"508:202:5","text":" @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":1264,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"724:8:5","nodeType":"FunctionDefinition","parameters":{"id":1260,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1257,"mutability":"mutable","name":"to","nameLocation":"741:2:5","nodeType":"VariableDeclaration","scope":1264,"src":"733:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1256,"name":"address","nodeType":"ElementaryTypeName","src":"733:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1259,"mutability":"mutable","name":"amount","nameLocation":"753:6:5","nodeType":"VariableDeclaration","scope":1264,"src":"745:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1258,"name":"uint256","nodeType":"ElementaryTypeName","src":"745:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"732:28:5"},"returnParameters":{"id":1263,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1262,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1264,"src":"779:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1261,"name":"bool","nodeType":"ElementaryTypeName","src":"779:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"778:6:5"},"scope":1315,"src":"715:70:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1265,"nodeType":"StructuredDocumentation","src":"791:264:5","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":1274,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1069:9:5","nodeType":"FunctionDefinition","parameters":{"id":1270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1267,"mutability":"mutable","name":"owner","nameLocation":"1087:5:5","nodeType":"VariableDeclaration","scope":1274,"src":"1079:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1266,"name":"address","nodeType":"ElementaryTypeName","src":"1079:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1269,"mutability":"mutable","name":"spender","nameLocation":"1102:7:5","nodeType":"VariableDeclaration","scope":1274,"src":"1094:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1268,"name":"address","nodeType":"ElementaryTypeName","src":"1094:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1078:32:5"},"returnParameters":{"id":1273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1272,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1274,"src":"1134:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1271,"name":"uint256","nodeType":"ElementaryTypeName","src":"1134:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1133:9:5"},"scope":1315,"src":"1060:83:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1275,"nodeType":"StructuredDocumentation","src":"1149:642:5","text":" @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":1284,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"1805:7:5","nodeType":"FunctionDefinition","parameters":{"id":1280,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1277,"mutability":"mutable","name":"spender","nameLocation":"1821:7:5","nodeType":"VariableDeclaration","scope":1284,"src":"1813:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1276,"name":"address","nodeType":"ElementaryTypeName","src":"1813:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1279,"mutability":"mutable","name":"amount","nameLocation":"1838:6:5","nodeType":"VariableDeclaration","scope":1284,"src":"1830:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1278,"name":"uint256","nodeType":"ElementaryTypeName","src":"1830:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1812:33:5"},"returnParameters":{"id":1283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1282,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1284,"src":"1864:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1281,"name":"bool","nodeType":"ElementaryTypeName","src":"1864:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1863:6:5"},"scope":1315,"src":"1796:74:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1285,"nodeType":"StructuredDocumentation","src":"1876:287:5","text":" @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":1296,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2177:12:5","nodeType":"FunctionDefinition","parameters":{"id":1292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1287,"mutability":"mutable","name":"from","nameLocation":"2207:4:5","nodeType":"VariableDeclaration","scope":1296,"src":"2199:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1286,"name":"address","nodeType":"ElementaryTypeName","src":"2199:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1289,"mutability":"mutable","name":"to","nameLocation":"2229:2:5","nodeType":"VariableDeclaration","scope":1296,"src":"2221:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1288,"name":"address","nodeType":"ElementaryTypeName","src":"2221:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1291,"mutability":"mutable","name":"amount","nameLocation":"2249:6:5","nodeType":"VariableDeclaration","scope":1296,"src":"2241:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1290,"name":"uint256","nodeType":"ElementaryTypeName","src":"2241:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2189:72:5"},"returnParameters":{"id":1295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1294,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1296,"src":"2280:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1293,"name":"bool","nodeType":"ElementaryTypeName","src":"2280:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2279:6:5"},"scope":1315,"src":"2168:118:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"anonymous":false,"documentation":{"id":1297,"nodeType":"StructuredDocumentation","src":"2292:158:5","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":1305,"name":"Transfer","nameLocation":"2461:8:5","nodeType":"EventDefinition","parameters":{"id":1304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1299,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"2486:4:5","nodeType":"VariableDeclaration","scope":1305,"src":"2470:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1298,"name":"address","nodeType":"ElementaryTypeName","src":"2470:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1301,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"2508:2:5","nodeType":"VariableDeclaration","scope":1305,"src":"2492:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1300,"name":"address","nodeType":"ElementaryTypeName","src":"2492:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1303,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"2520:5:5","nodeType":"VariableDeclaration","scope":1305,"src":"2512:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1302,"name":"uint256","nodeType":"ElementaryTypeName","src":"2512:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2469:57:5"},"src":"2455:72:5"},{"anonymous":false,"documentation":{"id":1306,"nodeType":"StructuredDocumentation","src":"2533:148:5","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":1314,"name":"Approval","nameLocation":"2692:8:5","nodeType":"EventDefinition","parameters":{"id":1313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1308,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"2717:5:5","nodeType":"VariableDeclaration","scope":1314,"src":"2701:21:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1307,"name":"address","nodeType":"ElementaryTypeName","src":"2701:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1310,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"2740:7:5","nodeType":"VariableDeclaration","scope":1314,"src":"2724:23:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1309,"name":"address","nodeType":"ElementaryTypeName","src":"2724:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1312,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"2757:5:5","nodeType":"VariableDeclaration","scope":1314,"src":"2749:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1311,"name":"uint256","nodeType":"ElementaryTypeName","src":"2749:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2700:63:5"},"src":"2686:78:5"}],"scope":1316,"src":"202:2564:5","usedErrors":[]}],"src":"106:2661:5"},"id":5},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[1315],"IERC20Metadata":[1340]},"id":1341,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1317,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"110:23:6"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":1318,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1341,"sourceUnit":1316,"src":"135:23:6","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1320,"name":"IERC20","nameLocations":["305:6:6"],"nodeType":"IdentifierPath","referencedDeclaration":1315,"src":"305:6:6"},"id":1321,"nodeType":"InheritanceSpecifier","src":"305:6:6"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":1319,"nodeType":"StructuredDocumentation","src":"160:116:6","text":" @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"},"fullyImplemented":false,"id":1340,"linearizedBaseContracts":[1340,1315],"name":"IERC20Metadata","nameLocation":"287:14:6","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1322,"nodeType":"StructuredDocumentation","src":"318:54:6","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":1327,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"386:4:6","nodeType":"FunctionDefinition","parameters":{"id":1323,"nodeType":"ParameterList","parameters":[],"src":"390:2:6"},"returnParameters":{"id":1326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1325,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1327,"src":"416:13:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1324,"name":"string","nodeType":"ElementaryTypeName","src":"416:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"415:15:6"},"scope":1340,"src":"377:54:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1328,"nodeType":"StructuredDocumentation","src":"437:56:6","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":1333,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"507:6:6","nodeType":"FunctionDefinition","parameters":{"id":1329,"nodeType":"ParameterList","parameters":[],"src":"513:2:6"},"returnParameters":{"id":1332,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1331,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1333,"src":"539:13:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1330,"name":"string","nodeType":"ElementaryTypeName","src":"539:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"538:15:6"},"scope":1340,"src":"498:56:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1334,"nodeType":"StructuredDocumentation","src":"560:65:6","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":1339,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"639:8:6","nodeType":"FunctionDefinition","parameters":{"id":1335,"nodeType":"ParameterList","parameters":[],"src":"647:2:6"},"returnParameters":{"id":1338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1337,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1339,"src":"673:5:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1336,"name":"uint8","nodeType":"ElementaryTypeName","src":"673:5:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"672:7:6"},"scope":1340,"src":"630:50:6","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1341,"src":"277:405:6","usedErrors":[]}],"src":"110:573:6"},"id":6},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[1362]},"id":1363,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1342,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"86:23:7"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":1343,"nodeType":"StructuredDocumentation","src":"111:496:7","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":1362,"linearizedBaseContracts":[1362],"name":"Context","nameLocation":"626:7:7","nodeType":"ContractDefinition","nodes":[{"body":{"id":1351,"nodeType":"Block","src":"702:34:7","statements":[{"expression":{"expression":{"id":1348,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"719:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"723:6:7","memberName":"sender","nodeType":"MemberAccess","src":"719:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1347,"id":1350,"nodeType":"Return","src":"712:17:7"}]},"id":1352,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"649:10:7","nodeType":"FunctionDefinition","parameters":{"id":1344,"nodeType":"ParameterList","parameters":[],"src":"659:2:7"},"returnParameters":{"id":1347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1346,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1352,"src":"693:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1345,"name":"address","nodeType":"ElementaryTypeName","src":"693:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"692:9:7"},"scope":1362,"src":"640:96:7","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1360,"nodeType":"Block","src":"809:32:7","statements":[{"expression":{"expression":{"id":1357,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"826:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"830:4:7","memberName":"data","nodeType":"MemberAccess","src":"826:8:7","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":1356,"id":1359,"nodeType":"Return","src":"819:15:7"}]},"id":1361,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"751:8:7","nodeType":"FunctionDefinition","parameters":{"id":1353,"nodeType":"ParameterList","parameters":[],"src":"759:2:7"},"returnParameters":{"id":1356,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1355,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1361,"src":"793:14:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1354,"name":"bytes","nodeType":"ElementaryTypeName","src":"793:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"792:16:7"},"scope":1362,"src":"742:99:7","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":1363,"src":"608:235:7","usedErrors":[]}],"src":"86:758:7"},"id":7},"contracts/IClientOrder.sol":{"ast":{"absolutePath":"contracts/IClientOrder.sol","exportedSymbols":{"IClientOrder":[1395]},"id":1396,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1364,"literals":["solidity","0.8",".19"],"nodeType":"PragmaDirective","src":"32:23:8"},{"abstract":false,"baseContracts":[],"canonicalName":"IClientOrder","contractDependencies":[],"contractKind":"interface","documentation":{"id":1365,"nodeType":"StructuredDocumentation","src":"57:150:8","text":" @title Trader/Broker facing order struct\n @notice this order struct is sent to the limit order book and converted into an IPerpetualOrder"},"fullyImplemented":true,"id":1395,"linearizedBaseContracts":[1395],"name":"IClientOrder","nameLocation":"218:12:8","nodeType":"ContractDefinition","nodes":[{"canonicalName":"IClientOrder.ClientOrder","id":1394,"members":[{"constant":false,"id":1367,"mutability":"mutable","name":"iPerpetualId","nameLocation":"273:12:8","nodeType":"VariableDeclaration","scope":1394,"src":"266:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":1366,"name":"uint24","nodeType":"ElementaryTypeName","src":"266:6:8","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"},{"constant":false,"id":1369,"mutability":"mutable","name":"fLimitPrice","nameLocation":"332:11:8","nodeType":"VariableDeclaration","scope":1394,"src":"325:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":1368,"name":"int128","nodeType":"ElementaryTypeName","src":"325:6:8","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"},{"constant":false,"id":1371,"mutability":"mutable","name":"leverageTDR","nameLocation":"446:11:8","nodeType":"VariableDeclaration","scope":1394,"src":"439:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1370,"name":"uint16","nodeType":"ElementaryTypeName","src":"439:6:8","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":1373,"mutability":"mutable","name":"executionTimestamp","nameLocation":"582:18:8","nodeType":"VariableDeclaration","scope":1394,"src":"575:25:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1372,"name":"uint32","nodeType":"ElementaryTypeName","src":"575:6:8","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":1375,"mutability":"mutable","name":"flags","nameLocation":"693:5:8","nodeType":"VariableDeclaration","scope":1394,"src":"686:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1374,"name":"uint32","nodeType":"ElementaryTypeName","src":"686:6:8","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":1377,"mutability":"mutable","name":"iDeadline","nameLocation":"762:9:8","nodeType":"VariableDeclaration","scope":1394,"src":"755:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1376,"name":"uint32","nodeType":"ElementaryTypeName","src":"755:6:8","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":1379,"mutability":"mutable","name":"brokerAddr","nameLocation":"839:10:8","nodeType":"VariableDeclaration","scope":1394,"src":"831:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1378,"name":"address","nodeType":"ElementaryTypeName","src":"831:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1381,"mutability":"mutable","name":"fTriggerPrice","nameLocation":"905:13:8","nodeType":"VariableDeclaration","scope":1394,"src":"898:20:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":1380,"name":"int128","nodeType":"ElementaryTypeName","src":"898:6:8","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"},{"constant":false,"id":1383,"mutability":"mutable","name":"fAmount","nameLocation":"1059:7:8","nodeType":"VariableDeclaration","scope":1394,"src":"1052:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":1382,"name":"int128","nodeType":"ElementaryTypeName","src":"1052:6:8","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"},{"constant":false,"id":1385,"mutability":"mutable","name":"parentChildDigest1","nameLocation":"1147:18:8","nodeType":"VariableDeclaration","scope":1394,"src":"1139:26:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1384,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1139:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1387,"mutability":"mutable","name":"traderAddr","nameLocation":"1219:10:8","nodeType":"VariableDeclaration","scope":1394,"src":"1211:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1386,"name":"address","nodeType":"ElementaryTypeName","src":"1211:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1389,"mutability":"mutable","name":"parentChildDigest2","nameLocation":"1272:18:8","nodeType":"VariableDeclaration","scope":1394,"src":"1264:26:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1388,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1264:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1391,"mutability":"mutable","name":"brokerFeeTbps","nameLocation":"1343:13:8","nodeType":"VariableDeclaration","scope":1394,"src":"1336:20:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1390,"name":"uint16","nodeType":"ElementaryTypeName","src":"1336:6:8","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":1393,"mutability":"mutable","name":"brokerSignature","nameLocation":"1412:15:8","nodeType":"VariableDeclaration","scope":1394,"src":"1406:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":1392,"name":"bytes","nodeType":"ElementaryTypeName","src":"1406:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"ClientOrder","nameLocation":"244:11:8","nodeType":"StructDefinition","scope":1395,"src":"237:1380:8","visibility":"public"}],"scope":1396,"src":"208:1411:8","usedErrors":[]}],"src":"32:1588:8"},"id":8},"contracts/ILiquidityPoolData.sol":{"ast":{"absolutePath":"contracts/ILiquidityPoolData.sol","exportedSymbols":{"ILiquidityPoolData":[1437]},"id":1438,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1397,"literals":["solidity","0.8",".19"],"nodeType":"PragmaDirective","src":"32:23:9"},{"abstract":false,"baseContracts":[],"canonicalName":"ILiquidityPoolData","contractDependencies":[],"contractKind":"interface","fullyImplemented":true,"id":1437,"linearizedBaseContracts":[1437],"name":"ILiquidityPoolData","nameLocation":"67:18:9","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ILiquidityPoolData.LiquidityPoolData","id":1436,"members":[{"constant":false,"id":1399,"mutability":"mutable","name":"isRunning","nameLocation":"137:9:9","nodeType":"VariableDeclaration","scope":1436,"src":"132:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1398,"name":"bool","nodeType":"ElementaryTypeName","src":"132:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1401,"mutability":"mutable","name":"iPerpetualCount","nameLocation":"175:15:9","nodeType":"VariableDeclaration","scope":1436,"src":"169:21:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1400,"name":"uint8","nodeType":"ElementaryTypeName","src":"169:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1403,"mutability":"mutable","name":"id","nameLocation":"219:2:9","nodeType":"VariableDeclaration","scope":1436,"src":"213:8:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1402,"name":"uint8","nodeType":"ElementaryTypeName","src":"213:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1405,"mutability":"mutable","name":"fCeilPnLShare","nameLocation":"276:13:9","nodeType":"VariableDeclaration","scope":1436,"src":"270:19:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1404,"name":"int32","nodeType":"ElementaryTypeName","src":"270:5:9","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"},{"constant":false,"id":1407,"mutability":"mutable","name":"marginTokenDecimals","nameLocation":"380:19:9","nodeType":"VariableDeclaration","scope":1436,"src":"374:25:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1406,"name":"uint8","nodeType":"ElementaryTypeName","src":"374:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1409,"mutability":"mutable","name":"iTargetPoolSizeUpdateTime","nameLocation":"489:25:9","nodeType":"VariableDeclaration","scope":1436,"src":"482:32:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1408,"name":"uint16","nodeType":"ElementaryTypeName","src":"482:6:9","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":1411,"mutability":"mutable","name":"marginTokenAddress","nameLocation":"614:18:9","nodeType":"VariableDeclaration","scope":1436,"src":"606:26:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1410,"name":"address","nodeType":"ElementaryTypeName","src":"606:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1413,"mutability":"mutable","name":"prevAnchor","nameLocation":"715:10:9","nodeType":"VariableDeclaration","scope":1436,"src":"708:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1412,"name":"uint64","nodeType":"ElementaryTypeName","src":"708:6:9","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":1415,"mutability":"mutable","name":"fRedemptionRate","nameLocation":"816:15:9","nodeType":"VariableDeclaration","scope":1436,"src":"809:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":1414,"name":"int128","nodeType":"ElementaryTypeName","src":"809:6:9","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"},{"constant":false,"id":1417,"mutability":"mutable","name":"shareTokenAddress","nameLocation":"906:17:9","nodeType":"VariableDeclaration","scope":1436,"src":"898:25:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1416,"name":"address","nodeType":"ElementaryTypeName","src":"898:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1419,"mutability":"mutable","name":"fPnLparticipantsCashCC","nameLocation":"978:22:9","nodeType":"VariableDeclaration","scope":1436,"src":"971:29:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":1418,"name":"int128","nodeType":"ElementaryTypeName","src":"971:6:9","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"},{"constant":false,"id":1421,"mutability":"mutable","name":"fTargetAMMFundSize","nameLocation":"1088:18:9","nodeType":"VariableDeclaration","scope":1436,"src":"1081:25:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":1420,"name":"int128","nodeType":"ElementaryTypeName","src":"1081:6:9","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"},{"constant":false,"id":1423,"mutability":"mutable","name":"fDefaultFundCashCC","nameLocation":"1208:18:9","nodeType":"VariableDeclaration","scope":1436,"src":"1201:25:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":1422,"name":"int128","nodeType":"ElementaryTypeName","src":"1201:6:9","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"},{"constant":false,"id":1425,"mutability":"mutable","name":"fTargetDFSize","nameLocation":"1269:13:9","nodeType":"VariableDeclaration","scope":1436,"src":"1262:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":1424,"name":"int128","nodeType":"ElementaryTypeName","src":"1262:6:9","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"},{"constant":false,"id":1427,"mutability":"mutable","name":"fBrokerCollateralLotSize","nameLocation":"1386:24:9","nodeType":"VariableDeclaration","scope":1436,"src":"1379:31:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":1426,"name":"int128","nodeType":"ElementaryTypeName","src":"1379:6:9","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"},{"constant":false,"id":1429,"mutability":"mutable","name":"prevTokenAmount","nameLocation":"1521:15:9","nodeType":"VariableDeclaration","scope":1436,"src":"1513:23:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":1428,"name":"uint128","nodeType":"ElementaryTypeName","src":"1513:7:9","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":1431,"mutability":"mutable","name":"nextTokenAmount","nameLocation":"1588:15:9","nodeType":"VariableDeclaration","scope":1436,"src":"1580:23:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":1430,"name":"uint128","nodeType":"ElementaryTypeName","src":"1580:7:9","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":1433,"mutability":"mutable","name":"totalSupplyShareToken","nameLocation":"1634:21:9","nodeType":"VariableDeclaration","scope":1436,"src":"1626:29:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":1432,"name":"uint128","nodeType":"ElementaryTypeName","src":"1626:7:9","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":1435,"mutability":"mutable","name":"fBrokerFundCashCC","nameLocation":"1706:17:9","nodeType":"VariableDeclaration","scope":1436,"src":"1699:24:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":1434,"name":"int128","nodeType":"ElementaryTypeName","src":"1699:6:9","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"name":"LiquidityPoolData","nameLocation":"100:17:9","nodeType":"StructDefinition","scope":1437,"src":"93:1677:9","visibility":"public"}],"scope":1438,"src":"57:1716:9","usedErrors":[]}],"src":"32:1741:9"},"id":9},"contracts/OnChainTrader.sol":{"ast":{"absolutePath":"contracts/OnChainTrader.sol","exportedSymbols":{"AddressUpgradeable":[544],"Context":[1362],"D18MarginAccount":[1518],"ERC20":[1237],"IClientOrder":[1395],"IERC20":[1315],"IERC20Metadata":[1340],"IERC20Upgradeable":[77],"ILiquidityPoolData":[1437],"MarginAccount":[1509],"OnChainTrader":[2100],"OrderBookContractInterface":[1455],"Ownable":[649],"PerpetualsContractInterface":[1492],"SafeERC20Upgradeable":[301]},"id":2101,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1439,"literals":["solidity","0.8",".19"],"nodeType":"PragmaDirective","src":"32:23:10"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":1440,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2101,"sourceUnit":1238,"src":"57:55:10","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":1441,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2101,"sourceUnit":650,"src":"113:52:10","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol","file":"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol","id":1442,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2101,"sourceUnit":78,"src":"166:79:10","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol","file":"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol","id":1443,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2101,"sourceUnit":302,"src":"246:88:10","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/IClientOrder.sol","file":"./IClientOrder.sol","id":1444,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2101,"sourceUnit":1396,"src":"336:28:10","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/ILiquidityPoolData.sol","file":"./ILiquidityPoolData.sol","id":1445,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2101,"sourceUnit":1438,"src":"365:34:10","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"OrderBookContractInterface","contractDependencies":[],"contractKind":"interface","documentation":{"id":1446,"nodeType":"StructuredDocumentation","src":"401:636:10","text":" @title Example contract to interact with D8X perpetuals on-chain\n @notice\n - This contract acts as a trader. The contract is ownable;\n   Trade executions are permissioned. The margin tokens are required\n   to be owned by the contract.\n - D8X Perpetuals use ABDK 128x128 number format. This contract has an interface that uses\n   a signed decimal-18 convention (decimal number 1 maps to decimal-18 number 1e18).\n - Ensure the perpetuals-contract is allowed to spend this contracts margin tokens (use approveAmount)\n - Send orders to order book via postOrder\n - Check positions using function getMarginAccount"},"fullyImplemented":false,"id":1455,"linearizedBaseContracts":[1455],"name":"OrderBookContractInterface","nameLocation":"1050:26:10","nodeType":"ContractDefinition","nodes":[{"functionSelector":"489cc5e9","id":1454,"implemented":false,"kind":"function","modifiers":[],"name":"postOrder","nameLocation":"1092:9:10","nodeType":"FunctionDefinition","parameters":{"id":1452,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1449,"mutability":"mutable","name":"_order","nameLocation":"1136:6:10","nodeType":"VariableDeclaration","scope":1454,"src":"1102:40:10","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_ClientOrder_$1394_calldata_ptr","typeString":"struct IClientOrder.ClientOrder"},"typeName":{"id":1448,"nodeType":"UserDefinedTypeName","pathNode":{"id":1447,"name":"IClientOrder.ClientOrder","nameLocations":["1102:12:10","1115:11:10"],"nodeType":"IdentifierPath","referencedDeclaration":1394,"src":"1102:24:10"},"referencedDeclaration":1394,"src":"1102:24:10","typeDescriptions":{"typeIdentifier":"t_struct$_ClientOrder_$1394_storage_ptr","typeString":"struct IClientOrder.ClientOrder"}},"visibility":"internal"},{"constant":false,"id":1451,"mutability":"mutable","name":"_signature","nameLocation":"1159:10:10","nodeType":"VariableDeclaration","scope":1454,"src":"1144:25:10","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1450,"name":"bytes","nodeType":"ElementaryTypeName","src":"1144:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1101:69:10"},"returnParameters":{"id":1453,"nodeType":"ParameterList","parameters":[],"src":"1187:0:10"},"scope":1455,"src":"1083:105:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2101,"src":"1040:150:10","usedErrors":[]},{"abstract":false,"baseContracts":[],"canonicalName":"PerpetualsContractInterface","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":1492,"linearizedBaseContracts":[1492],"name":"PerpetualsContractInterface","nameLocation":"1202:27:10","nodeType":"ContractDefinition","nodes":[{"functionSelector":"7aa744d6","id":1465,"implemented":false,"kind":"function","modifiers":[],"name":"getMarginAccount","nameLocation":"1250:16:10","nodeType":"FunctionDefinition","parameters":{"id":1460,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1457,"mutability":"mutable","name":"_perpetualId","nameLocation":"1274:12:10","nodeType":"VariableDeclaration","scope":1465,"src":"1267:19:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":1456,"name":"uint24","nodeType":"ElementaryTypeName","src":"1267:6:10","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"},{"constant":false,"id":1459,"mutability":"mutable","name":"_traderAddress","nameLocation":"1296:14:10","nodeType":"VariableDeclaration","scope":1465,"src":"1288:22:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1458,"name":"address","nodeType":"ElementaryTypeName","src":"1288:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1266:45:10"},"returnParameters":{"id":1464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1463,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1465,"src":"1359:20:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_MarginAccount_$1509_memory_ptr","typeString":"struct MarginAccount"},"typeName":{"id":1462,"nodeType":"UserDefinedTypeName","pathNode":{"id":1461,"name":"MarginAccount","nameLocations":["1359:13:10"],"nodeType":"IdentifierPath","referencedDeclaration":1509,"src":"1359:13:10"},"referencedDeclaration":1509,"src":"1359:13:10","typeDescriptions":{"typeIdentifier":"t_struct$_MarginAccount_$1509_storage_ptr","typeString":"struct MarginAccount"}},"visibility":"internal"}],"src":"1358:22:10"},"scope":1492,"src":"1241:140:10","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"fbc3ac3c","id":1476,"implemented":false,"kind":"function","modifiers":[],"name":"getMaxSignedOpenTradeSizeForPos","nameLocation":"1396:31:10","nodeType":"FunctionDefinition","parameters":{"id":1472,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1467,"mutability":"mutable","name":"_perpetualId","nameLocation":"1444:12:10","nodeType":"VariableDeclaration","scope":1476,"src":"1437:19:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":1466,"name":"uint24","nodeType":"ElementaryTypeName","src":"1437:6:10","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"},{"constant":false,"id":1469,"mutability":"mutable","name":"_fCurrentTraderPos","nameLocation":"1473:18:10","nodeType":"VariableDeclaration","scope":1476,"src":"1466:25:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":1468,"name":"int128","nodeType":"ElementaryTypeName","src":"1466:6:10","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"},{"constant":false,"id":1471,"mutability":"mutable","name":"_isBuy","nameLocation":"1506:6:10","nodeType":"VariableDeclaration","scope":1476,"src":"1501:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1470,"name":"bool","nodeType":"ElementaryTypeName","src":"1501:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1427:91:10"},"returnParameters":{"id":1475,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1474,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1476,"src":"1542:6:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":1473,"name":"int128","nodeType":"ElementaryTypeName","src":"1542:6:10","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"1541:8:10"},"scope":1492,"src":"1387:163:10","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"1e780ba4","id":1483,"implemented":false,"kind":"function","modifiers":[],"name":"getOrderBookAddress","nameLocation":"1565:19:10","nodeType":"FunctionDefinition","parameters":{"id":1479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1478,"mutability":"mutable","name":"_perpetualId","nameLocation":"1592:12:10","nodeType":"VariableDeclaration","scope":1483,"src":"1585:19:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":1477,"name":"uint24","nodeType":"ElementaryTypeName","src":"1585:6:10","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"1584:21:10"},"returnParameters":{"id":1482,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1481,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1483,"src":"1629:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1480,"name":"address","nodeType":"ElementaryTypeName","src":"1629:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1628:9:10"},"scope":1492,"src":"1556:82:10","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"30af7c72","id":1491,"implemented":false,"kind":"function","modifiers":[],"name":"getLiquidityPool","nameLocation":"1652:16:10","nodeType":"FunctionDefinition","parameters":{"id":1486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1485,"mutability":"mutable","name":"_poolId","nameLocation":"1675:7:10","nodeType":"VariableDeclaration","scope":1491,"src":"1669:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1484,"name":"uint8","nodeType":"ElementaryTypeName","src":"1669:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"1668:15:10"},"returnParameters":{"id":1490,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1489,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1491,"src":"1731:43:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_LiquidityPoolData_$1436_memory_ptr","typeString":"struct ILiquidityPoolData.LiquidityPoolData"},"typeName":{"id":1488,"nodeType":"UserDefinedTypeName","pathNode":{"id":1487,"name":"ILiquidityPoolData.LiquidityPoolData","nameLocations":["1731:18:10","1750:17:10"],"nodeType":"IdentifierPath","referencedDeclaration":1436,"src":"1731:36:10"},"referencedDeclaration":1436,"src":"1731:36:10","typeDescriptions":{"typeIdentifier":"t_struct$_LiquidityPoolData_$1436_storage_ptr","typeString":"struct ILiquidityPoolData.LiquidityPoolData"}},"visibility":"internal"}],"src":"1730:45:10"},"scope":1492,"src":"1643:133:10","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2101,"src":"1192:586:10","usedErrors":[]},{"canonicalName":"MarginAccount","id":1509,"members":[{"constant":false,"id":1494,"mutability":"mutable","name":"fLockedInValueQC","nameLocation":"1897:16:10","nodeType":"VariableDeclaration","scope":1509,"src":"1890:23:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":1493,"name":"int128","nodeType":"ElementaryTypeName","src":"1890:6:10","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"},{"constant":false,"id":1496,"mutability":"mutable","name":"fCashCC","nameLocation":"1977:7:10","nodeType":"VariableDeclaration","scope":1509,"src":"1970:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":1495,"name":"int128","nodeType":"ElementaryTypeName","src":"1970:6:10","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"},{"constant":false,"id":1498,"mutability":"mutable","name":"fPositionBC","nameLocation":"2053:11:10","nodeType":"VariableDeclaration","scope":1509,"src":"2046:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":1497,"name":"int128","nodeType":"ElementaryTypeName","src":"2046:6:10","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"},{"constant":false,"id":1500,"mutability":"mutable","name":"fUnitAccumulatedFundingStart","nameLocation":"2131:28:10","nodeType":"VariableDeclaration","scope":1509,"src":"2124:35:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":1499,"name":"int128","nodeType":"ElementaryTypeName","src":"2124:6:10","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"},{"constant":false,"id":1502,"mutability":"mutable","name":"iLastOpenTimestamp","nameLocation":"2200:18:10","nodeType":"VariableDeclaration","scope":1509,"src":"2193:25:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1501,"name":"uint64","nodeType":"ElementaryTypeName","src":"2193:6:10","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":1504,"mutability":"mutable","name":"feeTbps","nameLocation":"2299:7:10","nodeType":"VariableDeclaration","scope":1509,"src":"2292:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1503,"name":"uint16","nodeType":"ElementaryTypeName","src":"2292:6:10","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":1506,"mutability":"mutable","name":"brokerFeeTbps","nameLocation":"2361:13:10","nodeType":"VariableDeclaration","scope":1509,"src":"2354:20:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1505,"name":"uint16","nodeType":"ElementaryTypeName","src":"2354:6:10","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":1508,"mutability":"mutable","name":"positionId","nameLocation":"2428:10:10","nodeType":"VariableDeclaration","scope":1509,"src":"2420:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":1507,"name":"bytes16","nodeType":"ElementaryTypeName","src":"2420:7:10","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"visibility":"internal"}],"name":"MarginAccount","nameLocation":"1870:13:10","nodeType":"StructDefinition","scope":2101,"src":"1863:677:10","visibility":"public"},{"canonicalName":"D18MarginAccount","id":1518,"members":[{"constant":false,"id":1511,"mutability":"mutable","name":"lockedInValueQCD18","nameLocation":"2668:18:10","nodeType":"VariableDeclaration","scope":1518,"src":"2661:25:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1510,"name":"int256","nodeType":"ElementaryTypeName","src":"2661:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":1513,"mutability":"mutable","name":"cashCCD18","nameLocation":"2750:9:10","nodeType":"VariableDeclaration","scope":1518,"src":"2743:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1512,"name":"int256","nodeType":"ElementaryTypeName","src":"2743:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":1515,"mutability":"mutable","name":"positionSizeBCD18","nameLocation":"2828:17:10","nodeType":"VariableDeclaration","scope":1518,"src":"2821:24:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1514,"name":"int256","nodeType":"ElementaryTypeName","src":"2821:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":1517,"mutability":"mutable","name":"positionId","nameLocation":"2913:10:10","nodeType":"VariableDeclaration","scope":1518,"src":"2905:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":1516,"name":"bytes16","nodeType":"ElementaryTypeName","src":"2905:7:10","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"visibility":"internal"}],"name":"D18MarginAccount","nameLocation":"2638:16:10","nodeType":"StructDefinition","scope":2101,"src":"2631:394:10","visibility":"public"},{"abstract":false,"baseContracts":[{"baseName":{"id":1519,"name":"Ownable","nameLocations":["3053:7:10"],"nodeType":"IdentifierPath","referencedDeclaration":649,"src":"3053:7:10"},"id":1520,"nodeType":"InheritanceSpecifier","src":"3053:7:10"}],"canonicalName":"OnChainTrader","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":2100,"linearizedBaseContracts":[2100,649,1362],"name":"OnChainTrader","nameLocation":"3036:13:10","nodeType":"ContractDefinition","nodes":[{"global":false,"id":1524,"libraryName":{"id":1521,"name":"SafeERC20Upgradeable","nameLocations":["3073:20:10"],"nodeType":"IdentifierPath","referencedDeclaration":301,"src":"3073:20:10"},"nodeType":"UsingForDirective","src":"3067:49:10","typeName":{"id":1523,"nodeType":"UserDefinedTypeName","pathNode":{"id":1522,"name":"IERC20Upgradeable","nameLocations":["3098:17:10"],"nodeType":"IdentifierPath","referencedDeclaration":77,"src":"3098:17:10"},"referencedDeclaration":77,"src":"3098:17:10","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$77","typeString":"contract IERC20Upgradeable"}}},{"anonymous":false,"eventSelector":"2858238d037e52471d3ad4944d280cdb1fd3b479a3fdf698bb04e99572e6efa8","id":1528,"name":"PerpetualOrderSubmitFailed","nameLocation":"3128:26:10","nodeType":"EventDefinition","parameters":{"id":1527,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1526,"indexed":false,"mutability":"mutable","name":"reason","nameLocation":"3162:6:10","nodeType":"VariableDeclaration","scope":1528,"src":"3155:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1525,"name":"string","nodeType":"ElementaryTypeName","src":"3155:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3154:15:10"},"src":"3122:48:10"},{"anonymous":false,"eventSelector":"742895f70ed9b3e00487db3827a00b9c91de8360cd96129050b8a82c99de4862","id":1534,"name":"PerpetualOrderSubmitSuccess","nameLocation":"3181:27:10","nodeType":"EventDefinition","parameters":{"id":1533,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1530,"indexed":false,"mutability":"mutable","name":"amountDec18","nameLocation":"3216:11:10","nodeType":"VariableDeclaration","scope":1534,"src":"3209:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1529,"name":"int256","nodeType":"ElementaryTypeName","src":"3209:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":1532,"indexed":false,"mutability":"mutable","name":"leverageTDR","nameLocation":"3236:11:10","nodeType":"VariableDeclaration","scope":1534,"src":"3229:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1531,"name":"uint16","nodeType":"ElementaryTypeName","src":"3229:6:10","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"3208:40:10"},"src":"3175:74:10"},{"anonymous":false,"eventSelector":"5222a91cec499c7c85c5fcb8b8ddfb81880ec40273d8cda372740d8a97fa6ec7","id":1542,"name":"PerpetualAdded","nameLocation":"3260:14:10","nodeType":"EventDefinition","parameters":{"id":1541,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1536,"indexed":false,"mutability":"mutable","name":"perpetualId","nameLocation":"3282:11:10","nodeType":"VariableDeclaration","scope":1542,"src":"3275:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":1535,"name":"uint24","nodeType":"ElementaryTypeName","src":"3275:6:10","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"},{"constant":false,"id":1538,"indexed":false,"mutability":"mutable","name":"lobAddr","nameLocation":"3303:7:10","nodeType":"VariableDeclaration","scope":1542,"src":"3295:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1537,"name":"address","nodeType":"ElementaryTypeName","src":"3295:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1540,"indexed":false,"mutability":"mutable","name":"mgnTknAddrOfPool","nameLocation":"3320:16:10","nodeType":"VariableDeclaration","scope":1542,"src":"3312:24:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1539,"name":"address","nodeType":"ElementaryTypeName","src":"3312:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3274:63:10"},"src":"3254:84:10"},{"anonymous":false,"eventSelector":"d7089a64efa4caccaea095308c4da0682a70797771cee9b36ab4a63905403592","id":1550,"name":"MarginTokenSent","nameLocation":"3349:15:10","nodeType":"EventDefinition","parameters":{"id":1549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1544,"indexed":false,"mutability":"mutable","name":"perpetualId","nameLocation":"3372:11:10","nodeType":"VariableDeclaration","scope":1550,"src":"3365:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":1543,"name":"uint24","nodeType":"ElementaryTypeName","src":"3365:6:10","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"},{"constant":false,"id":1546,"indexed":false,"mutability":"mutable","name":"to","nameLocation":"3393:2:10","nodeType":"VariableDeclaration","scope":1550,"src":"3385:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1545,"name":"address","nodeType":"ElementaryTypeName","src":"3385:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1548,"indexed":false,"mutability":"mutable","name":"amountDecN","nameLocation":"3405:10:10","nodeType":"VariableDeclaration","scope":1550,"src":"3397:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1547,"name":"uint256","nodeType":"ElementaryTypeName","src":"3397:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3364:52:10"},"src":"3343:74:10"},{"constant":false,"functionSelector":"3e99a53b","id":1552,"mutability":"immutable","name":"perpetualProxy","nameLocation":"3447:14:10","nodeType":"VariableDeclaration","scope":2100,"src":"3422:39:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1551,"name":"address","nodeType":"ElementaryTypeName","src":"3422:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":true,"id":1557,"mutability":"constant","name":"DECIMALS","nameLocation":"3491:8:10","nodeType":"VariableDeclaration","scope":2100,"src":"3467:41:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1553,"name":"int256","nodeType":"ElementaryTypeName","src":"3467:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"value":{"commonType":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"id":1556,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1554,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3502:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3138","id":1555,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3506:2:10","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"3502:6:10","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}},"visibility":"private"},{"constant":true,"id":1562,"mutability":"constant","name":"ONE_64x64","nameLocation":"3538:9:10","nodeType":"VariableDeclaration","scope":2100,"src":"3514:41:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":1558,"name":"int128","nodeType":"ElementaryTypeName","src":"3514:6:10","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"value":{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":1561,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1559,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3550:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":1560,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3553:2:10","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"3550:5:10","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"visibility":"private"},{"constant":true,"id":1566,"mutability":"constant","name":"MIN_64x64","nameLocation":"3585:9:10","nodeType":"VariableDeclaration","scope":2100,"src":"3561:71:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":1563,"name":"int128","nodeType":"ElementaryTypeName","src":"3561:6:10","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"value":{"id":1565,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"3597:35:10","subExpression":{"hexValue":"30783830303030303030303030303030303030303030303030303030303030303030","id":1564,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3598:34:10","typeDescriptions":{"typeIdentifier":"t_rational_170141183460469231731687303715884105728_by_1","typeString":"int_const 1701...(31 digits omitted)...5728"},"value":"0x80000000000000000000000000000000"},"typeDescriptions":{"typeIdentifier":"t_rational_minus_170141183460469231731687303715884105728_by_1","typeString":"int_const -170...(32 digits omitted)...5728"}},"visibility":"private"},{"constant":true,"id":1569,"mutability":"constant","name":"MAX_64x64","nameLocation":"3662:9:10","nodeType":"VariableDeclaration","scope":2100,"src":"3638:70:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":1567,"name":"int128","nodeType":"ElementaryTypeName","src":"3638:6:10","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"value":{"hexValue":"30783746464646464646464646464646464646464646464646464646464646464646","id":1568,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3674:34:10","typeDescriptions":{"typeIdentifier":"t_rational_170141183460469231731687303715884105727_by_1","typeString":"int_const 1701...(31 digits omitted)...5727"},"value":"0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},"visibility":"private"},{"constant":true,"id":1572,"mutability":"constant","name":"TEN_64x64","nameLocation":"3738:9:10","nodeType":"VariableDeclaration","scope":2100,"src":"3714:55:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":1570,"name":"int128","nodeType":"ElementaryTypeName","src":"3714:6:10","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"value":{"hexValue":"30786130303030303030303030303030303030","id":1571,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3750:19:10","typeDescriptions":{"typeIdentifier":"t_rational_184467440737095516160_by_1","typeString":"int_const 184467440737095516160"},"value":"0xa0000000000000000"},"visibility":"private"},{"constant":false,"functionSelector":"0330d0c0","id":1576,"mutability":"mutable","name":"orderBookOfPerpetual","nameLocation":"3811:20:10","nodeType":"VariableDeclaration","scope":2100,"src":"3776:55:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint24_$_t_address_$","typeString":"mapping(uint24 => address)"},"typeName":{"id":1575,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1573,"name":"uint24","nodeType":"ElementaryTypeName","src":"3785:6:10","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"nodeType":"Mapping","src":"3776:27:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint24_$_t_address_$","typeString":"mapping(uint24 => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1574,"name":"address","nodeType":"ElementaryTypeName","src":"3795:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"public"},{"constant":false,"functionSelector":"ba0e9399","id":1580,"mutability":"mutable","name":"mgnTknAddrOfPool","nameLocation":"3979:16:10","nodeType":"VariableDeclaration","scope":2100,"src":"3945:50:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint8_$_t_address_$","typeString":"mapping(uint8 => address)"},"typeName":{"id":1579,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1577,"name":"uint8","nodeType":"ElementaryTypeName","src":"3954:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Mapping","src":"3945:26:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint8_$_t_address_$","typeString":"mapping(uint8 => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1578,"name":"address","nodeType":"ElementaryTypeName","src":"3963:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"public"},{"body":{"id":1591,"nodeType":"Block","src":"4063:49:10","statements":[{"expression":{"id":1589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1587,"name":"perpetualProxy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1552,"src":"4073:14:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1588,"name":"_perpetualProxy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1582,"src":"4090:15:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4073:32:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1590,"nodeType":"ExpressionStatement","src":"4073:32:10"}]},"id":1592,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[],"id":1585,"kind":"baseConstructorSpecifier","modifierName":{"id":1584,"name":"Ownable","nameLocations":["4053:7:10"],"nodeType":"IdentifierPath","referencedDeclaration":649,"src":"4053:7:10"},"nodeType":"ModifierInvocation","src":"4053:9:10"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1582,"mutability":"mutable","name":"_perpetualProxy","nameLocation":"4031:15:10","nodeType":"VariableDeclaration","scope":1592,"src":"4023:23:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1581,"name":"address","nodeType":"ElementaryTypeName","src":"4023:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4013:39:10"},"returnParameters":{"id":1586,"nodeType":"ParameterList","parameters":[],"src":"4063:0:10"},"scope":2100,"src":"4002:110:10","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1659,"nodeType":"Block","src":"4448:689:10","statements":[{"assignments":[1599],"declarations":[{"constant":false,"id":1599,"mutability":"mutable","name":"lobAddr","nameLocation":"4500:7:10","nodeType":"VariableDeclaration","scope":1659,"src":"4492:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1598,"name":"address","nodeType":"ElementaryTypeName","src":"4492:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1606,"initialValue":{"arguments":[{"id":1604,"name":"_iPerpetualId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1595,"src":"4574:13:10","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint24","typeString":"uint24"}],"expression":{"arguments":[{"id":1601,"name":"perpetualProxy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1552,"src":"4538:14:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1600,"name":"PerpetualsContractInterface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1492,"src":"4510:27:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_PerpetualsContractInterface_$1492_$","typeString":"type(contract PerpetualsContractInterface)"}},"id":1602,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4510:43:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_PerpetualsContractInterface_$1492","typeString":"contract PerpetualsContractInterface"}},"id":1603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4554:19:10","memberName":"getOrderBookAddress","nodeType":"MemberAccess","referencedDeclaration":1483,"src":"4510:63:10","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint24_$returns$_t_address_$","typeString":"function (uint24) view external returns (address)"}},"id":1605,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4510:78:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4492:96:10"},{"expression":{"id":1611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1607,"name":"orderBookOfPerpetual","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1576,"src":"4598:20:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint24_$_t_address_$","typeString":"mapping(uint24 => address)"}},"id":1609,"indexExpression":{"id":1608,"name":"_iPerpetualId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1595,"src":"4619:13:10","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4598:35:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1610,"name":"lobAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1599,"src":"4636:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4598:45:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1612,"nodeType":"ExpressionStatement","src":"4598:45:10"},{"assignments":[1614],"declarations":[{"constant":false,"id":1614,"mutability":"mutable","name":"poolId","nameLocation":"4692:6:10","nodeType":"VariableDeclaration","scope":1659,"src":"4686:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1613,"name":"uint8","nodeType":"ElementaryTypeName","src":"4686:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":1621,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint24","typeString":"uint24"},"id":1619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1617,"name":"_iPerpetualId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1595,"src":"4707:13:10","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3130305f303030","id":1618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4721:7:10","typeDescriptions":{"typeIdentifier":"t_rational_100000_by_1","typeString":"int_const 100000"},"value":"100_000"},"src":"4707:21:10","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint24","typeString":"uint24"}],"id":1616,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4701:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":1615,"name":"uint8","nodeType":"ElementaryTypeName","src":"4701:5:10","typeDescriptions":{}}},"id":1620,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4701:28:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"4686:43:10"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":1622,"name":"mgnTknAddrOfPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1580,"src":"4742:16:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint8_$_t_address_$","typeString":"mapping(uint8 => address)"}},"id":1624,"indexExpression":{"id":1623,"name":"poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1614,"src":"4759:6:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4742:24:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1627,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4778:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1626,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4770:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1625,"name":"address","nodeType":"ElementaryTypeName","src":"4770:7:10","typeDescriptions":{}}},"id":1628,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4770:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4742:38:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1650,"nodeType":"IfStatement","src":"4739:313:10","trueBody":{"id":1649,"nodeType":"Block","src":"4782:270:10","statements":[{"assignments":[1634],"declarations":[{"constant":false,"id":1634,"mutability":"mutable","name":"lp","nameLocation":"4889:2:10","nodeType":"VariableDeclaration","scope":1649,"src":"4845:46:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_LiquidityPoolData_$1436_memory_ptr","typeString":"struct ILiquidityPoolData.LiquidityPoolData"},"typeName":{"id":1633,"nodeType":"UserDefinedTypeName","pathNode":{"id":1632,"name":"ILiquidityPoolData.LiquidityPoolData","nameLocations":["4845:18:10","4864:17:10"],"nodeType":"IdentifierPath","referencedDeclaration":1436,"src":"4845:36:10"},"referencedDeclaration":1436,"src":"4845:36:10","typeDescriptions":{"typeIdentifier":"t_struct$_LiquidityPoolData_$1436_storage_ptr","typeString":"struct ILiquidityPoolData.LiquidityPoolData"}},"visibility":"internal"}],"id":1641,"initialValue":{"arguments":[{"id":1639,"name":"poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1614,"src":"4972:6:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"expression":{"arguments":[{"id":1636,"name":"perpetualProxy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1552,"src":"4939:14:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1635,"name":"PerpetualsContractInterface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1492,"src":"4911:27:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_PerpetualsContractInterface_$1492_$","typeString":"type(contract PerpetualsContractInterface)"}},"id":1637,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4911:43:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_PerpetualsContractInterface_$1492","typeString":"contract PerpetualsContractInterface"}},"id":1638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4955:16:10","memberName":"getLiquidityPool","nodeType":"MemberAccess","referencedDeclaration":1491,"src":"4911:60:10","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint8_$returns$_t_struct$_LiquidityPoolData_$1436_memory_ptr_$","typeString":"function (uint8) view external returns (struct ILiquidityPoolData.LiquidityPoolData memory)"}},"id":1640,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4911:68:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_LiquidityPoolData_$1436_memory_ptr","typeString":"struct ILiquidityPoolData.LiquidityPoolData memory"}},"nodeType":"VariableDeclarationStatement","src":"4845:134:10"},{"expression":{"id":1647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1642,"name":"mgnTknAddrOfPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1580,"src":"4993:16:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint8_$_t_address_$","typeString":"mapping(uint8 => address)"}},"id":1644,"indexExpression":{"id":1643,"name":"poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1614,"src":"5010:6:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4993:24:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1645,"name":"lp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1634,"src":"5020:2:10","typeDescriptions":{"typeIdentifier":"t_struct$_LiquidityPoolData_$1436_memory_ptr","typeString":"struct ILiquidityPoolData.LiquidityPoolData memory"}},"id":1646,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5023:18:10","memberName":"marginTokenAddress","nodeType":"MemberAccess","referencedDeclaration":1411,"src":"5020:21:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4993:48:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1648,"nodeType":"ExpressionStatement","src":"4993:48:10"}]}},{"eventCall":{"arguments":[{"id":1652,"name":"_iPerpetualId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1595,"src":"5081:13:10","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},{"id":1653,"name":"lobAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1599,"src":"5096:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":1654,"name":"mgnTknAddrOfPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1580,"src":"5105:16:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint8_$_t_address_$","typeString":"mapping(uint8 => address)"}},"id":1656,"indexExpression":{"id":1655,"name":"poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1614,"src":"5122:6:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5105:24:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint24","typeString":"uint24"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1651,"name":"PerpetualAdded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1542,"src":"5066:14:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint24_$_t_address_$_t_address_$returns$__$","typeString":"function (uint24,address,address)"}},"id":1657,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5066:64:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1658,"nodeType":"EmitStatement","src":"5061:69:10"}]},"documentation":{"id":1593,"nodeType":"StructuredDocumentation","src":"4118:272:10","text":" Anyone add a perpetual. Needs to be set once per perpetual.\n The function sets the order book address for an existing\n perpetual-id and ensures the margin token address is stored. \n @param _iPerpetualId id of the perpetual to be traded"},"functionSelector":"b1bd155e","id":1660,"implemented":true,"kind":"function","modifiers":[],"name":"addPerpetual","nameLocation":"4404:12:10","nodeType":"FunctionDefinition","parameters":{"id":1596,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1595,"mutability":"mutable","name":"_iPerpetualId","nameLocation":"4424:13:10","nodeType":"VariableDeclaration","scope":1660,"src":"4417:20:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":1594,"name":"uint24","nodeType":"ElementaryTypeName","src":"4417:6:10","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"4416:22:10"},"returnParameters":{"id":1597,"nodeType":"ParameterList","parameters":[],"src":"4448:0:10"},"scope":2100,"src":"4395:742:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1701,"nodeType":"Block","src":"5377:221:10","statements":[{"assignments":[1669],"declarations":[{"constant":false,"id":1669,"mutability":"mutable","name":"poolId","nameLocation":"5393:6:10","nodeType":"VariableDeclaration","scope":1701,"src":"5387:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1668,"name":"uint8","nodeType":"ElementaryTypeName","src":"5387:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":1676,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint24","typeString":"uint24"},"id":1674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1672,"name":"_iPerpetualId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1665,"src":"5408:13:10","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3130305f303030","id":1673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5422:7:10","typeDescriptions":{"typeIdentifier":"t_rational_100000_by_1","typeString":"int_const 100000"},"value":"100_000"},"src":"5408:21:10","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint24","typeString":"uint24"}],"id":1671,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5402:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":1670,"name":"uint8","nodeType":"ElementaryTypeName","src":"5402:5:10","typeDescriptions":{}}},"id":1675,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5402:28:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"5387:43:10"},{"assignments":[1678],"declarations":[{"constant":false,"id":1678,"mutability":"mutable","name":"mgnTkn","nameLocation":"5448:6:10","nodeType":"VariableDeclaration","scope":1701,"src":"5440:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1677,"name":"address","nodeType":"ElementaryTypeName","src":"5440:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1682,"initialValue":{"baseExpression":{"id":1679,"name":"mgnTknAddrOfPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1580,"src":"5457:16:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint8_$_t_address_$","typeString":"mapping(uint8 => address)"}},"id":1681,"indexExpression":{"id":1680,"name":"poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1669,"src":"5474:6:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5457:24:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5440:41:10"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1684,"name":"mgnTkn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1678,"src":"5499:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1687,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5515:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1686,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5507:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1685,"name":"address","nodeType":"ElementaryTypeName","src":"5507:7:10","typeDescriptions":{}}},"id":1688,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5507:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5499:18:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"736574206f62206164647273","id":1690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5519:14:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_ba1a75905e42c2c2ee220ec76b87374b00e44cc2cdf17342859ed546c8924001","typeString":"literal_string \"set ob addrs\""},"value":"set ob addrs"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ba1a75905e42c2c2ee220ec76b87374b00e44cc2cdf17342859ed546c8924001","typeString":"literal_string \"set ob addrs\""}],"id":1683,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5491:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1691,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5491:43:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1692,"nodeType":"ExpressionStatement","src":"5491:43:10"},{"expression":{"arguments":[{"id":1697,"name":"perpetualProxy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1552,"src":"5567:14:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1698,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1663,"src":"5583:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":1694,"name":"mgnTkn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1678,"src":"5551:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1693,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1315,"src":"5544:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1315_$","typeString":"type(contract IERC20)"}},"id":1695,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5544:14:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1315","typeString":"contract IERC20"}},"id":1696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5559:7:10","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":1284,"src":"5544:22:10","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1699,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5544:47:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1700,"nodeType":"ExpressionStatement","src":"5544:47:10"}]},"documentation":{"id":1661,"nodeType":"StructuredDocumentation","src":"5143:140:10","text":" Approve the margin-token to be spent by perpetuals contract.\n Required to trade.\n @param _amount spend amount"},"functionSelector":"5db35a04","id":1702,"implemented":true,"kind":"function","modifiers":[],"name":"approveAmountForPerpetualMgnTkn","nameLocation":"5297:31:10","nodeType":"FunctionDefinition","parameters":{"id":1666,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1663,"mutability":"mutable","name":"_amount","nameLocation":"5337:7:10","nodeType":"VariableDeclaration","scope":1702,"src":"5329:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1662,"name":"uint256","nodeType":"ElementaryTypeName","src":"5329:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1665,"mutability":"mutable","name":"_iPerpetualId","nameLocation":"5353:13:10","nodeType":"VariableDeclaration","scope":1702,"src":"5346:20:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":1664,"name":"uint24","nodeType":"ElementaryTypeName","src":"5346:6:10","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"5328:39:10"},"returnParameters":{"id":1667,"nodeType":"ParameterList","parameters":[],"src":"5377:0:10"},"scope":2100,"src":"5288:310:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1857,"nodeType":"Block","src":"6599:1097:10","statements":[{"assignments":[1719],"declarations":[{"constant":false,"id":1719,"mutability":"mutable","name":"orderBookAddr","nameLocation":"6618:13:10","nodeType":"VariableDeclaration","scope":1857,"src":"6610:21:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1718,"name":"address","nodeType":"ElementaryTypeName","src":"6610:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1723,"initialValue":{"baseExpression":{"id":1720,"name":"orderBookOfPerpetual","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1576,"src":"6634:20:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint24_$_t_address_$","typeString":"mapping(uint24 => address)"}},"id":1722,"indexExpression":{"id":1721,"name":"_iPerpetualId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1705,"src":"6655:13:10","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6634:35:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6610:59:10"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1725,"name":"orderBookAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1719,"src":"6688:13:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1728,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6711:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1727,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6703:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1726,"name":"address","nodeType":"ElementaryTypeName","src":"6703:7:10","typeDescriptions":{}}},"id":1729,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6703:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6688:25:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"6f7264657220626f6f6b20756e6b6e6f776e","id":1731,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6715:20:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_774a4ae2b8b6c31151ef5dc7c463f6f8f5f1e9b277850852024f200dd1b62b5b","typeString":"literal_string \"order book unknown\""},"value":"order book unknown"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_774a4ae2b8b6c31151ef5dc7c463f6f8f5f1e9b277850852024f200dd1b62b5b","typeString":"literal_string \"order book unknown\""}],"id":1724,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6680:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1732,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6680:56:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1733,"nodeType":"ExpressionStatement","src":"6680:56:10"},{"assignments":[1735],"declarations":[{"constant":false,"id":1735,"mutability":"mutable","name":"fTradeAmount","nameLocation":"6753:12:10","nodeType":"VariableDeclaration","scope":1857,"src":"6746:19:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":1734,"name":"int128","nodeType":"ElementaryTypeName","src":"6746:6:10","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"id":1739,"initialValue":{"arguments":[{"id":1737,"name":"_amountDec18","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1707,"src":"6779:12:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":1736,"name":"_fromDec18","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2052,"src":"6768:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_int128_$","typeString":"function (int256) pure returns (int128)"}},"id":1738,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6768:24:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"VariableDeclarationStatement","src":"6746:46:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":1742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1740,"name":"_flags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1711,"src":"6806:6:10","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1741,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6814:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6806:9:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1748,"nodeType":"IfStatement","src":"6802:74:10","trueBody":{"id":1747,"nodeType":"Block","src":"6817:59:10","statements":[{"expression":{"id":1745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1743,"name":"_flags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1711,"src":"6832:6:10","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30783430303030303030","id":1744,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6841:10:10","typeDescriptions":{"typeIdentifier":"t_rational_1073741824_by_1","typeString":"int_const 1073741824"},"value":"0x40000000"},"src":"6832:19:10","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"id":1746,"nodeType":"ExpressionStatement","src":"6832:19:10"}]}},{"assignments":[1753],"declarations":[{"constant":false,"id":1753,"mutability":"mutable","name":"order","nameLocation":"6917:5:10","nodeType":"VariableDeclaration","scope":1857,"src":"6885:37:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ClientOrder_$1394_memory_ptr","typeString":"struct IClientOrder.ClientOrder"},"typeName":{"id":1752,"nodeType":"UserDefinedTypeName","pathNode":{"id":1751,"name":"IClientOrder.ClientOrder","nameLocations":["6885:12:10","6898:11:10"],"nodeType":"IdentifierPath","referencedDeclaration":1394,"src":"6885:24:10"},"referencedDeclaration":1394,"src":"6885:24:10","typeDescriptions":{"typeIdentifier":"t_struct$_ClientOrder_$1394_storage_ptr","typeString":"struct IClientOrder.ClientOrder"}},"visibility":"internal"}],"id":1754,"nodeType":"VariableDeclarationStatement","src":"6885:37:10"},{"expression":{"id":1759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1755,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1753,"src":"6932:5:10","typeDescriptions":{"typeIdentifier":"t_struct$_ClientOrder_$1394_memory_ptr","typeString":"struct IClientOrder.ClientOrder memory"}},"id":1757,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6938:5:10","memberName":"flags","nodeType":"MemberAccess","referencedDeclaration":1375,"src":"6932:11:10","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1758,"name":"_flags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1711,"src":"6946:6:10","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"6932:20:10","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"id":1760,"nodeType":"ExpressionStatement","src":"6932:20:10"},{"expression":{"id":1765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1761,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1753,"src":"6962:5:10","typeDescriptions":{"typeIdentifier":"t_struct$_ClientOrder_$1394_memory_ptr","typeString":"struct IClientOrder.ClientOrder memory"}},"id":1763,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6968:12:10","memberName":"iPerpetualId","nodeType":"MemberAccess","referencedDeclaration":1367,"src":"6962:18:10","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1764,"name":"_iPerpetualId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1705,"src":"6983:13:10","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"6962:34:10","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"id":1766,"nodeType":"ExpressionStatement","src":"6962:34:10"},{"expression":{"id":1774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1767,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1753,"src":"7006:5:10","typeDescriptions":{"typeIdentifier":"t_struct$_ClientOrder_$1394_memory_ptr","typeString":"struct IClientOrder.ClientOrder memory"}},"id":1769,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7012:10:10","memberName":"traderAddr","nodeType":"MemberAccess","referencedDeclaration":1387,"src":"7006:16:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1772,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"7033:4:10","typeDescriptions":{"typeIdentifier":"t_contract$_OnChainTrader_$2100","typeString":"contract OnChainTrader"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_OnChainTrader_$2100","typeString":"contract OnChainTrader"}],"id":1771,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7025:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1770,"name":"address","nodeType":"ElementaryTypeName","src":"7025:7:10","typeDescriptions":{}}},"id":1773,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7025:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7006:32:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1775,"nodeType":"ExpressionStatement","src":"7006:32:10"},{"expression":{"id":1780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1776,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1753,"src":"7048:5:10","typeDescriptions":{"typeIdentifier":"t_struct$_ClientOrder_$1394_memory_ptr","typeString":"struct IClientOrder.ClientOrder memory"}},"id":1778,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7054:7:10","memberName":"fAmount","nodeType":"MemberAccess","referencedDeclaration":1383,"src":"7048:13:10","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1779,"name":"fTradeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1735,"src":"7064:12:10","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"7048:28:10","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":1781,"nodeType":"ExpressionStatement","src":"7048:28:10"},{"expression":{"id":1794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1782,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1753,"src":"7086:5:10","typeDescriptions":{"typeIdentifier":"t_struct$_ClientOrder_$1394_memory_ptr","typeString":"struct IClientOrder.ClientOrder memory"}},"id":1784,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7092:11:10","memberName":"fLimitPrice","nodeType":"MemberAccess","referencedDeclaration":1369,"src":"7086:17:10","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"condition":{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":1787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1785,"name":"fTradeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1735,"src":"7106:12:10","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1786,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7121:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7106:16:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"hexValue":"30","id":1791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7144:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1790,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7137:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":1789,"name":"int128","nodeType":"ElementaryTypeName","src":"7137:6:10","typeDescriptions":{}}},"id":1792,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7137:9:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":1793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"7106:40:10","trueExpression":{"id":1788,"name":"MAX_64x64","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1569,"src":"7125:9:10","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"7086:60:10","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":1795,"nodeType":"ExpressionStatement","src":"7086:60:10"},{"expression":{"id":1800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1796,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1753,"src":"7156:5:10","typeDescriptions":{"typeIdentifier":"t_struct$_ClientOrder_$1394_memory_ptr","typeString":"struct IClientOrder.ClientOrder memory"}},"id":1798,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7162:11:10","memberName":"leverageTDR","nodeType":"MemberAccess","referencedDeclaration":1371,"src":"7156:17:10","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1799,"name":"_leverageTDR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1709,"src":"7176:12:10","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"7156:32:10","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"id":1801,"nodeType":"ExpressionStatement","src":"7156:32:10"},{"expression":{"id":1814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1802,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1753,"src":"7233:5:10","typeDescriptions":{"typeIdentifier":"t_struct$_ClientOrder_$1394_memory_ptr","typeString":"struct IClientOrder.ClientOrder memory"}},"id":1804,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7239:9:10","memberName":"iDeadline","nodeType":"MemberAccess","referencedDeclaration":1377,"src":"7233:15:10","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1807,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"7258:5:10","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7264:9:10","memberName":"timestamp","nodeType":"MemberAccess","src":"7258:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_rational_259200_by_1","typeString":"int_const 259200"},"id":1811,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3836343030","id":1809,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7276:5:10","typeDescriptions":{"typeIdentifier":"t_rational_86400_by_1","typeString":"int_const 86400"},"value":"86400"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"33","id":1810,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7284:1:10","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"7276:9:10","typeDescriptions":{"typeIdentifier":"t_rational_259200_by_1","typeString":"int_const 259200"}},"src":"7258:27:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1806,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7251:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":1805,"name":"uint32","nodeType":"ElementaryTypeName","src":"7251:6:10","typeDescriptions":{}}},"id":1813,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7251:35:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"7233:53:10","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"id":1815,"nodeType":"ExpressionStatement","src":"7233:53:10"},{"expression":{"id":1824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1816,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1753,"src":"7296:5:10","typeDescriptions":{"typeIdentifier":"t_struct$_ClientOrder_$1394_memory_ptr","typeString":"struct IClientOrder.ClientOrder memory"}},"id":1818,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7302:18:10","memberName":"executionTimestamp","nodeType":"MemberAccess","referencedDeclaration":1373,"src":"7296:24:10","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":1821,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"7330:5:10","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7336:9:10","memberName":"timestamp","nodeType":"MemberAccess","src":"7330:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1820,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7323:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":1819,"name":"uint32","nodeType":"ElementaryTypeName","src":"7323:6:10","typeDescriptions":{}}},"id":1823,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7323:23:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"7296:50:10","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"id":1825,"nodeType":"ExpressionStatement","src":"7296:50:10"},{"clauses":[{"block":{"id":1843,"nodeType":"Block","src":"7455:110:10","statements":[{"eventCall":{"arguments":[{"id":1837,"name":"_amountDec18","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1707,"src":"7502:12:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":1838,"name":"_leverageTDR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1709,"src":"7516:12:10","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_uint16","typeString":"uint16"}],"id":1836,"name":"PerpetualOrderSubmitSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1534,"src":"7474:27:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_int256_$_t_uint16_$returns$__$","typeString":"function (int256,uint16)"}},"id":1839,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7474:55:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1840,"nodeType":"EmitStatement","src":"7469:60:10"},{"expression":{"hexValue":"74727565","id":1841,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7550:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1717,"id":1842,"nodeType":"Return","src":"7543:11:10"}]},"errorName":"","id":1844,"nodeType":"TryCatchClause","src":"7455:110:10"},{"block":{"id":1854,"nodeType":"Block","src":"7600:90:10","statements":[{"eventCall":{"arguments":[{"id":1849,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1846,"src":"7646:6:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1848,"name":"PerpetualOrderSubmitFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1528,"src":"7619:26:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory)"}},"id":1850,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7619:34:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1851,"nodeType":"EmitStatement","src":"7614:39:10"},{"expression":{"hexValue":"66616c7365","id":1852,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7674:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":1717,"id":1853,"nodeType":"Return","src":"7667:12:10"}]},"errorName":"Error","id":1855,"nodeType":"TryCatchClause","parameters":{"id":1847,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1846,"mutability":"mutable","name":"reason","nameLocation":"7592:6:10","nodeType":"VariableDeclaration","scope":1855,"src":"7578:20:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1845,"name":"string","nodeType":"ElementaryTypeName","src":"7578:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7577:22:10"},"src":"7566:124:10"}],"externalCall":{"arguments":[{"id":1830,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1753,"src":"7437:5:10","typeDescriptions":{"typeIdentifier":"t_struct$_ClientOrder_$1394_memory_ptr","typeString":"struct IClientOrder.ClientOrder memory"}},{"arguments":[{"hexValue":"","id":1833,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7450:2:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1832,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7444:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1831,"name":"bytes","nodeType":"ElementaryTypeName","src":"7444:5:10","typeDescriptions":{}}},"id":1834,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7444:9:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_ClientOrder_$1394_memory_ptr","typeString":"struct IClientOrder.ClientOrder memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":1827,"name":"orderBookAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1719,"src":"7412:13:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1826,"name":"OrderBookContractInterface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1455,"src":"7385:26:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_OrderBookContractInterface_$1455_$","typeString":"type(contract OrderBookContractInterface)"}},"id":1828,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7385:41:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_OrderBookContractInterface_$1455","typeString":"contract OrderBookContractInterface"}},"id":1829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7427:9:10","memberName":"postOrder","nodeType":"MemberAccess","referencedDeclaration":1454,"src":"7385:51:10","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_struct$_ClientOrder_$1394_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct IClientOrder.ClientOrder memory,bytes memory) external"}},"id":1835,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7385:69:10","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1856,"nodeType":"TryStatement","src":"7381:309:10"}]},"documentation":{"id":1703,"nodeType":"StructuredDocumentation","src":"5604:858:10","text":" Post an order to the order book. Order will be executed by\n external \"executors\".\n * Available order flags:\n  uint32 internal constant MASK_CLOSE_ONLY = 0x80000000;\n  uint32 internal constant MASK_MARKET_ORDER = 0x40000000;\n  uint32 internal constant MASK_STOP_ORDER = 0x20000000;\n  uint32 internal constant MASK_FILL_OR_KILL = 0x10000000;\n  uint32 internal constant MASK_KEEP_POS_LEVERAGE = 0x08000000;\n  uint32 internal constant MASK_LIMIT_ORDER = 0x04000000;\n @param _iPerpetualId perpetual id for which we execute\n @param _amountDec18 signed amount to be traded in base currency\n @param _leverageTDR leverage two-digit-integer), e.g. 210 for 2.1x leverage\n @param _flags order-flags, can be left 0 for a market order\n @return true if posting order succeeded"},"functionSelector":"62bcc258","id":1858,"implemented":true,"kind":"function","modifiers":[{"id":1714,"kind":"modifierInvocation","modifierName":{"id":1713,"name":"onlyOwner","nameLocations":["6565:9:10"],"nodeType":"IdentifierPath","referencedDeclaration":591,"src":"6565:9:10"},"nodeType":"ModifierInvocation","src":"6565:9:10"}],"name":"postOrder","nameLocation":"6476:9:10","nodeType":"FunctionDefinition","parameters":{"id":1712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1705,"mutability":"mutable","name":"_iPerpetualId","nameLocation":"6493:13:10","nodeType":"VariableDeclaration","scope":1858,"src":"6486:20:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":1704,"name":"uint24","nodeType":"ElementaryTypeName","src":"6486:6:10","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"},{"constant":false,"id":1707,"mutability":"mutable","name":"_amountDec18","nameLocation":"6515:12:10","nodeType":"VariableDeclaration","scope":1858,"src":"6508:19:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1706,"name":"int256","nodeType":"ElementaryTypeName","src":"6508:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":1709,"mutability":"mutable","name":"_leverageTDR","nameLocation":"6536:12:10","nodeType":"VariableDeclaration","scope":1858,"src":"6529:19:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1708,"name":"uint16","nodeType":"ElementaryTypeName","src":"6529:6:10","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":1711,"mutability":"mutable","name":"_flags","nameLocation":"6557:6:10","nodeType":"VariableDeclaration","scope":1858,"src":"6550:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1710,"name":"uint32","nodeType":"ElementaryTypeName","src":"6550:6:10","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"6485:79:10"},"returnParameters":{"id":1717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1716,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1858,"src":"6593:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1715,"name":"bool","nodeType":"ElementaryTypeName","src":"6593:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6592:6:10"},"scope":2100,"src":"6467:1229:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1912,"nodeType":"Block","src":"7779:420:10","statements":[{"assignments":[1866],"declarations":[{"constant":false,"id":1866,"mutability":"mutable","name":"poolId","nameLocation":"7795:6:10","nodeType":"VariableDeclaration","scope":1912,"src":"7789:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1865,"name":"uint8","nodeType":"ElementaryTypeName","src":"7789:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":1873,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint24","typeString":"uint24"},"id":1871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1869,"name":"_iPerpetualId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1860,"src":"7810:13:10","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3130305f303030","id":1870,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7824:7:10","typeDescriptions":{"typeIdentifier":"t_rational_100000_by_1","typeString":"int_const 100000"},"value":"100_000"},"src":"7810:21:10","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint24","typeString":"uint24"}],"id":1868,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7804:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":1867,"name":"uint8","nodeType":"ElementaryTypeName","src":"7804:5:10","typeDescriptions":{}}},"id":1872,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7804:28:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"7789:43:10"},{"assignments":[1875],"declarations":[{"constant":false,"id":1875,"mutability":"mutable","name":"mgnTknAddr","nameLocation":"7850:10:10","nodeType":"VariableDeclaration","scope":1912,"src":"7842:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1874,"name":"address","nodeType":"ElementaryTypeName","src":"7842:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1879,"initialValue":{"baseExpression":{"id":1876,"name":"mgnTknAddrOfPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1580,"src":"7863:16:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint8_$_t_address_$","typeString":"mapping(uint8 => address)"}},"id":1878,"indexExpression":{"id":1877,"name":"poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1866,"src":"7880:6:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7863:24:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"7842:45:10"},{"assignments":[1882],"declarations":[{"constant":false,"id":1882,"mutability":"mutable","name":"marginToken","nameLocation":"7915:11:10","nodeType":"VariableDeclaration","scope":1912,"src":"7897:29:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$77","typeString":"contract IERC20Upgradeable"},"typeName":{"id":1881,"nodeType":"UserDefinedTypeName","pathNode":{"id":1880,"name":"IERC20Upgradeable","nameLocations":["7897:17:10"],"nodeType":"IdentifierPath","referencedDeclaration":77,"src":"7897:17:10"},"referencedDeclaration":77,"src":"7897:17:10","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$77","typeString":"contract IERC20Upgradeable"}},"visibility":"internal"}],"id":1886,"initialValue":{"arguments":[{"id":1884,"name":"mgnTknAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1875,"src":"7947:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1883,"name":"IERC20Upgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":77,"src":"7929:17:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20Upgradeable_$77_$","typeString":"type(contract IERC20Upgradeable)"}},"id":1885,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7929:29:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$77","typeString":"contract IERC20Upgradeable"}},"nodeType":"VariableDeclarationStatement","src":"7897:61:10"},{"assignments":[1888],"declarations":[{"constant":false,"id":1888,"mutability":"mutable","name":"balance","nameLocation":"7976:7:10","nodeType":"VariableDeclaration","scope":1912,"src":"7968:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1887,"name":"uint256","nodeType":"ElementaryTypeName","src":"7968:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1896,"initialValue":{"arguments":[{"arguments":[{"id":1893,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"8016:4:10","typeDescriptions":{"typeIdentifier":"t_contract$_OnChainTrader_$2100","typeString":"contract OnChainTrader"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_OnChainTrader_$2100","typeString":"contract OnChainTrader"}],"id":1892,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8008:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1891,"name":"address","nodeType":"ElementaryTypeName","src":"8008:7:10","typeDescriptions":{}}},"id":1894,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8008:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1889,"name":"marginToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1882,"src":"7986:11:10","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$77","typeString":"contract IERC20Upgradeable"}},"id":1890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7998:9:10","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":16,"src":"7986:21:10","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":1895,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7986:36:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7968:54:10"},{"expression":{"arguments":[{"expression":{"id":1900,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8106:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8110:6:10","memberName":"sender","nodeType":"MemberAccess","src":"8106:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1902,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1888,"src":"8118:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1897,"name":"marginToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1882,"src":"8081:11:10","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$77","typeString":"contract IERC20Upgradeable"}},"id":1899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8093:12:10","memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":108,"src":"8081:24:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$77_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20Upgradeable_$77_$","typeString":"function (contract IERC20Upgradeable,address,uint256)"}},"id":1903,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8081:45:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1904,"nodeType":"ExpressionStatement","src":"8081:45:10"},{"eventCall":{"arguments":[{"id":1906,"name":"_iPerpetualId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1860,"src":"8157:13:10","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},{"expression":{"id":1907,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8172:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8176:6:10","memberName":"sender","nodeType":"MemberAccess","src":"8172:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1909,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1888,"src":"8184:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint24","typeString":"uint24"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1905,"name":"MarginTokenSent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1550,"src":"8141:15:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint24_$_t_address_$_t_uint256_$returns$__$","typeString":"function (uint24,address,uint256)"}},"id":1910,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8141:51:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1911,"nodeType":"EmitStatement","src":"8136:56:10"}]},"functionSelector":"230f2384","id":1913,"implemented":true,"kind":"function","modifiers":[{"id":1863,"kind":"modifierInvocation","modifierName":{"id":1862,"name":"onlyOwner","nameLocations":["7760:9:10"],"nodeType":"IdentifierPath","referencedDeclaration":591,"src":"7760:9:10"},"nodeType":"ModifierInvocation","src":"7760:9:10"}],"name":"transferMarginCollateralTo","nameLocation":"7711:26:10","nodeType":"FunctionDefinition","parameters":{"id":1861,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1860,"mutability":"mutable","name":"_iPerpetualId","nameLocation":"7745:13:10","nodeType":"VariableDeclaration","scope":1913,"src":"7738:20:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":1859,"name":"uint24","nodeType":"ElementaryTypeName","src":"7738:6:10","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"7737:22:10"},"returnParameters":{"id":1864,"nodeType":"ParameterList","parameters":[],"src":"7779:0:10"},"scope":2100,"src":"7702:497:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1976,"nodeType":"Block","src":"8424:699:10","statements":[{"assignments":[1924],"declarations":[{"constant":false,"id":1924,"mutability":"mutable","name":"acc","nameLocation":"8455:3:10","nodeType":"VariableDeclaration","scope":1976,"src":"8434:24:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_MarginAccount_$1509_memory_ptr","typeString":"struct MarginAccount"},"typeName":{"id":1923,"nodeType":"UserDefinedTypeName","pathNode":{"id":1922,"name":"MarginAccount","nameLocations":["8434:13:10"],"nodeType":"IdentifierPath","referencedDeclaration":1509,"src":"8434:13:10"},"referencedDeclaration":1509,"src":"8434:13:10","typeDescriptions":{"typeIdentifier":"t_struct$_MarginAccount_$1509_storage_ptr","typeString":"struct MarginAccount"}},"visibility":"internal"}],"id":1935,"initialValue":{"arguments":[{"id":1929,"name":"_iPerpetualId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1916,"src":"8535:13:10","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},{"arguments":[{"id":1932,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"8570:4:10","typeDescriptions":{"typeIdentifier":"t_contract$_OnChainTrader_$2100","typeString":"contract OnChainTrader"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_OnChainTrader_$2100","typeString":"contract OnChainTrader"}],"id":1931,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8562:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1930,"name":"address","nodeType":"ElementaryTypeName","src":"8562:7:10","typeDescriptions":{}}},"id":1933,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8562:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint24","typeString":"uint24"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":1926,"name":"perpetualProxy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1552,"src":"8489:14:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1925,"name":"PerpetualsContractInterface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1492,"src":"8461:27:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_PerpetualsContractInterface_$1492_$","typeString":"type(contract PerpetualsContractInterface)"}},"id":1927,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8461:43:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_PerpetualsContractInterface_$1492","typeString":"contract PerpetualsContractInterface"}},"id":1928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8505:16:10","memberName":"getMarginAccount","nodeType":"MemberAccess","referencedDeclaration":1465,"src":"8461:60:10","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint24_$_t_address_$returns$_t_struct$_MarginAccount_$1509_memory_ptr_$","typeString":"function (uint24,address) view external returns (struct MarginAccount memory)"}},"id":1934,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8461:124:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_MarginAccount_$1509_memory_ptr","typeString":"struct MarginAccount memory"}},"nodeType":"VariableDeclarationStatement","src":"8434:151:10"},{"assignments":[1938],"declarations":[{"constant":false,"id":1938,"mutability":"mutable","name":"accD18","nameLocation":"8619:6:10","nodeType":"VariableDeclaration","scope":1976,"src":"8595:30:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_D18MarginAccount_$1518_memory_ptr","typeString":"struct D18MarginAccount"},"typeName":{"id":1937,"nodeType":"UserDefinedTypeName","pathNode":{"id":1936,"name":"D18MarginAccount","nameLocations":["8595:16:10"],"nodeType":"IdentifierPath","referencedDeclaration":1518,"src":"8595:16:10"},"referencedDeclaration":1518,"src":"8595:16:10","typeDescriptions":{"typeIdentifier":"t_struct$_D18MarginAccount_$1518_storage_ptr","typeString":"struct D18MarginAccount"}},"visibility":"internal"}],"id":1939,"nodeType":"VariableDeclarationStatement","src":"8595:30:10"},{"expression":{"id":1947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1940,"name":"accD18","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1938,"src":"8635:6:10","typeDescriptions":{"typeIdentifier":"t_struct$_D18MarginAccount_$1518_memory_ptr","typeString":"struct D18MarginAccount memory"}},"id":1942,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8642:18:10","memberName":"lockedInValueQCD18","nodeType":"MemberAccess","referencedDeclaration":1511,"src":"8635:25:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":1944,"name":"acc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1924,"src":"8671:3:10","typeDescriptions":{"typeIdentifier":"t_struct$_MarginAccount_$1509_memory_ptr","typeString":"struct MarginAccount memory"}},"id":1945,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8675:16:10","memberName":"fLockedInValueQC","nodeType":"MemberAccess","referencedDeclaration":1494,"src":"8671:20:10","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int128","typeString":"int128"}],"id":1943,"name":"toDec18","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2071,"src":"8663:7:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int128_$returns$_t_int256_$","typeString":"function (int128) pure returns (int256)"}},"id":1946,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8663:29:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"8635:57:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":1948,"nodeType":"ExpressionStatement","src":"8635:57:10"},{"expression":{"id":1956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1949,"name":"accD18","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1938,"src":"8774:6:10","typeDescriptions":{"typeIdentifier":"t_struct$_D18MarginAccount_$1518_memory_ptr","typeString":"struct D18MarginAccount memory"}},"id":1951,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8781:9:10","memberName":"cashCCD18","nodeType":"MemberAccess","referencedDeclaration":1513,"src":"8774:16:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":1953,"name":"acc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1924,"src":"8801:3:10","typeDescriptions":{"typeIdentifier":"t_struct$_MarginAccount_$1509_memory_ptr","typeString":"struct MarginAccount memory"}},"id":1954,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8805:7:10","memberName":"fCashCC","nodeType":"MemberAccess","referencedDeclaration":1496,"src":"8801:11:10","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int128","typeString":"int128"}],"id":1952,"name":"toDec18","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2071,"src":"8793:7:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int128_$returns$_t_int256_$","typeString":"function (int128) pure returns (int256)"}},"id":1955,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8793:20:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"8774:39:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":1957,"nodeType":"ExpressionStatement","src":"8774:39:10"},{"expression":{"id":1965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1958,"name":"accD18","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1938,"src":"8879:6:10","typeDescriptions":{"typeIdentifier":"t_struct$_D18MarginAccount_$1518_memory_ptr","typeString":"struct D18MarginAccount memory"}},"id":1960,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8886:17:10","memberName":"positionSizeBCD18","nodeType":"MemberAccess","referencedDeclaration":1515,"src":"8879:24:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":1962,"name":"acc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1924,"src":"8914:3:10","typeDescriptions":{"typeIdentifier":"t_struct$_MarginAccount_$1509_memory_ptr","typeString":"struct MarginAccount memory"}},"id":1963,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8918:11:10","memberName":"fPositionBC","nodeType":"MemberAccess","referencedDeclaration":1498,"src":"8914:15:10","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int128","typeString":"int128"}],"id":1961,"name":"toDec18","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2071,"src":"8906:7:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int128_$returns$_t_int256_$","typeString":"function (int128) pure returns (int256)"}},"id":1964,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8906:24:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"8879:51:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":1966,"nodeType":"ExpressionStatement","src":"8879:51:10"},{"expression":{"id":1972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1967,"name":"accD18","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1938,"src":"8994:6:10","typeDescriptions":{"typeIdentifier":"t_struct$_D18MarginAccount_$1518_memory_ptr","typeString":"struct D18MarginAccount memory"}},"id":1969,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"9001:10:10","memberName":"positionId","nodeType":"MemberAccess","referencedDeclaration":1517,"src":"8994:17:10","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1970,"name":"acc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1924,"src":"9014:3:10","typeDescriptions":{"typeIdentifier":"t_struct$_MarginAccount_$1509_memory_ptr","typeString":"struct MarginAccount memory"}},"id":1971,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9018:10:10","memberName":"positionId","nodeType":"MemberAccess","referencedDeclaration":1508,"src":"9014:14:10","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"src":"8994:34:10","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":1973,"nodeType":"ExpressionStatement","src":"8994:34:10"},{"expression":{"id":1974,"name":"accD18","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1938,"src":"9110:6:10","typeDescriptions":{"typeIdentifier":"t_struct$_D18MarginAccount_$1518_memory_ptr","typeString":"struct D18MarginAccount memory"}},"functionReturnParameters":1921,"id":1975,"nodeType":"Return","src":"9103:13:10"}]},"documentation":{"id":1914,"nodeType":"StructuredDocumentation","src":"8205:118:10","text":" Return margin account information in decimal 18 format\n @param _iPerpetualId id of perpetual "},"functionSelector":"9fbb0a3b","id":1977,"implemented":true,"kind":"function","modifiers":[],"name":"getMarginAccount","nameLocation":"8337:16:10","nodeType":"FunctionDefinition","parameters":{"id":1917,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1916,"mutability":"mutable","name":"_iPerpetualId","nameLocation":"8361:13:10","nodeType":"VariableDeclaration","scope":1977,"src":"8354:20:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":1915,"name":"uint24","nodeType":"ElementaryTypeName","src":"8354:6:10","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"8353:22:10"},"returnParameters":{"id":1921,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1920,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1977,"src":"8399:23:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_D18MarginAccount_$1518_memory_ptr","typeString":"struct D18MarginAccount"},"typeName":{"id":1919,"nodeType":"UserDefinedTypeName","pathNode":{"id":1918,"name":"D18MarginAccount","nameLocations":["8399:16:10"],"nodeType":"IdentifierPath","referencedDeclaration":1518,"src":"8399:16:10"},"referencedDeclaration":1518,"src":"8399:16:10","typeDescriptions":{"typeIdentifier":"t_struct$_D18MarginAccount_$1518_storage_ptr","typeString":"struct D18MarginAccount"}},"visibility":"internal"}],"src":"8398:25:10"},"scope":2100,"src":"8328:795:10","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2017,"nodeType":"Block","src":"9530:385:10","statements":[{"assignments":[1989],"declarations":[{"constant":false,"id":1989,"mutability":"mutable","name":"acc","nameLocation":"9561:3:10","nodeType":"VariableDeclaration","scope":2017,"src":"9540:24:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_MarginAccount_$1509_memory_ptr","typeString":"struct MarginAccount"},"typeName":{"id":1988,"nodeType":"UserDefinedTypeName","pathNode":{"id":1987,"name":"MarginAccount","nameLocations":["9540:13:10"],"nodeType":"IdentifierPath","referencedDeclaration":1509,"src":"9540:13:10"},"referencedDeclaration":1509,"src":"9540:13:10","typeDescriptions":{"typeIdentifier":"t_struct$_MarginAccount_$1509_storage_ptr","typeString":"struct MarginAccount"}},"visibility":"internal"}],"id":2000,"initialValue":{"arguments":[{"id":1994,"name":"_iPerpetualId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1980,"src":"9641:13:10","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},{"arguments":[{"id":1997,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"9676:4:10","typeDescriptions":{"typeIdentifier":"t_contract$_OnChainTrader_$2100","typeString":"contract OnChainTrader"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_OnChainTrader_$2100","typeString":"contract OnChainTrader"}],"id":1996,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9668:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1995,"name":"address","nodeType":"ElementaryTypeName","src":"9668:7:10","typeDescriptions":{}}},"id":1998,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9668:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint24","typeString":"uint24"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":1991,"name":"perpetualProxy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1552,"src":"9595:14:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1990,"name":"PerpetualsContractInterface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1492,"src":"9567:27:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_PerpetualsContractInterface_$1492_$","typeString":"type(contract PerpetualsContractInterface)"}},"id":1992,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9567:43:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_PerpetualsContractInterface_$1492","typeString":"contract PerpetualsContractInterface"}},"id":1993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9611:16:10","memberName":"getMarginAccount","nodeType":"MemberAccess","referencedDeclaration":1465,"src":"9567:60:10","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint24_$_t_address_$returns$_t_struct$_MarginAccount_$1509_memory_ptr_$","typeString":"function (uint24,address) view external returns (struct MarginAccount memory)"}},"id":1999,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9567:124:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_MarginAccount_$1509_memory_ptr","typeString":"struct MarginAccount memory"}},"nodeType":"VariableDeclarationStatement","src":"9540:151:10"},{"assignments":[2002],"declarations":[{"constant":false,"id":2002,"mutability":"mutable","name":"fSize","nameLocation":"9708:5:10","nodeType":"VariableDeclaration","scope":2017,"src":"9701:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":2001,"name":"int128","nodeType":"ElementaryTypeName","src":"9701:6:10","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"id":2012,"initialValue":{"arguments":[{"id":2007,"name":"_iPerpetualId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1980,"src":"9805:13:10","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},{"expression":{"id":2008,"name":"acc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1989,"src":"9832:3:10","typeDescriptions":{"typeIdentifier":"t_struct$_MarginAccount_$1509_memory_ptr","typeString":"struct MarginAccount memory"}},"id":2009,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9836:11:10","memberName":"fPositionBC","nodeType":"MemberAccess","referencedDeclaration":1498,"src":"9832:15:10","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},{"id":2010,"name":"isBuy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1982,"src":"9861:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint24","typeString":"uint24"},{"typeIdentifier":"t_int128","typeString":"int128"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"arguments":[{"id":2004,"name":"perpetualProxy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1552,"src":"9744:14:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2003,"name":"PerpetualsContractInterface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1492,"src":"9716:27:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_PerpetualsContractInterface_$1492_$","typeString":"type(contract PerpetualsContractInterface)"}},"id":2005,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9716:43:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_PerpetualsContractInterface_$1492","typeString":"contract PerpetualsContractInterface"}},"id":2006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9760:31:10","memberName":"getMaxSignedOpenTradeSizeForPos","nodeType":"MemberAccess","referencedDeclaration":1476,"src":"9716:75:10","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint24_$_t_int128_$_t_bool_$returns$_t_int128_$","typeString":"function (uint24,int128,bool) view external returns (int128)"}},"id":2011,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9716:160:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"VariableDeclarationStatement","src":"9701:175:10"},{"expression":{"arguments":[{"id":2014,"name":"fSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2002,"src":"9902:5:10","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int128","typeString":"int128"}],"id":2013,"name":"toDec18","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2071,"src":"9894:7:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int128_$returns$_t_int256_$","typeString":"function (int128) pure returns (int256)"}},"id":2015,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9894:14:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":1986,"id":2016,"nodeType":"Return","src":"9887:21:10"}]},"documentation":{"id":1978,"nodeType":"StructuredDocumentation","src":"9129:304:10","text":" Get maximal trade amount for the contract accounting for its current position\n @param _iPerpetualId id of perpetual\n @param isBuy true if we go long, false if we go short\n @return signed maximal trade size (negative if resulting position is short, positive otherwise)"},"functionSelector":"0df3ad4c","id":2018,"implemented":true,"kind":"function","modifiers":[],"name":"getMaxTradeAmount","nameLocation":"9447:17:10","nodeType":"FunctionDefinition","parameters":{"id":1983,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1980,"mutability":"mutable","name":"_iPerpetualId","nameLocation":"9472:13:10","nodeType":"VariableDeclaration","scope":2018,"src":"9465:20:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":1979,"name":"uint24","nodeType":"ElementaryTypeName","src":"9465:6:10","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"},{"constant":false,"id":1982,"mutability":"mutable","name":"isBuy","nameLocation":"9492:5:10","nodeType":"VariableDeclaration","scope":2018,"src":"9487:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1981,"name":"bool","nodeType":"ElementaryTypeName","src":"9487:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9464:34:10"},"returnParameters":{"id":1986,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1985,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2018,"src":"9522:6:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1984,"name":"int256","nodeType":"ElementaryTypeName","src":"9522:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9521:8:10"},"scope":2100,"src":"9438:477:10","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2051,"nodeType":"Block","src":"10130:164:10","statements":[{"assignments":[2027],"declarations":[{"constant":false,"id":2027,"mutability":"mutable","name":"result","nameLocation":"10147:6:10","nodeType":"VariableDeclaration","scope":2051,"src":"10140:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2026,"name":"int256","nodeType":"ElementaryTypeName","src":"10140:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":2034,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2028,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2021,"src":"10157:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2029,"name":"ONE_64x64","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1562,"src":"10161:9:10","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"10157:13:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2031,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10156:15:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2032,"name":"DECIMALS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1557,"src":"10174:8:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"10156:26:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"10140:42:10"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2036,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2021,"src":"10200:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2037,"name":"MIN_64x64","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1566,"src":"10205:9:10","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"10200:14:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2039,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2021,"src":"10218:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":2040,"name":"MAX_64x64","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1569,"src":"10223:9:10","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"10218:14:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10200:32:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"726573756c74206f7574206f662072616e6765","id":2043,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10234:21:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_e1d240271c0bae9a59e3391287011b8cb205593d101d7303b0a19e6a118e4a9e","typeString":"literal_string \"result out of range\""},"value":"result out of range"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e1d240271c0bae9a59e3391287011b8cb205593d101d7303b0a19e6a118e4a9e","typeString":"literal_string \"result out of range\""}],"id":2035,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10192:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2044,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10192:64:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2045,"nodeType":"ExpressionStatement","src":"10192:64:10"},{"expression":{"arguments":[{"id":2048,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2027,"src":"10280:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2047,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10273:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":2046,"name":"int128","nodeType":"ElementaryTypeName","src":"10273:6:10","typeDescriptions":{}}},"id":2049,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10273:14:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"functionReturnParameters":2025,"id":2050,"nodeType":"Return","src":"10266:21:10"}]},"documentation":{"id":2019,"nodeType":"StructuredDocumentation","src":"9921:143:10","text":" Convert signed decimal-18 number to ABDK-128x128 format\n @param x number decimal-18\n @return ABDK-128x128 number"},"id":2052,"implemented":true,"kind":"function","modifiers":[],"name":"_fromDec18","nameLocation":"10078:10:10","nodeType":"FunctionDefinition","parameters":{"id":2022,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2021,"mutability":"mutable","name":"x","nameLocation":"10096:1:10","nodeType":"VariableDeclaration","scope":2052,"src":"10089:8:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2020,"name":"int256","nodeType":"ElementaryTypeName","src":"10089:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"10088:10:10"},"returnParameters":{"id":2025,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2024,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2052,"src":"10122:6:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":2023,"name":"int128","nodeType":"ElementaryTypeName","src":"10122:6:10","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"10121:8:10"},"scope":2100,"src":"10069:225:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2070,"nodeType":"Block","src":"10518:58:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2062,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2055,"src":"10543:1:10","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int128","typeString":"int128"}],"id":2061,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10536:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2060,"name":"int256","nodeType":"ElementaryTypeName","src":"10536:6:10","typeDescriptions":{}}},"id":2063,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10536:9:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2064,"name":"DECIMALS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1557,"src":"10548:8:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"10536:20:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2066,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10535:22:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2067,"name":"ONE_64x64","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1562,"src":"10560:9:10","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"10535:34:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":2059,"id":2069,"nodeType":"Return","src":"10528:41:10"}]},"documentation":{"id":2053,"nodeType":"StructuredDocumentation","src":"10300:155:10","text":" Convert ABDK-128x128 format to signed decimal-18 number\n @param x number in ABDK-128x128 format\n @return decimal 18 (signed)"},"id":2071,"implemented":true,"kind":"function","modifiers":[],"name":"toDec18","nameLocation":"10469:7:10","nodeType":"FunctionDefinition","parameters":{"id":2056,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2055,"mutability":"mutable","name":"x","nameLocation":"10484:1:10","nodeType":"VariableDeclaration","scope":2071,"src":"10477:8:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":2054,"name":"int128","nodeType":"ElementaryTypeName","src":"10477:6:10","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"10476:10:10"},"returnParameters":{"id":2059,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2058,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2071,"src":"10510:6:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2057,"name":"int256","nodeType":"ElementaryTypeName","src":"10510:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"10509:8:10"},"scope":2100,"src":"10460:116:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2098,"nodeType":"Block","src":"10876:125:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2080,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2074,"src":"10894:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2082,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"10899:19:10","subExpression":{"hexValue":"307838303030303030303030303030303030","id":2081,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10900:18:10","typeDescriptions":{"typeIdentifier":"t_rational_9223372036854775808_by_1","typeString":"int_const 9223372036854775808"},"value":"0x8000000000000000"},"typeDescriptions":{"typeIdentifier":"t_rational_minus_9223372036854775808_by_1","typeString":"int_const -9223372036854775808"}},"src":"10894:24:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2084,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2074,"src":"10922:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"307837464646464646464646464646464646","id":2085,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10927:18:10","typeDescriptions":{"typeIdentifier":"t_rational_9223372036854775807_by_1","typeString":"int_const 9223372036854775807"},"value":"0x7FFFFFFFFFFFFFFF"},"src":"10922:23:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10894:51:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4142444b2e66726f6d496e74","id":2088,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10947:14:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_2edfc4d7d4bf55394e7cbef11f86a5e378d3a248c3a371501fb520118382d46f","typeString":"literal_string \"ABDK.fromInt\""},"value":"ABDK.fromInt"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2edfc4d7d4bf55394e7cbef11f86a5e378d3a248c3a371501fb520118382d46f","typeString":"literal_string \"ABDK.fromInt\""}],"id":2079,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10886:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2089,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10886:76:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2090,"nodeType":"ExpressionStatement","src":"10886:76:10"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2093,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2074,"src":"10986:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":2094,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10991:2:10","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10986:7:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2092,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10979:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":2091,"name":"int128","nodeType":"ElementaryTypeName","src":"10979:6:10","typeDescriptions":{}}},"id":2096,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10979:15:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"functionReturnParameters":2078,"id":2097,"nodeType":"Return","src":"10972:22:10"}]},"documentation":{"id":2072,"nodeType":"StructuredDocumentation","src":"10582:230:10","text":" Convert signed 256-bit integer number into signed 64.64-bit fixed point\n number.  Revert on overflow.\n @param x signed 256-bit integer number\n @return signed 64.64-bit fixed point number"},"id":2099,"implemented":true,"kind":"function","modifiers":[],"name":"_fromInt","nameLocation":"10826:8:10","nodeType":"FunctionDefinition","parameters":{"id":2075,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2074,"mutability":"mutable","name":"x","nameLocation":"10842:1:10","nodeType":"VariableDeclaration","scope":2099,"src":"10835:8:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2073,"name":"int256","nodeType":"ElementaryTypeName","src":"10835:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"10834:10:10"},"returnParameters":{"id":2078,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2077,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2099,"src":"10868:6:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":2076,"name":"int128","nodeType":"ElementaryTypeName","src":"10868:6:10","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"10867:8:10"},"scope":2100,"src":"10817:184:10","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2101,"src":"3027:7976:10","usedErrors":[]}],"src":"32:10972:10"},"id":10}},"contracts":{"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol":{"IERC20Upgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface of the ERC20 standard as defined in the EIP.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the amount of tokens owned by `account`."},"totalSupply()":{"details":"Returns the amount of tokens in existence."},"transfer(address,uint256)":{"details":"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":\"IERC20Upgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":512},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20Upgradeable {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x6777f3fccb5dab95a9088ef62c41bee0198fd92e50d7c94f0e3733788af4079e\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol":{"SafeERC20Upgradeable":{"abi":[],"devdoc":{"details":"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.","kind":"dev","methods":{},"title":"SafeERC20","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f23a759fa961d1d7c2cc793a24872349b863de03aeab4df05bbca5c5dfaf7bd364736f6c63430008130033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLCODE GASPRICE PUSH22 0x9FA961D1D7C2CC793A24872349B863DE03AEAB4DF05B 0xBC 0xA5 0xC5 0xDF 0xAF PUSH28 0xD364736F6C6343000813003300000000000000000000000000000000 ","sourceMap":"667:3358:1:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;667:3358:1;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f23a759fa961d1d7c2cc793a24872349b863de03aeab4df05bbca5c5dfaf7bd364736f6c63430008130033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLCODE GASPRICE PUSH22 0x9FA961D1D7C2CC793A24872349B863DE03AEAB4DF05B 0xBC 0xA5 0xC5 0xDF 0xAF PUSH28 0xD364736F6C6343000813003300000000000000000000000000000000 ","sourceMap":"667:3358:1:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"_callOptionalReturn(contract IERC20Upgradeable,bytes memory)":"infinite","safeApprove(contract IERC20Upgradeable,address,uint256)":"infinite","safeDecreaseAllowance(contract IERC20Upgradeable,address,uint256)":"infinite","safeIncreaseAllowance(contract IERC20Upgradeable,address,uint256)":"infinite","safeTransfer(contract IERC20Upgradeable,address,uint256)":"infinite","safeTransferFrom(contract IERC20Upgradeable,address,address,uint256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":\"SafeERC20Upgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":512},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20Upgradeable {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x6777f3fccb5dab95a9088ef62c41bee0198fd92e50d7c94f0e3733788af4079e\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20Upgradeable.sol\\\";\\nimport \\\"../../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20Upgradeable {\\n    using AddressUpgradeable for address;\\n\\n    function safeTransfer(\\n        IERC20Upgradeable token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(\\n        IERC20Upgradeable token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(\\n        IERC20Upgradeable token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(\\n        IERC20Upgradeable token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(\\n        IERC20Upgradeable token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            uint256 newAllowance = oldAllowance - value;\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20Upgradeable token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) {\\n            // Return data is optional\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x3e26a49d2fa5ef8338b8a9467c91e54f417cb07e849b1cc0f4ebc4d2a147938e\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x55cf2bd9fc76704ddcdc19834cd288b7de00fc0f298a40ea16a954ae8991db2d\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol":{"AddressUpgradeable":{"abi":[],"devdoc":{"details":"Collection of functions related to the address type","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208623ed4bba7c64793c909e9aef641a37146f0312cc944a3714567d18b698239c64736f6c63430008130033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP7 0x23 0xED 0x4B 0xBA PUSH29 0x64793C909E9AEF641A37146F0312CC944A3714567D18B698239C64736F PUSH13 0x63430008130033000000000000 ","sourceMap":"194:7122:2:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;194:7122:2;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208623ed4bba7c64793c909e9aef641a37146f0312cc944a3714567d18b698239c64736f6c63430008130033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP7 0x23 0xED 0x4B 0xBA PUSH29 0x64793C909E9AEF641A37146F0312CC944A3714567D18B698239C64736F PUSH13 0x63430008130033000000000000 ","sourceMap":"194:7122:2:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"functionCall(address,bytes memory)":"infinite","functionCall(address,bytes memory,string memory)":"infinite","functionCallWithValue(address,bytes memory,uint256)":"infinite","functionCallWithValue(address,bytes memory,uint256,string memory)":"infinite","functionStaticCall(address,bytes memory)":"infinite","functionStaticCall(address,bytes memory,string memory)":"infinite","isContract(address)":"infinite","sendValue(address payable,uint256)":"infinite","verifyCallResult(bool,bytes memory,string memory)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":\"AddressUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":512},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x55cf2bd9fc76704ddcdc19834cd288b7de00fc0f298a40ea16a954ae8991db2d\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.","kind":"dev","methods":{"constructor":{"details":"Initializes the contract setting the deployer as the initial owner."},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":512},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":552,"contract":"@openzeppelin/contracts/access/Ownable.sol:Ownable","label":"_owner","offset":0,"slot":"0","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ERC20":{"abi":[{"inputs":[{"internalType":"string","name":"name_","type":"string"},{"internalType":"string","name":"symbol_","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"See {IERC20-allowance}."},"approve(address,uint256)":{"details":"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{"details":"See {IERC20-balanceOf}."},"constructor":{"details":"Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction."},"decimals()":{"details":"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"decreaseAllowance(address,uint256)":{"details":"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."},"increaseAllowance(address,uint256)":{"details":"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{"details":"See {IERC20-totalSupply}."},"transfer(address,uint256)":{"details":"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."},"transferFrom(address,address,uint256)":{"details":"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_694":{"entryPoint":null,"id":694,"parameterSlots":2,"returnSlots":0},"abi_decode_string_fromMemory":{"entryPoint":112,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory":{"entryPoint":287,"id":null,"parameterSlots":2,"returnSlots":2},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":453,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":536,"id":null,"parameterSlots":2,"returnSlots":0},"extract_byte_array_length":{"entryPoint":393,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x41":{"entryPoint":90,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:4144:11","statements":[{"nodeType":"YulBlock","src":"6:3:11","statements":[]},{"body":{"nodeType":"YulBlock","src":"46:95:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"63:1:11","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"70:3:11","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"75:10:11","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"66:3:11"},"nodeType":"YulFunctionCall","src":"66:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"56:6:11"},"nodeType":"YulFunctionCall","src":"56:31:11"},"nodeType":"YulExpressionStatement","src":"56:31:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"103:1:11","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"106:4:11","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"96:6:11"},"nodeType":"YulFunctionCall","src":"96:15:11"},"nodeType":"YulExpressionStatement","src":"96:15:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"127:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"130:4:11","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"120:6:11"},"nodeType":"YulFunctionCall","src":"120:15:11"},"nodeType":"YulExpressionStatement","src":"120:15:11"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"14:127:11"},{"body":{"nodeType":"YulBlock","src":"210:776:11","statements":[{"body":{"nodeType":"YulBlock","src":"259:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"268:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"271:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"261:6:11"},"nodeType":"YulFunctionCall","src":"261:12:11"},"nodeType":"YulExpressionStatement","src":"261:12:11"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"238:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"246:4:11","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"234:3:11"},"nodeType":"YulFunctionCall","src":"234:17:11"},{"name":"end","nodeType":"YulIdentifier","src":"253:3:11"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"230:3:11"},"nodeType":"YulFunctionCall","src":"230:27:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"223:6:11"},"nodeType":"YulFunctionCall","src":"223:35:11"},"nodeType":"YulIf","src":"220:55:11"},{"nodeType":"YulVariableDeclaration","src":"284:23:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"300:6:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"294:5:11"},"nodeType":"YulFunctionCall","src":"294:13:11"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"288:2:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"316:28:11","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"334:2:11","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"338:1:11","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"330:3:11"},"nodeType":"YulFunctionCall","src":"330:10:11"},{"kind":"number","nodeType":"YulLiteral","src":"342:1:11","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"326:3:11"},"nodeType":"YulFunctionCall","src":"326:18:11"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"320:2:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"367:22:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"369:16:11"},"nodeType":"YulFunctionCall","src":"369:18:11"},"nodeType":"YulExpressionStatement","src":"369:18:11"}]},"condition":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"359:2:11"},{"name":"_2","nodeType":"YulIdentifier","src":"363:2:11"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"356:2:11"},"nodeType":"YulFunctionCall","src":"356:10:11"},"nodeType":"YulIf","src":"353:36:11"},{"nodeType":"YulVariableDeclaration","src":"398:17:11","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"412:2:11","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"408:3:11"},"nodeType":"YulFunctionCall","src":"408:7:11"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"402:2:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"424:23:11","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"444:2:11","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"438:5:11"},"nodeType":"YulFunctionCall","src":"438:9:11"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"428:6:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"456:71:11","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"478:6:11"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"502:2:11"},{"kind":"number","nodeType":"YulLiteral","src":"506:4:11","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"498:3:11"},"nodeType":"YulFunctionCall","src":"498:13:11"},{"name":"_3","nodeType":"YulIdentifier","src":"513:2:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"494:3:11"},"nodeType":"YulFunctionCall","src":"494:22:11"},{"kind":"number","nodeType":"YulLiteral","src":"518:2:11","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"490:3:11"},"nodeType":"YulFunctionCall","src":"490:31:11"},{"name":"_3","nodeType":"YulIdentifier","src":"523:2:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"486:3:11"},"nodeType":"YulFunctionCall","src":"486:40:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"474:3:11"},"nodeType":"YulFunctionCall","src":"474:53:11"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"460:10:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"586:22:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"588:16:11"},"nodeType":"YulFunctionCall","src":"588:18:11"},"nodeType":"YulExpressionStatement","src":"588:18:11"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"545:10:11"},{"name":"_2","nodeType":"YulIdentifier","src":"557:2:11"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"542:2:11"},"nodeType":"YulFunctionCall","src":"542:18:11"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"565:10:11"},{"name":"memPtr","nodeType":"YulIdentifier","src":"577:6:11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"562:2:11"},"nodeType":"YulFunctionCall","src":"562:22:11"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"539:2:11"},"nodeType":"YulFunctionCall","src":"539:46:11"},"nodeType":"YulIf","src":"536:72:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"624:2:11","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"628:10:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"617:6:11"},"nodeType":"YulFunctionCall","src":"617:22:11"},"nodeType":"YulExpressionStatement","src":"617:22:11"},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"655:6:11"},{"name":"_1","nodeType":"YulIdentifier","src":"663:2:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"648:6:11"},"nodeType":"YulFunctionCall","src":"648:18:11"},"nodeType":"YulExpressionStatement","src":"648:18:11"},{"nodeType":"YulVariableDeclaration","src":"675:14:11","value":{"kind":"number","nodeType":"YulLiteral","src":"685:4:11","type":"","value":"0x20"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"679:2:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"735:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"744:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"747:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"737:6:11"},"nodeType":"YulFunctionCall","src":"737:12:11"},"nodeType":"YulExpressionStatement","src":"737:12:11"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"712:6:11"},{"name":"_1","nodeType":"YulIdentifier","src":"720:2:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"708:3:11"},"nodeType":"YulFunctionCall","src":"708:15:11"},{"name":"_4","nodeType":"YulIdentifier","src":"725:2:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"704:3:11"},"nodeType":"YulFunctionCall","src":"704:24:11"},{"name":"end","nodeType":"YulIdentifier","src":"730:3:11"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"701:2:11"},"nodeType":"YulFunctionCall","src":"701:33:11"},"nodeType":"YulIf","src":"698:53:11"},{"nodeType":"YulVariableDeclaration","src":"760:10:11","value":{"kind":"number","nodeType":"YulLiteral","src":"769:1:11","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"764:1:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"825:87:11","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"854:6:11"},{"name":"i","nodeType":"YulIdentifier","src":"862:1:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"850:3:11"},"nodeType":"YulFunctionCall","src":"850:14:11"},{"name":"_4","nodeType":"YulIdentifier","src":"866:2:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"846:3:11"},"nodeType":"YulFunctionCall","src":"846:23:11"},{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"885:6:11"},{"name":"i","nodeType":"YulIdentifier","src":"893:1:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"881:3:11"},"nodeType":"YulFunctionCall","src":"881:14:11"},{"name":"_4","nodeType":"YulIdentifier","src":"897:2:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"877:3:11"},"nodeType":"YulFunctionCall","src":"877:23:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"871:5:11"},"nodeType":"YulFunctionCall","src":"871:30:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"839:6:11"},"nodeType":"YulFunctionCall","src":"839:63:11"},"nodeType":"YulExpressionStatement","src":"839:63:11"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"790:1:11"},{"name":"_1","nodeType":"YulIdentifier","src":"793:2:11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"787:2:11"},"nodeType":"YulFunctionCall","src":"787:9:11"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"797:19:11","statements":[{"nodeType":"YulAssignment","src":"799:15:11","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"808:1:11"},{"name":"_4","nodeType":"YulIdentifier","src":"811:2:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"804:3:11"},"nodeType":"YulFunctionCall","src":"804:10:11"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"799:1:11"}]}]},"pre":{"nodeType":"YulBlock","src":"783:3:11","statements":[]},"src":"779:133:11"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"936:6:11"},{"name":"_1","nodeType":"YulIdentifier","src":"944:2:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"932:3:11"},"nodeType":"YulFunctionCall","src":"932:15:11"},{"name":"_4","nodeType":"YulIdentifier","src":"949:2:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"928:3:11"},"nodeType":"YulFunctionCall","src":"928:24:11"},{"kind":"number","nodeType":"YulLiteral","src":"954:1:11","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"921:6:11"},"nodeType":"YulFunctionCall","src":"921:35:11"},"nodeType":"YulExpressionStatement","src":"921:35:11"},{"nodeType":"YulAssignment","src":"965:15:11","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"974:6:11"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"965:5:11"}]}]},"name":"abi_decode_string_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"184:6:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"192:3:11","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"200:5:11","type":""}],"src":"146:840:11"},{"body":{"nodeType":"YulBlock","src":"1109:444:11","statements":[{"body":{"nodeType":"YulBlock","src":"1155:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1164:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1167:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1157:6:11"},"nodeType":"YulFunctionCall","src":"1157:12:11"},"nodeType":"YulExpressionStatement","src":"1157:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1130:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"1139:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1126:3:11"},"nodeType":"YulFunctionCall","src":"1126:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"1151:2:11","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1122:3:11"},"nodeType":"YulFunctionCall","src":"1122:32:11"},"nodeType":"YulIf","src":"1119:52:11"},{"nodeType":"YulVariableDeclaration","src":"1180:30:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1200:9:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1194:5:11"},"nodeType":"YulFunctionCall","src":"1194:16:11"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1184:6:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1219:28:11","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1237:2:11","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"1241:1:11","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1233:3:11"},"nodeType":"YulFunctionCall","src":"1233:10:11"},{"kind":"number","nodeType":"YulLiteral","src":"1245:1:11","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1229:3:11"},"nodeType":"YulFunctionCall","src":"1229:18:11"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1223:2:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"1274:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1283:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1286:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1276:6:11"},"nodeType":"YulFunctionCall","src":"1276:12:11"},"nodeType":"YulExpressionStatement","src":"1276:12:11"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1262:6:11"},{"name":"_1","nodeType":"YulIdentifier","src":"1270:2:11"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1259:2:11"},"nodeType":"YulFunctionCall","src":"1259:14:11"},"nodeType":"YulIf","src":"1256:34:11"},{"nodeType":"YulAssignment","src":"1299:71:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1342:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"1353:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1338:3:11"},"nodeType":"YulFunctionCall","src":"1338:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1362:7:11"}],"functionName":{"name":"abi_decode_string_fromMemory","nodeType":"YulIdentifier","src":"1309:28:11"},"nodeType":"YulFunctionCall","src":"1309:61:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1299:6:11"}]},{"nodeType":"YulVariableDeclaration","src":"1379:41:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1405:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"1416:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1401:3:11"},"nodeType":"YulFunctionCall","src":"1401:18:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1395:5:11"},"nodeType":"YulFunctionCall","src":"1395:25:11"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"1383:8:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"1449:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1458:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1461:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1451:6:11"},"nodeType":"YulFunctionCall","src":"1451:12:11"},"nodeType":"YulExpressionStatement","src":"1451:12:11"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"1435:8:11"},{"name":"_1","nodeType":"YulIdentifier","src":"1445:2:11"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1432:2:11"},"nodeType":"YulFunctionCall","src":"1432:16:11"},"nodeType":"YulIf","src":"1429:36:11"},{"nodeType":"YulAssignment","src":"1474:73:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1517:9:11"},{"name":"offset_1","nodeType":"YulIdentifier","src":"1528:8:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1513:3:11"},"nodeType":"YulFunctionCall","src":"1513:24:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1539:7:11"}],"functionName":{"name":"abi_decode_string_fromMemory","nodeType":"YulIdentifier","src":"1484:28:11"},"nodeType":"YulFunctionCall","src":"1484:63:11"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1474:6:11"}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1067:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1078:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1090:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1098:6:11","type":""}],"src":"991:562:11"},{"body":{"nodeType":"YulBlock","src":"1613:325:11","statements":[{"nodeType":"YulAssignment","src":"1623:22:11","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1637:1:11","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"1640:4:11"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"1633:3:11"},"nodeType":"YulFunctionCall","src":"1633:12:11"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1623:6:11"}]},{"nodeType":"YulVariableDeclaration","src":"1654:38:11","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1684:4:11"},{"kind":"number","nodeType":"YulLiteral","src":"1690:1:11","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1680:3:11"},"nodeType":"YulFunctionCall","src":"1680:12:11"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"1658:18:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"1731:31:11","statements":[{"nodeType":"YulAssignment","src":"1733:27:11","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1747:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"1755:4:11","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1743:3:11"},"nodeType":"YulFunctionCall","src":"1743:17:11"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1733:6:11"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"1711:18:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1704:6:11"},"nodeType":"YulFunctionCall","src":"1704:26:11"},"nodeType":"YulIf","src":"1701:61:11"},{"body":{"nodeType":"YulBlock","src":"1821:111:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1842:1:11","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1849:3:11","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"1854:10:11","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1845:3:11"},"nodeType":"YulFunctionCall","src":"1845:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1835:6:11"},"nodeType":"YulFunctionCall","src":"1835:31:11"},"nodeType":"YulExpressionStatement","src":"1835:31:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1886:1:11","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1889:4:11","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1879:6:11"},"nodeType":"YulFunctionCall","src":"1879:15:11"},"nodeType":"YulExpressionStatement","src":"1879:15:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1914:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1917:4:11","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1907:6:11"},"nodeType":"YulFunctionCall","src":"1907:15:11"},"nodeType":"YulExpressionStatement","src":"1907:15:11"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"1777:18:11"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1800:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"1808:2:11","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1797:2:11"},"nodeType":"YulFunctionCall","src":"1797:14:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1774:2:11"},"nodeType":"YulFunctionCall","src":"1774:38:11"},"nodeType":"YulIf","src":"1771:161:11"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"1593:4:11","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1602:6:11","type":""}],"src":"1558:380:11"},{"body":{"nodeType":"YulBlock","src":"1999:65:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2016:1:11","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"2019:3:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2009:6:11"},"nodeType":"YulFunctionCall","src":"2009:14:11"},"nodeType":"YulExpressionStatement","src":"2009:14:11"},{"nodeType":"YulAssignment","src":"2032:26:11","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2050:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2053:4:11","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"2040:9:11"},"nodeType":"YulFunctionCall","src":"2040:18:11"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"2032:4:11"}]}]},"name":"array_dataslot_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"1982:3:11","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"1990:4:11","type":""}],"src":"1943:121:11"},{"body":{"nodeType":"YulBlock","src":"2150:464:11","statements":[{"body":{"nodeType":"YulBlock","src":"2183:425:11","statements":[{"nodeType":"YulVariableDeclaration","src":"2197:11:11","value":{"kind":"number","nodeType":"YulLiteral","src":"2207:1:11","type":"","value":"0"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"2201:2:11","type":""}]},{"expression":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"2228:2:11"},{"name":"array","nodeType":"YulIdentifier","src":"2232:5:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2221:6:11"},"nodeType":"YulFunctionCall","src":"2221:17:11"},"nodeType":"YulExpressionStatement","src":"2221:17:11"},{"nodeType":"YulVariableDeclaration","src":"2251:31:11","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"2273:2:11"},{"kind":"number","nodeType":"YulLiteral","src":"2277:4:11","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"2263:9:11"},"nodeType":"YulFunctionCall","src":"2263:19:11"},"variables":[{"name":"data","nodeType":"YulTypedName","src":"2255:4:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2295:57:11","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2318:4:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2328:1:11","type":"","value":"5"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"2335:10:11"},{"kind":"number","nodeType":"YulLiteral","src":"2347:2:11","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2331:3:11"},"nodeType":"YulFunctionCall","src":"2331:19:11"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2324:3:11"},"nodeType":"YulFunctionCall","src":"2324:27:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2314:3:11"},"nodeType":"YulFunctionCall","src":"2314:38:11"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"2299:11:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"2389:23:11","statements":[{"nodeType":"YulAssignment","src":"2391:19:11","value":{"name":"data","nodeType":"YulIdentifier","src":"2406:4:11"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"2391:11:11"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"2371:10:11"},{"kind":"number","nodeType":"YulLiteral","src":"2383:4:11","type":"","value":"0x20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2368:2:11"},"nodeType":"YulFunctionCall","src":"2368:20:11"},"nodeType":"YulIf","src":"2365:47:11"},{"nodeType":"YulVariableDeclaration","src":"2425:41:11","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2439:4:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2449:1:11","type":"","value":"5"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"2456:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"2461:2:11","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2452:3:11"},"nodeType":"YulFunctionCall","src":"2452:12:11"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2445:3:11"},"nodeType":"YulFunctionCall","src":"2445:20:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2435:3:11"},"nodeType":"YulFunctionCall","src":"2435:31:11"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"2429:2:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2479:24:11","value":{"name":"deleteStart","nodeType":"YulIdentifier","src":"2492:11:11"},"variables":[{"name":"start","nodeType":"YulTypedName","src":"2483:5:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"2577:21:11","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2586:5:11"},{"name":"_1","nodeType":"YulIdentifier","src":"2593:2:11"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2579:6:11"},"nodeType":"YulFunctionCall","src":"2579:17:11"},"nodeType":"YulExpressionStatement","src":"2579:17:11"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2527:5:11"},{"name":"_2","nodeType":"YulIdentifier","src":"2534:2:11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2524:2:11"},"nodeType":"YulFunctionCall","src":"2524:13:11"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2538:26:11","statements":[{"nodeType":"YulAssignment","src":"2540:22:11","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2553:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"2560:1:11","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2549:3:11"},"nodeType":"YulFunctionCall","src":"2549:13:11"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"2540:5:11"}]}]},"pre":{"nodeType":"YulBlock","src":"2520:3:11","statements":[]},"src":"2516:82:11"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"2166:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"2171:2:11","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2163:2:11"},"nodeType":"YulFunctionCall","src":"2163:11:11"},"nodeType":"YulIf","src":"2160:448:11"}]},"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"2122:5:11","type":""},{"name":"len","nodeType":"YulTypedName","src":"2129:3:11","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"2134:10:11","type":""}],"src":"2069:545:11"},{"body":{"nodeType":"YulBlock","src":"2704:81:11","statements":[{"nodeType":"YulAssignment","src":"2714:65:11","value":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2729:4:11"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2747:1:11","type":"","value":"3"},{"name":"len","nodeType":"YulIdentifier","src":"2750:3:11"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2743:3:11"},"nodeType":"YulFunctionCall","src":"2743:11:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2760:1:11","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2756:3:11"},"nodeType":"YulFunctionCall","src":"2756:6:11"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2739:3:11"},"nodeType":"YulFunctionCall","src":"2739:24:11"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2735:3:11"},"nodeType":"YulFunctionCall","src":"2735:29:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2725:3:11"},"nodeType":"YulFunctionCall","src":"2725:40:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2771:1:11","type":"","value":"1"},{"name":"len","nodeType":"YulIdentifier","src":"2774:3:11"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2767:3:11"},"nodeType":"YulFunctionCall","src":"2767:11:11"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2722:2:11"},"nodeType":"YulFunctionCall","src":"2722:57:11"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"2714:4:11"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"2681:4:11","type":""},{"name":"len","nodeType":"YulTypedName","src":"2687:3:11","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"2695:4:11","type":""}],"src":"2619:166:11"},{"body":{"nodeType":"YulBlock","src":"2886:1256:11","statements":[{"nodeType":"YulVariableDeclaration","src":"2896:24:11","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2916:3:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2910:5:11"},"nodeType":"YulFunctionCall","src":"2910:10:11"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"2900:6:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"2963:22:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"2965:16:11"},"nodeType":"YulFunctionCall","src":"2965:18:11"},"nodeType":"YulExpressionStatement","src":"2965:18:11"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"2935:6:11"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2951:2:11","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"2955:1:11","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2947:3:11"},"nodeType":"YulFunctionCall","src":"2947:10:11"},{"kind":"number","nodeType":"YulLiteral","src":"2959:1:11","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2943:3:11"},"nodeType":"YulFunctionCall","src":"2943:18:11"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2932:2:11"},"nodeType":"YulFunctionCall","src":"2932:30:11"},"nodeType":"YulIf","src":"2929:56:11"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3038:4:11"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3076:4:11"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"3070:5:11"},"nodeType":"YulFunctionCall","src":"3070:11:11"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"3044:25:11"},"nodeType":"YulFunctionCall","src":"3044:38:11"},{"name":"newLen","nodeType":"YulIdentifier","src":"3084:6:11"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulIdentifier","src":"2994:43:11"},"nodeType":"YulFunctionCall","src":"2994:97:11"},"nodeType":"YulExpressionStatement","src":"2994:97:11"},{"nodeType":"YulVariableDeclaration","src":"3100:18:11","value":{"kind":"number","nodeType":"YulLiteral","src":"3117:1:11","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"3104:9:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3127:23:11","value":{"kind":"number","nodeType":"YulLiteral","src":"3146:4:11","type":"","value":"0x20"},"variables":[{"name":"srcOffset_1","nodeType":"YulTypedName","src":"3131:11:11","type":""}]},{"nodeType":"YulAssignment","src":"3159:24:11","value":{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"3172:11:11"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"3159:9:11"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"3229:656:11","statements":[{"nodeType":"YulVariableDeclaration","src":"3243:35:11","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"3262:6:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3274:2:11","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3270:3:11"},"nodeType":"YulFunctionCall","src":"3270:7:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3258:3:11"},"nodeType":"YulFunctionCall","src":"3258:20:11"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"3247:7:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3291:49:11","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3335:4:11"}],"functionName":{"name":"array_dataslot_string_storage","nodeType":"YulIdentifier","src":"3305:29:11"},"nodeType":"YulFunctionCall","src":"3305:35:11"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"3295:6:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3353:10:11","value":{"kind":"number","nodeType":"YulLiteral","src":"3362:1:11","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"3357:1:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"3440:172:11","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"3465:6:11"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3483:3:11"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"3488:9:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3479:3:11"},"nodeType":"YulFunctionCall","src":"3479:19:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3473:5:11"},"nodeType":"YulFunctionCall","src":"3473:26:11"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"3458:6:11"},"nodeType":"YulFunctionCall","src":"3458:42:11"},"nodeType":"YulExpressionStatement","src":"3458:42:11"},{"nodeType":"YulAssignment","src":"3517:24:11","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"3531:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"3539:1:11","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3527:3:11"},"nodeType":"YulFunctionCall","src":"3527:14:11"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"3517:6:11"}]},{"nodeType":"YulAssignment","src":"3558:40:11","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"3575:9:11"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"3586:11:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3571:3:11"},"nodeType":"YulFunctionCall","src":"3571:27:11"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"3558:9:11"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3387:1:11"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"3390:7:11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3384:2:11"},"nodeType":"YulFunctionCall","src":"3384:14:11"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"3399:28:11","statements":[{"nodeType":"YulAssignment","src":"3401:24:11","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3410:1:11"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"3413:11:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3406:3:11"},"nodeType":"YulFunctionCall","src":"3406:19:11"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"3401:1:11"}]}]},"pre":{"nodeType":"YulBlock","src":"3380:3:11","statements":[]},"src":"3376:236:11"},{"body":{"nodeType":"YulBlock","src":"3660:166:11","statements":[{"nodeType":"YulVariableDeclaration","src":"3678:43:11","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3705:3:11"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"3710:9:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3701:3:11"},"nodeType":"YulFunctionCall","src":"3701:19:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3695:5:11"},"nodeType":"YulFunctionCall","src":"3695:26:11"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"3682:9:11","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"3745:6:11"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"3757:9:11"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3784:1:11","type":"","value":"3"},{"name":"newLen","nodeType":"YulIdentifier","src":"3787:6:11"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3780:3:11"},"nodeType":"YulFunctionCall","src":"3780:14:11"},{"kind":"number","nodeType":"YulLiteral","src":"3796:3:11","type":"","value":"248"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3776:3:11"},"nodeType":"YulFunctionCall","src":"3776:24:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3806:1:11","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3802:3:11"},"nodeType":"YulFunctionCall","src":"3802:6:11"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3772:3:11"},"nodeType":"YulFunctionCall","src":"3772:37:11"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3768:3:11"},"nodeType":"YulFunctionCall","src":"3768:42:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3753:3:11"},"nodeType":"YulFunctionCall","src":"3753:58:11"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"3738:6:11"},"nodeType":"YulFunctionCall","src":"3738:74:11"},"nodeType":"YulExpressionStatement","src":"3738:74:11"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"3631:7:11"},{"name":"newLen","nodeType":"YulIdentifier","src":"3640:6:11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3628:2:11"},"nodeType":"YulFunctionCall","src":"3628:19:11"},"nodeType":"YulIf","src":"3625:201:11"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3846:4:11"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3860:1:11","type":"","value":"1"},{"name":"newLen","nodeType":"YulIdentifier","src":"3863:6:11"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3856:3:11"},"nodeType":"YulFunctionCall","src":"3856:14:11"},{"kind":"number","nodeType":"YulLiteral","src":"3872:1:11","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3852:3:11"},"nodeType":"YulFunctionCall","src":"3852:22:11"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"3839:6:11"},"nodeType":"YulFunctionCall","src":"3839:36:11"},"nodeType":"YulExpressionStatement","src":"3839:36:11"}]},"nodeType":"YulCase","src":"3222:663:11","value":{"kind":"number","nodeType":"YulLiteral","src":"3227:1:11","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"3902:234:11","statements":[{"nodeType":"YulVariableDeclaration","src":"3916:14:11","value":{"kind":"number","nodeType":"YulLiteral","src":"3929:1:11","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"3920:5:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"3965:67:11","statements":[{"nodeType":"YulAssignment","src":"3983:35:11","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4002:3:11"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"4007:9:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3998:3:11"},"nodeType":"YulFunctionCall","src":"3998:19:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3992:5:11"},"nodeType":"YulFunctionCall","src":"3992:26:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3983:5:11"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"3946:6:11"},"nodeType":"YulIf","src":"3943:89:11"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4052:4:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4111:5:11"},{"name":"newLen","nodeType":"YulIdentifier","src":"4118:6:11"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"4058:52:11"},"nodeType":"YulFunctionCall","src":"4058:67:11"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"4045:6:11"},"nodeType":"YulFunctionCall","src":"4045:81:11"},"nodeType":"YulExpressionStatement","src":"4045:81:11"}]},"nodeType":"YulCase","src":"3894:242:11","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"3202:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"3210:2:11","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3199:2:11"},"nodeType":"YulFunctionCall","src":"3199:14:11"},"nodeType":"YulSwitch","src":"3192:944:11"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"2871:4:11","type":""},{"name":"src","nodeType":"YulTypedName","src":"2877:3:11","type":""}],"src":"2790:1352:11"}]},"contents":"{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        mstore(add(add(memPtr, _1), _4), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n}","id":11,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b5060405162000bc738038062000bc783398101604081905262000034916200011f565b600362000042838262000218565b50600462000051828262000218565b505050620002e4565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200008257600080fd5b81516001600160401b03808211156200009f576200009f6200005a565b604051601f8301601f19908116603f01168101908282118183101715620000ca57620000ca6200005a565b81604052838152602092508683858801011115620000e757600080fd5b600091505b838210156200010b5785820183015181830184015290820190620000ec565b600093810190920192909252949350505050565b600080604083850312156200013357600080fd5b82516001600160401b03808211156200014b57600080fd5b620001598683870162000070565b935060208501519150808211156200017057600080fd5b506200017f8582860162000070565b9150509250929050565b600181811c908216806200019e57607f821691505b602082108103620001bf57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200021357600081815260208120601f850160051c81016020861015620001ee5750805b601f850160051c820191505b818110156200020f57828155600101620001fa565b5050505b505050565b81516001600160401b038111156200023457620002346200005a565b6200024c8162000245845462000189565b84620001c5565b602080601f8311600181146200028457600084156200026b5750858301515b600019600386901b1c1916600185901b1785556200020f565b600085815260208120601f198616915b82811015620002b55788860151825594840194600190910190840162000294565b5085821015620002d45787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6108d380620002f46000396000f3fe608060405234801561001057600080fd5b50600436106100b95760003560e01c80633950935111610081578063a457c2d71161005b578063a457c2d714610177578063a9059cbb1461018a578063dd62ed3e1461019d57600080fd5b8063395093511461013357806370a082311461014657806395d89b411461016f57600080fd5b806306fdde03146100be578063095ea7b3146100dc57806318160ddd146100ff57806323b872dd14610111578063313ce56714610124575b600080fd5b6100c66101d6565b6040516100d3919061071d565b60405180910390f35b6100ef6100ea366004610787565b610268565b60405190151581526020016100d3565b6002545b6040519081526020016100d3565b6100ef61011f3660046107b1565b610282565b604051601281526020016100d3565b6100ef610141366004610787565b6102a6565b6101036101543660046107ed565b6001600160a01b031660009081526020819052604090205490565b6100c66102e5565b6100ef610185366004610787565b6102f4565b6100ef610198366004610787565b61038b565b6101036101ab36600461080f565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546101e590610842565b80601f016020809104026020016040519081016040528092919081815260200182805461021190610842565b801561025e5780601f106102335761010080835404028352916020019161025e565b820191906000526020600020905b81548152906001019060200180831161024157829003601f168201915b5050505050905090565b600033610276818585610399565b60019150505b92915050565b6000336102908582856104bd565b61029b85858561054f565b506001949350505050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490919061027690829086906102e090879061087c565b610399565b6060600480546101e590610842565b3360008181526001602090815260408083206001600160a01b03871684529091528120549091908381101561037e5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b61029b8286868403610399565b60003361027681858561054f565b6001600160a01b0383166103fb5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610375565b6001600160a01b03821661045c5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610375565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038381166000908152600160209081526040808320938616835292905220546000198114610549578181101561053c5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610375565b6105498484848403610399565b50505050565b6001600160a01b0383166105b35760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610375565b6001600160a01b0382166106155760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610375565b6001600160a01b0383166000908152602081905260409020548181101561068d5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610375565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906106c490849061087c565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161071091815260200190565b60405180910390a3610549565b600060208083528351808285015260005b8181101561074a5785810183015185820160400152820161072e565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461078257600080fd5b919050565b6000806040838503121561079a57600080fd5b6107a38361076b565b946020939093013593505050565b6000806000606084860312156107c657600080fd5b6107cf8461076b565b92506107dd6020850161076b565b9150604084013590509250925092565b6000602082840312156107ff57600080fd5b6108088261076b565b9392505050565b6000806040838503121561082257600080fd5b61082b8361076b565b91506108396020840161076b565b90509250929050565b600181811c9082168061085657607f821691505b60208210810361087657634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561027c57634e487b7160e01b600052601160045260246000fdfea2646970667358221220eb4e1fb9d2f49c49dd8af7fb5528719f0d08442691208701affc150761be7f4464736f6c63430008130033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xBC7 CODESIZE SUB DUP1 PUSH3 0xBC7 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x11F JUMP JUMPDEST PUSH1 0x3 PUSH3 0x42 DUP4 DUP3 PUSH3 0x218 JUMP JUMPDEST POP PUSH1 0x4 PUSH3 0x51 DUP3 DUP3 PUSH3 0x218 JUMP JUMPDEST POP POP POP PUSH3 0x2E4 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x9F JUMPI PUSH3 0x9F PUSH3 0x5A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0xCA JUMPI PUSH3 0xCA PUSH3 0x5A JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0xE7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x10B JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0xEC JUMP JUMPDEST PUSH1 0x0 SWAP4 DUP2 ADD SWAP1 SWAP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x133 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x14B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x159 DUP7 DUP4 DUP8 ADD PUSH3 0x70 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x170 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x17F DUP6 DUP3 DUP7 ADD PUSH3 0x70 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x19E JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x1BF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x213 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x1EE JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x20F JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x1FA JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x234 JUMPI PUSH3 0x234 PUSH3 0x5A JUMP JUMPDEST PUSH3 0x24C DUP2 PUSH3 0x245 DUP5 SLOAD PUSH3 0x189 JUMP JUMPDEST DUP5 PUSH3 0x1C5 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x284 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x26B JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x20F JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x2B5 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x294 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x2D4 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x8D3 DUP1 PUSH3 0x2F4 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x81 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x177 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x18A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x19D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x39509351 EQ PUSH2 0x133 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x146 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x16F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xBE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xDC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xFF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x111 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x124 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC6 PUSH2 0x1D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD3 SWAP2 SWAP1 PUSH2 0x71D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEF PUSH2 0xEA CALLDATASIZE PUSH1 0x4 PUSH2 0x787 JUMP JUMPDEST PUSH2 0x268 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xD3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xD3 JUMP JUMPDEST PUSH2 0xEF PUSH2 0x11F CALLDATASIZE PUSH1 0x4 PUSH2 0x7B1 JUMP JUMPDEST PUSH2 0x282 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xD3 JUMP JUMPDEST PUSH2 0xEF PUSH2 0x141 CALLDATASIZE PUSH1 0x4 PUSH2 0x787 JUMP JUMPDEST PUSH2 0x2A6 JUMP JUMPDEST PUSH2 0x103 PUSH2 0x154 CALLDATASIZE PUSH1 0x4 PUSH2 0x7ED JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xC6 PUSH2 0x2E5 JUMP JUMPDEST PUSH2 0xEF PUSH2 0x185 CALLDATASIZE PUSH1 0x4 PUSH2 0x787 JUMP JUMPDEST PUSH2 0x2F4 JUMP JUMPDEST PUSH2 0xEF PUSH2 0x198 CALLDATASIZE PUSH1 0x4 PUSH2 0x787 JUMP JUMPDEST PUSH2 0x38B JUMP JUMPDEST PUSH2 0x103 PUSH2 0x1AB CALLDATASIZE PUSH1 0x4 PUSH2 0x80F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1E5 SWAP1 PUSH2 0x842 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x211 SWAP1 PUSH2 0x842 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x25E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x233 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x25E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x241 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x276 DUP2 DUP6 DUP6 PUSH2 0x399 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x290 DUP6 DUP3 DUP6 PUSH2 0x4BD JUMP JUMPDEST PUSH2 0x29B DUP6 DUP6 DUP6 PUSH2 0x54F JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x276 SWAP1 DUP3 SWAP1 DUP7 SWAP1 PUSH2 0x2E0 SWAP1 DUP8 SWAP1 PUSH2 0x87C JUMP JUMPDEST PUSH2 0x399 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1E5 SWAP1 PUSH2 0x842 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 DUP4 DUP2 LT ISZERO PUSH2 0x37E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x29B DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x399 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x276 DUP2 DUP6 DUP6 PUSH2 0x54F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3FB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x375 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x45C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x375 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 EQ PUSH2 0x549 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x53C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x375 JUMP JUMPDEST PUSH2 0x549 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x399 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x5B3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x375 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x615 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x375 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x68D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x375 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x6C4 SWAP1 DUP5 SWAP1 PUSH2 0x87C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x710 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x549 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x74A JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x72E JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x782 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x79A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7A3 DUP4 PUSH2 0x76B JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x7C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7CF DUP5 PUSH2 0x76B JUMP JUMPDEST SWAP3 POP PUSH2 0x7DD PUSH1 0x20 DUP6 ADD PUSH2 0x76B JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x808 DUP3 PUSH2 0x76B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x822 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x82B DUP4 PUSH2 0x76B JUMP JUMPDEST SWAP2 POP PUSH2 0x839 PUSH1 0x20 DUP5 ADD PUSH2 0x76B JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x856 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x876 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x27C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEB 0x4E 0x1F 0xB9 0xD2 DELEGATECALL SWAP13 0x49 0xDD DUP11 0xF7 0xFB SSTORE 0x28 PUSH18 0x9F0D08442691208701AFFC150761BE7F4464 PUSH20 0x6F6C634300081300330000000000000000000000 ","sourceMap":"1403:11223:4:-:0;;;1978:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2044:5;:13;2052:5;2044;:13;:::i;:::-;-1:-1:-1;2067:7:4;:17;2077:7;2067;:17;:::i;:::-;;1978:113;;1403:11223;;14:127:11;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:840;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:11;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:11;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;954:1;932:15;;;928:24;;;921:35;;;;936:6;146:840;-1:-1:-1;;;;146:840:11:o;991:562::-;1090:6;1098;1151:2;1139:9;1130:7;1126:23;1122:32;1119:52;;;1167:1;1164;1157:12;1119:52;1194:16;;-1:-1:-1;;;;;1259:14:11;;;1256:34;;;1286:1;1283;1276:12;1256:34;1309:61;1362:7;1353:6;1342:9;1338:22;1309:61;:::i;:::-;1299:71;;1416:2;1405:9;1401:18;1395:25;1379:41;;1445:2;1435:8;1432:16;1429:36;;;1461:1;1458;1451:12;1429:36;;1484:63;1539:7;1528:8;1517:9;1513:24;1484:63;:::i;:::-;1474:73;;;991:562;;;;;:::o;1558:380::-;1637:1;1633:12;;;;1680;;;1701:61;;1755:4;1747:6;1743:17;1733:27;;1701:61;1808:2;1800:6;1797:14;1777:18;1774:38;1771:161;;1854:10;1849:3;1845:20;1842:1;1835:31;1889:4;1886:1;1879:15;1917:4;1914:1;1907:15;1771:161;;1558:380;;;:::o;2069:545::-;2171:2;2166:3;2163:11;2160:448;;;2207:1;2232:5;2228:2;2221:17;2277:4;2273:2;2263:19;2347:2;2335:10;2331:19;2328:1;2324:27;2318:4;2314:38;2383:4;2371:10;2368:20;2365:47;;;-1:-1:-1;2406:4:11;2365:47;2461:2;2456:3;2452:12;2449:1;2445:20;2439:4;2435:31;2425:41;;2516:82;2534:2;2527:5;2524:13;2516:82;;;2579:17;;;2560:1;2549:13;2516:82;;;2520:3;;;2160:448;2069:545;;;:::o;2790:1352::-;2910:10;;-1:-1:-1;;;;;2932:30:11;;2929:56;;;2965:18;;:::i;:::-;2994:97;3084:6;3044:38;3076:4;3070:11;3044:38;:::i;:::-;3038:4;2994:97;:::i;:::-;3146:4;;3210:2;3199:14;;3227:1;3222:663;;;;3929:1;3946:6;3943:89;;;-1:-1:-1;3998:19:11;;;3992:26;3943:89;-1:-1:-1;;2747:1:11;2743:11;;;2739:24;2735:29;2725:40;2771:1;2767:11;;;2722:57;4045:81;;3192:944;;3222:663;2016:1;2009:14;;;2053:4;2040:18;;-1:-1:-1;;3258:20:11;;;3376:236;3390:7;3387:1;3384:14;3376:236;;;3479:19;;;3473:26;3458:42;;3571:27;;;;3539:1;3527:14;;;;3406:19;;3376:236;;;3380:3;3640:6;3631:7;3628:19;3625:201;;;3701:19;;;3695:26;-1:-1:-1;;3784:1:11;3780:14;;;3796:3;3776:24;3772:37;3768:42;3753:58;3738:74;;3625:201;-1:-1:-1;;;;;3872:1:11;3856:14;;;3852:22;3839:36;;-1:-1:-1;2790:1352:11:o;:::-;1403:11223:4;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_afterTokenTransfer_1236":{"entryPoint":null,"id":1236,"parameterSlots":3,"returnSlots":0},"@_approve_1171":{"entryPoint":921,"id":1171,"parameterSlots":3,"returnSlots":0},"@_beforeTokenTransfer_1225":{"entryPoint":null,"id":1225,"parameterSlots":3,"returnSlots":0},"@_msgSender_1352":{"entryPoint":null,"id":1352,"parameterSlots":0,"returnSlots":1},"@_spendAllowance_1214":{"entryPoint":1213,"id":1214,"parameterSlots":3,"returnSlots":0},"@_transfer_998":{"entryPoint":1359,"id":998,"parameterSlots":3,"returnSlots":0},"@allowance_791":{"entryPoint":null,"id":791,"parameterSlots":2,"returnSlots":1},"@approve_816":{"entryPoint":616,"id":816,"parameterSlots":2,"returnSlots":1},"@balanceOf_748":{"entryPoint":null,"id":748,"parameterSlots":1,"returnSlots":1},"@decimals_724":{"entryPoint":null,"id":724,"parameterSlots":0,"returnSlots":1},"@decreaseAllowance_921":{"entryPoint":756,"id":921,"parameterSlots":2,"returnSlots":1},"@increaseAllowance_879":{"entryPoint":678,"id":879,"parameterSlots":2,"returnSlots":1},"@name_704":{"entryPoint":470,"id":704,"parameterSlots":0,"returnSlots":1},"@symbol_714":{"entryPoint":741,"id":714,"parameterSlots":0,"returnSlots":1},"@totalSupply_734":{"entryPoint":null,"id":734,"parameterSlots":0,"returnSlots":1},"@transferFrom_849":{"entryPoint":642,"id":849,"parameterSlots":3,"returnSlots":1},"@transfer_773":{"entryPoint":907,"id":773,"parameterSlots":2,"returnSlots":1},"abi_decode_address":{"entryPoint":1899,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":2029,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":2063,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":1969,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":1927,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1821,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":2172,"id":null,"parameterSlots":2,"returnSlots":1},"extract_byte_array_length":{"entryPoint":2114,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:5777:11","statements":[{"nodeType":"YulBlock","src":"6:3:11","statements":[]},{"body":{"nodeType":"YulBlock","src":"135:427:11","statements":[{"nodeType":"YulVariableDeclaration","src":"145:12:11","value":{"kind":"number","nodeType":"YulLiteral","src":"155:2:11","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"149:2:11","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"173:9:11"},{"name":"_1","nodeType":"YulIdentifier","src":"184:2:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"166:6:11"},"nodeType":"YulFunctionCall","src":"166:21:11"},"nodeType":"YulExpressionStatement","src":"166:21:11"},{"nodeType":"YulVariableDeclaration","src":"196:27:11","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"216:6:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"210:5:11"},"nodeType":"YulFunctionCall","src":"210:13:11"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"200:6:11","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"243:9:11"},{"name":"_1","nodeType":"YulIdentifier","src":"254:2:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"239:3:11"},"nodeType":"YulFunctionCall","src":"239:18:11"},{"name":"length","nodeType":"YulIdentifier","src":"259:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"232:6:11"},"nodeType":"YulFunctionCall","src":"232:34:11"},"nodeType":"YulExpressionStatement","src":"232:34:11"},{"nodeType":"YulVariableDeclaration","src":"275:10:11","value":{"kind":"number","nodeType":"YulLiteral","src":"284:1:11","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"279:1:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"344:90:11","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"373:9:11"},{"name":"i","nodeType":"YulIdentifier","src":"384:1:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"369:3:11"},"nodeType":"YulFunctionCall","src":"369:17:11"},{"kind":"number","nodeType":"YulLiteral","src":"388:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"365:3:11"},"nodeType":"YulFunctionCall","src":"365:26:11"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"407:6:11"},{"name":"i","nodeType":"YulIdentifier","src":"415:1:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"403:3:11"},"nodeType":"YulFunctionCall","src":"403:14:11"},{"name":"_1","nodeType":"YulIdentifier","src":"419:2:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"399:3:11"},"nodeType":"YulFunctionCall","src":"399:23:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"393:5:11"},"nodeType":"YulFunctionCall","src":"393:30:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"358:6:11"},"nodeType":"YulFunctionCall","src":"358:66:11"},"nodeType":"YulExpressionStatement","src":"358:66:11"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"305:1:11"},{"name":"length","nodeType":"YulIdentifier","src":"308:6:11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"302:2:11"},"nodeType":"YulFunctionCall","src":"302:13:11"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"316:19:11","statements":[{"nodeType":"YulAssignment","src":"318:15:11","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"327:1:11"},{"name":"_1","nodeType":"YulIdentifier","src":"330:2:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"323:3:11"},"nodeType":"YulFunctionCall","src":"323:10:11"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"318:1:11"}]}]},"pre":{"nodeType":"YulBlock","src":"298:3:11","statements":[]},"src":"294:140:11"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"458:9:11"},{"name":"length","nodeType":"YulIdentifier","src":"469:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"454:3:11"},"nodeType":"YulFunctionCall","src":"454:22:11"},{"kind":"number","nodeType":"YulLiteral","src":"478:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"450:3:11"},"nodeType":"YulFunctionCall","src":"450:31:11"},{"kind":"number","nodeType":"YulLiteral","src":"483:1:11","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"443:6:11"},"nodeType":"YulFunctionCall","src":"443:42:11"},"nodeType":"YulExpressionStatement","src":"443:42:11"},{"nodeType":"YulAssignment","src":"494:62:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"510:9:11"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"529:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"537:2:11","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"525:3:11"},"nodeType":"YulFunctionCall","src":"525:15:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"546:2:11","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"542:3:11"},"nodeType":"YulFunctionCall","src":"542:7:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"521:3:11"},"nodeType":"YulFunctionCall","src":"521:29:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"506:3:11"},"nodeType":"YulFunctionCall","src":"506:45:11"},{"kind":"number","nodeType":"YulLiteral","src":"553:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"502:3:11"},"nodeType":"YulFunctionCall","src":"502:54:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"494:4:11"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"104:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"115:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"126:4:11","type":""}],"src":"14:548:11"},{"body":{"nodeType":"YulBlock","src":"616:147:11","statements":[{"nodeType":"YulAssignment","src":"626:29:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"648:6:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"635:12:11"},"nodeType":"YulFunctionCall","src":"635:20:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"626:5:11"}]},{"body":{"nodeType":"YulBlock","src":"741:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"750:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"753:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"743:6:11"},"nodeType":"YulFunctionCall","src":"743:12:11"},"nodeType":"YulExpressionStatement","src":"743:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"677:5:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"688:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"695:42:11","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"684:3:11"},"nodeType":"YulFunctionCall","src":"684:54:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"674:2:11"},"nodeType":"YulFunctionCall","src":"674:65:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"667:6:11"},"nodeType":"YulFunctionCall","src":"667:73:11"},"nodeType":"YulIf","src":"664:93:11"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"595:6:11","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"606:5:11","type":""}],"src":"567:196:11"},{"body":{"nodeType":"YulBlock","src":"855:167:11","statements":[{"body":{"nodeType":"YulBlock","src":"901:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"910:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"913:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"903:6:11"},"nodeType":"YulFunctionCall","src":"903:12:11"},"nodeType":"YulExpressionStatement","src":"903:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"876:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"885:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"872:3:11"},"nodeType":"YulFunctionCall","src":"872:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"897:2:11","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"868:3:11"},"nodeType":"YulFunctionCall","src":"868:32:11"},"nodeType":"YulIf","src":"865:52:11"},{"nodeType":"YulAssignment","src":"926:39:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"955:9:11"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"936:18:11"},"nodeType":"YulFunctionCall","src":"936:29:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"926:6:11"}]},{"nodeType":"YulAssignment","src":"974:42:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1001:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"1012:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"997:3:11"},"nodeType":"YulFunctionCall","src":"997:18:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"984:12:11"},"nodeType":"YulFunctionCall","src":"984:32:11"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"974:6:11"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"813:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"824:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"836:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"844:6:11","type":""}],"src":"768:254:11"},{"body":{"nodeType":"YulBlock","src":"1122:92:11","statements":[{"nodeType":"YulAssignment","src":"1132:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1144:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"1155:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1140:3:11"},"nodeType":"YulFunctionCall","src":"1140:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1132:4:11"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1174:9:11"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1199:6:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1192:6:11"},"nodeType":"YulFunctionCall","src":"1192:14:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1185:6:11"},"nodeType":"YulFunctionCall","src":"1185:22:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1167:6:11"},"nodeType":"YulFunctionCall","src":"1167:41:11"},"nodeType":"YulExpressionStatement","src":"1167:41:11"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1091:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1102:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1113:4:11","type":""}],"src":"1027:187:11"},{"body":{"nodeType":"YulBlock","src":"1320:76:11","statements":[{"nodeType":"YulAssignment","src":"1330:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1342:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"1353:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1338:3:11"},"nodeType":"YulFunctionCall","src":"1338:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1330:4:11"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1372:9:11"},{"name":"value0","nodeType":"YulIdentifier","src":"1383:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1365:6:11"},"nodeType":"YulFunctionCall","src":"1365:25:11"},"nodeType":"YulExpressionStatement","src":"1365:25:11"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1289:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1300:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1311:4:11","type":""}],"src":"1219:177:11"},{"body":{"nodeType":"YulBlock","src":"1505:224:11","statements":[{"body":{"nodeType":"YulBlock","src":"1551:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1560:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1563:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1553:6:11"},"nodeType":"YulFunctionCall","src":"1553:12:11"},"nodeType":"YulExpressionStatement","src":"1553:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1526:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"1535:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1522:3:11"},"nodeType":"YulFunctionCall","src":"1522:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"1547:2:11","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1518:3:11"},"nodeType":"YulFunctionCall","src":"1518:32:11"},"nodeType":"YulIf","src":"1515:52:11"},{"nodeType":"YulAssignment","src":"1576:39:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1605:9:11"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1586:18:11"},"nodeType":"YulFunctionCall","src":"1586:29:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1576:6:11"}]},{"nodeType":"YulAssignment","src":"1624:48:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1657:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"1668:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1653:3:11"},"nodeType":"YulFunctionCall","src":"1653:18:11"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1634:18:11"},"nodeType":"YulFunctionCall","src":"1634:38:11"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1624:6:11"}]},{"nodeType":"YulAssignment","src":"1681:42:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1708:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"1719:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1704:3:11"},"nodeType":"YulFunctionCall","src":"1704:18:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1691:12:11"},"nodeType":"YulFunctionCall","src":"1691:32:11"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1681:6:11"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1455:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1466:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1478:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1486:6:11","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1494:6:11","type":""}],"src":"1401:328:11"},{"body":{"nodeType":"YulBlock","src":"1831:87:11","statements":[{"nodeType":"YulAssignment","src":"1841:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1853:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"1864:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1849:3:11"},"nodeType":"YulFunctionCall","src":"1849:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1841:4:11"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1883:9:11"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1898:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"1906:4:11","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1894:3:11"},"nodeType":"YulFunctionCall","src":"1894:17:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1876:6:11"},"nodeType":"YulFunctionCall","src":"1876:36:11"},"nodeType":"YulExpressionStatement","src":"1876:36:11"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1800:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1811:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1822:4:11","type":""}],"src":"1734:184:11"},{"body":{"nodeType":"YulBlock","src":"1993:116:11","statements":[{"body":{"nodeType":"YulBlock","src":"2039:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2048:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2051:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2041:6:11"},"nodeType":"YulFunctionCall","src":"2041:12:11"},"nodeType":"YulExpressionStatement","src":"2041:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2014:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"2023:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2010:3:11"},"nodeType":"YulFunctionCall","src":"2010:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"2035:2:11","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2006:3:11"},"nodeType":"YulFunctionCall","src":"2006:32:11"},"nodeType":"YulIf","src":"2003:52:11"},{"nodeType":"YulAssignment","src":"2064:39:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2093:9:11"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2074:18:11"},"nodeType":"YulFunctionCall","src":"2074:29:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2064:6:11"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1959:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1970:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1982:6:11","type":""}],"src":"1923:186:11"},{"body":{"nodeType":"YulBlock","src":"2201:173:11","statements":[{"body":{"nodeType":"YulBlock","src":"2247:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2256:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2259:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2249:6:11"},"nodeType":"YulFunctionCall","src":"2249:12:11"},"nodeType":"YulExpressionStatement","src":"2249:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2222:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"2231:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2218:3:11"},"nodeType":"YulFunctionCall","src":"2218:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"2243:2:11","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2214:3:11"},"nodeType":"YulFunctionCall","src":"2214:32:11"},"nodeType":"YulIf","src":"2211:52:11"},{"nodeType":"YulAssignment","src":"2272:39:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2301:9:11"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2282:18:11"},"nodeType":"YulFunctionCall","src":"2282:29:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2272:6:11"}]},{"nodeType":"YulAssignment","src":"2320:48:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2353:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"2364:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2349:3:11"},"nodeType":"YulFunctionCall","src":"2349:18:11"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2330:18:11"},"nodeType":"YulFunctionCall","src":"2330:38:11"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2320:6:11"}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2159:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2170:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2182:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2190:6:11","type":""}],"src":"2114:260:11"},{"body":{"nodeType":"YulBlock","src":"2434:325:11","statements":[{"nodeType":"YulAssignment","src":"2444:22:11","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2458:1:11","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"2461:4:11"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2454:3:11"},"nodeType":"YulFunctionCall","src":"2454:12:11"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2444:6:11"}]},{"nodeType":"YulVariableDeclaration","src":"2475:38:11","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2505:4:11"},{"kind":"number","nodeType":"YulLiteral","src":"2511:1:11","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2501:3:11"},"nodeType":"YulFunctionCall","src":"2501:12:11"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"2479:18:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"2552:31:11","statements":[{"nodeType":"YulAssignment","src":"2554:27:11","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2568:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"2576:4:11","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2564:3:11"},"nodeType":"YulFunctionCall","src":"2564:17:11"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2554:6:11"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"2532:18:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2525:6:11"},"nodeType":"YulFunctionCall","src":"2525:26:11"},"nodeType":"YulIf","src":"2522:61:11"},{"body":{"nodeType":"YulBlock","src":"2642:111:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2663:1:11","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2670:3:11","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"2675:10:11","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2666:3:11"},"nodeType":"YulFunctionCall","src":"2666:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2656:6:11"},"nodeType":"YulFunctionCall","src":"2656:31:11"},"nodeType":"YulExpressionStatement","src":"2656:31:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2707:1:11","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2710:4:11","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2700:6:11"},"nodeType":"YulFunctionCall","src":"2700:15:11"},"nodeType":"YulExpressionStatement","src":"2700:15:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2735:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2738:4:11","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2728:6:11"},"nodeType":"YulFunctionCall","src":"2728:15:11"},"nodeType":"YulExpressionStatement","src":"2728:15:11"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"2598:18:11"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2621:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"2629:2:11","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2618:2:11"},"nodeType":"YulFunctionCall","src":"2618:14:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2595:2:11"},"nodeType":"YulFunctionCall","src":"2595:38:11"},"nodeType":"YulIf","src":"2592:161:11"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"2414:4:11","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"2423:6:11","type":""}],"src":"2379:380:11"},{"body":{"nodeType":"YulBlock","src":"2812:174:11","statements":[{"nodeType":"YulAssignment","src":"2822:16:11","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2833:1:11"},{"name":"y","nodeType":"YulIdentifier","src":"2836:1:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2829:3:11"},"nodeType":"YulFunctionCall","src":"2829:9:11"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"2822:3:11"}]},{"body":{"nodeType":"YulBlock","src":"2869:111:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2890:1:11","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2897:3:11","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"2902:10:11","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2893:3:11"},"nodeType":"YulFunctionCall","src":"2893:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2883:6:11"},"nodeType":"YulFunctionCall","src":"2883:31:11"},"nodeType":"YulExpressionStatement","src":"2883:31:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2934:1:11","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2937:4:11","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2927:6:11"},"nodeType":"YulFunctionCall","src":"2927:15:11"},"nodeType":"YulExpressionStatement","src":"2927:15:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2962:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2965:4:11","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2955:6:11"},"nodeType":"YulFunctionCall","src":"2955:15:11"},"nodeType":"YulExpressionStatement","src":"2955:15:11"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2853:1:11"},{"name":"sum","nodeType":"YulIdentifier","src":"2856:3:11"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2850:2:11"},"nodeType":"YulFunctionCall","src":"2850:10:11"},"nodeType":"YulIf","src":"2847:133:11"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"2795:1:11","type":""},{"name":"y","nodeType":"YulTypedName","src":"2798:1:11","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"2804:3:11","type":""}],"src":"2764:222:11"},{"body":{"nodeType":"YulBlock","src":"3165:227:11","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3182:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"3193:2:11","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3175:6:11"},"nodeType":"YulFunctionCall","src":"3175:21:11"},"nodeType":"YulExpressionStatement","src":"3175:21:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3216:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"3227:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3212:3:11"},"nodeType":"YulFunctionCall","src":"3212:18:11"},{"kind":"number","nodeType":"YulLiteral","src":"3232:2:11","type":"","value":"37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3205:6:11"},"nodeType":"YulFunctionCall","src":"3205:30:11"},"nodeType":"YulExpressionStatement","src":"3205:30:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3255:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"3266:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3251:3:11"},"nodeType":"YulFunctionCall","src":"3251:18:11"},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77","kind":"string","nodeType":"YulLiteral","src":"3271:34:11","type":"","value":"ERC20: decreased allowance below"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3244:6:11"},"nodeType":"YulFunctionCall","src":"3244:62:11"},"nodeType":"YulExpressionStatement","src":"3244:62:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3326:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"3337:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3322:3:11"},"nodeType":"YulFunctionCall","src":"3322:18:11"},{"hexValue":"207a65726f","kind":"string","nodeType":"YulLiteral","src":"3342:7:11","type":"","value":" zero"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3315:6:11"},"nodeType":"YulFunctionCall","src":"3315:35:11"},"nodeType":"YulExpressionStatement","src":"3315:35:11"},{"nodeType":"YulAssignment","src":"3359:27:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3371:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"3382:3:11","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3367:3:11"},"nodeType":"YulFunctionCall","src":"3367:19:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3359:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3142:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3156:4:11","type":""}],"src":"2991:401:11"},{"body":{"nodeType":"YulBlock","src":"3571:226:11","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3588:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"3599:2:11","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3581:6:11"},"nodeType":"YulFunctionCall","src":"3581:21:11"},"nodeType":"YulExpressionStatement","src":"3581:21:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3622:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"3633:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3618:3:11"},"nodeType":"YulFunctionCall","src":"3618:18:11"},{"kind":"number","nodeType":"YulLiteral","src":"3638:2:11","type":"","value":"36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3611:6:11"},"nodeType":"YulFunctionCall","src":"3611:30:11"},"nodeType":"YulExpressionStatement","src":"3611:30:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3661:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"3672:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3657:3:11"},"nodeType":"YulFunctionCall","src":"3657:18:11"},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f20616464","kind":"string","nodeType":"YulLiteral","src":"3677:34:11","type":"","value":"ERC20: approve from the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3650:6:11"},"nodeType":"YulFunctionCall","src":"3650:62:11"},"nodeType":"YulExpressionStatement","src":"3650:62:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3732:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"3743:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3728:3:11"},"nodeType":"YulFunctionCall","src":"3728:18:11"},{"hexValue":"72657373","kind":"string","nodeType":"YulLiteral","src":"3748:6:11","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3721:6:11"},"nodeType":"YulFunctionCall","src":"3721:34:11"},"nodeType":"YulExpressionStatement","src":"3721:34:11"},{"nodeType":"YulAssignment","src":"3764:27:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3776:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"3787:3:11","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3772:3:11"},"nodeType":"YulFunctionCall","src":"3772:19:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3764:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3548:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3562:4:11","type":""}],"src":"3397:400:11"},{"body":{"nodeType":"YulBlock","src":"3976:224:11","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3993:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"4004:2:11","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3986:6:11"},"nodeType":"YulFunctionCall","src":"3986:21:11"},"nodeType":"YulExpressionStatement","src":"3986:21:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4027:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"4038:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4023:3:11"},"nodeType":"YulFunctionCall","src":"4023:18:11"},{"kind":"number","nodeType":"YulLiteral","src":"4043:2:11","type":"","value":"34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4016:6:11"},"nodeType":"YulFunctionCall","src":"4016:30:11"},"nodeType":"YulExpressionStatement","src":"4016:30:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4066:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"4077:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4062:3:11"},"nodeType":"YulFunctionCall","src":"4062:18:11"},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f206164647265","kind":"string","nodeType":"YulLiteral","src":"4082:34:11","type":"","value":"ERC20: approve to the zero addre"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4055:6:11"},"nodeType":"YulFunctionCall","src":"4055:62:11"},"nodeType":"YulExpressionStatement","src":"4055:62:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4137:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"4148:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4133:3:11"},"nodeType":"YulFunctionCall","src":"4133:18:11"},{"hexValue":"7373","kind":"string","nodeType":"YulLiteral","src":"4153:4:11","type":"","value":"ss"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4126:6:11"},"nodeType":"YulFunctionCall","src":"4126:32:11"},"nodeType":"YulExpressionStatement","src":"4126:32:11"},{"nodeType":"YulAssignment","src":"4167:27:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4179:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"4190:3:11","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4175:3:11"},"nodeType":"YulFunctionCall","src":"4175:19:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4167:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3953:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3967:4:11","type":""}],"src":"3802:398:11"},{"body":{"nodeType":"YulBlock","src":"4379:179:11","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4396:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"4407:2:11","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4389:6:11"},"nodeType":"YulFunctionCall","src":"4389:21:11"},"nodeType":"YulExpressionStatement","src":"4389:21:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4430:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"4441:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4426:3:11"},"nodeType":"YulFunctionCall","src":"4426:18:11"},{"kind":"number","nodeType":"YulLiteral","src":"4446:2:11","type":"","value":"29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4419:6:11"},"nodeType":"YulFunctionCall","src":"4419:30:11"},"nodeType":"YulExpressionStatement","src":"4419:30:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4469:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"4480:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4465:3:11"},"nodeType":"YulFunctionCall","src":"4465:18:11"},{"hexValue":"45524332303a20696e73756666696369656e7420616c6c6f77616e6365","kind":"string","nodeType":"YulLiteral","src":"4485:31:11","type":"","value":"ERC20: insufficient allowance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4458:6:11"},"nodeType":"YulFunctionCall","src":"4458:59:11"},"nodeType":"YulExpressionStatement","src":"4458:59:11"},{"nodeType":"YulAssignment","src":"4526:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4538:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"4549:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4534:3:11"},"nodeType":"YulFunctionCall","src":"4534:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4526:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4356:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4370:4:11","type":""}],"src":"4205:353:11"},{"body":{"nodeType":"YulBlock","src":"4737:227:11","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4754:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"4765:2:11","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4747:6:11"},"nodeType":"YulFunctionCall","src":"4747:21:11"},"nodeType":"YulExpressionStatement","src":"4747:21:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4788:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"4799:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4784:3:11"},"nodeType":"YulFunctionCall","src":"4784:18:11"},{"kind":"number","nodeType":"YulLiteral","src":"4804:2:11","type":"","value":"37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4777:6:11"},"nodeType":"YulFunctionCall","src":"4777:30:11"},"nodeType":"YulExpressionStatement","src":"4777:30:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4827:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"4838:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4823:3:11"},"nodeType":"YulFunctionCall","src":"4823:18:11"},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f206164","kind":"string","nodeType":"YulLiteral","src":"4843:34:11","type":"","value":"ERC20: transfer from the zero ad"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4816:6:11"},"nodeType":"YulFunctionCall","src":"4816:62:11"},"nodeType":"YulExpressionStatement","src":"4816:62:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4898:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"4909:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4894:3:11"},"nodeType":"YulFunctionCall","src":"4894:18:11"},{"hexValue":"6472657373","kind":"string","nodeType":"YulLiteral","src":"4914:7:11","type":"","value":"dress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4887:6:11"},"nodeType":"YulFunctionCall","src":"4887:35:11"},"nodeType":"YulExpressionStatement","src":"4887:35:11"},{"nodeType":"YulAssignment","src":"4931:27:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4943:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"4954:3:11","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4939:3:11"},"nodeType":"YulFunctionCall","src":"4939:19:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4931:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4714:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4728:4:11","type":""}],"src":"4563:401:11"},{"body":{"nodeType":"YulBlock","src":"5143:225:11","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5160:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"5171:2:11","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5153:6:11"},"nodeType":"YulFunctionCall","src":"5153:21:11"},"nodeType":"YulExpressionStatement","src":"5153:21:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5194:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"5205:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5190:3:11"},"nodeType":"YulFunctionCall","src":"5190:18:11"},{"kind":"number","nodeType":"YulLiteral","src":"5210:2:11","type":"","value":"35"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5183:6:11"},"nodeType":"YulFunctionCall","src":"5183:30:11"},"nodeType":"YulExpressionStatement","src":"5183:30:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5233:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"5244:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5229:3:11"},"nodeType":"YulFunctionCall","src":"5229:18:11"},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472","kind":"string","nodeType":"YulLiteral","src":"5249:34:11","type":"","value":"ERC20: transfer to the zero addr"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5222:6:11"},"nodeType":"YulFunctionCall","src":"5222:62:11"},"nodeType":"YulExpressionStatement","src":"5222:62:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5304:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"5315:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5300:3:11"},"nodeType":"YulFunctionCall","src":"5300:18:11"},{"hexValue":"657373","kind":"string","nodeType":"YulLiteral","src":"5320:5:11","type":"","value":"ess"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5293:6:11"},"nodeType":"YulFunctionCall","src":"5293:33:11"},"nodeType":"YulExpressionStatement","src":"5293:33:11"},{"nodeType":"YulAssignment","src":"5335:27:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5347:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"5358:3:11","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5343:3:11"},"nodeType":"YulFunctionCall","src":"5343:19:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5335:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5120:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5134:4:11","type":""}],"src":"4969:399:11"},{"body":{"nodeType":"YulBlock","src":"5547:228:11","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5564:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"5575:2:11","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5557:6:11"},"nodeType":"YulFunctionCall","src":"5557:21:11"},"nodeType":"YulExpressionStatement","src":"5557:21:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5598:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"5609:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5594:3:11"},"nodeType":"YulFunctionCall","src":"5594:18:11"},{"kind":"number","nodeType":"YulLiteral","src":"5614:2:11","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5587:6:11"},"nodeType":"YulFunctionCall","src":"5587:30:11"},"nodeType":"YulExpressionStatement","src":"5587:30:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5637:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"5648:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5633:3:11"},"nodeType":"YulFunctionCall","src":"5633:18:11"},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062","kind":"string","nodeType":"YulLiteral","src":"5653:34:11","type":"","value":"ERC20: transfer amount exceeds b"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5626:6:11"},"nodeType":"YulFunctionCall","src":"5626:62:11"},"nodeType":"YulExpressionStatement","src":"5626:62:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5708:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"5719:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5704:3:11"},"nodeType":"YulFunctionCall","src":"5704:18:11"},{"hexValue":"616c616e6365","kind":"string","nodeType":"YulLiteral","src":"5724:8:11","type":"","value":"alance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5697:6:11"},"nodeType":"YulFunctionCall","src":"5697:36:11"},"nodeType":"YulExpressionStatement","src":"5697:36:11"},{"nodeType":"YulAssignment","src":"5742:27:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5754:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"5765:3:11","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5750:3:11"},"nodeType":"YulFunctionCall","src":"5750:19:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5742:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5524:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5538:4:11","type":""}],"src":"5373:402:11"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n}","id":11,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100b95760003560e01c80633950935111610081578063a457c2d71161005b578063a457c2d714610177578063a9059cbb1461018a578063dd62ed3e1461019d57600080fd5b8063395093511461013357806370a082311461014657806395d89b411461016f57600080fd5b806306fdde03146100be578063095ea7b3146100dc57806318160ddd146100ff57806323b872dd14610111578063313ce56714610124575b600080fd5b6100c66101d6565b6040516100d3919061071d565b60405180910390f35b6100ef6100ea366004610787565b610268565b60405190151581526020016100d3565b6002545b6040519081526020016100d3565b6100ef61011f3660046107b1565b610282565b604051601281526020016100d3565b6100ef610141366004610787565b6102a6565b6101036101543660046107ed565b6001600160a01b031660009081526020819052604090205490565b6100c66102e5565b6100ef610185366004610787565b6102f4565b6100ef610198366004610787565b61038b565b6101036101ab36600461080f565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546101e590610842565b80601f016020809104026020016040519081016040528092919081815260200182805461021190610842565b801561025e5780601f106102335761010080835404028352916020019161025e565b820191906000526020600020905b81548152906001019060200180831161024157829003601f168201915b5050505050905090565b600033610276818585610399565b60019150505b92915050565b6000336102908582856104bd565b61029b85858561054f565b506001949350505050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490919061027690829086906102e090879061087c565b610399565b6060600480546101e590610842565b3360008181526001602090815260408083206001600160a01b03871684529091528120549091908381101561037e5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b61029b8286868403610399565b60003361027681858561054f565b6001600160a01b0383166103fb5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610375565b6001600160a01b03821661045c5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610375565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038381166000908152600160209081526040808320938616835292905220546000198114610549578181101561053c5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610375565b6105498484848403610399565b50505050565b6001600160a01b0383166105b35760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610375565b6001600160a01b0382166106155760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610375565b6001600160a01b0383166000908152602081905260409020548181101561068d5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610375565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906106c490849061087c565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161071091815260200190565b60405180910390a3610549565b600060208083528351808285015260005b8181101561074a5785810183015185820160400152820161072e565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461078257600080fd5b919050565b6000806040838503121561079a57600080fd5b6107a38361076b565b946020939093013593505050565b6000806000606084860312156107c657600080fd5b6107cf8461076b565b92506107dd6020850161076b565b9150604084013590509250925092565b6000602082840312156107ff57600080fd5b6108088261076b565b9392505050565b6000806040838503121561082257600080fd5b61082b8361076b565b91506108396020840161076b565b90509250929050565b600181811c9082168061085657607f821691505b60208210810361087657634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561027c57634e487b7160e01b600052601160045260246000fdfea2646970667358221220eb4e1fb9d2f49c49dd8af7fb5528719f0d08442691208701affc150761be7f4464736f6c63430008130033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x81 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x177 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x18A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x19D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x39509351 EQ PUSH2 0x133 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x146 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x16F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xBE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xDC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xFF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x111 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x124 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC6 PUSH2 0x1D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD3 SWAP2 SWAP1 PUSH2 0x71D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEF PUSH2 0xEA CALLDATASIZE PUSH1 0x4 PUSH2 0x787 JUMP JUMPDEST PUSH2 0x268 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xD3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xD3 JUMP JUMPDEST PUSH2 0xEF PUSH2 0x11F CALLDATASIZE PUSH1 0x4 PUSH2 0x7B1 JUMP JUMPDEST PUSH2 0x282 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xD3 JUMP JUMPDEST PUSH2 0xEF PUSH2 0x141 CALLDATASIZE PUSH1 0x4 PUSH2 0x787 JUMP JUMPDEST PUSH2 0x2A6 JUMP JUMPDEST PUSH2 0x103 PUSH2 0x154 CALLDATASIZE PUSH1 0x4 PUSH2 0x7ED JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xC6 PUSH2 0x2E5 JUMP JUMPDEST PUSH2 0xEF PUSH2 0x185 CALLDATASIZE PUSH1 0x4 PUSH2 0x787 JUMP JUMPDEST PUSH2 0x2F4 JUMP JUMPDEST PUSH2 0xEF PUSH2 0x198 CALLDATASIZE PUSH1 0x4 PUSH2 0x787 JUMP JUMPDEST PUSH2 0x38B JUMP JUMPDEST PUSH2 0x103 PUSH2 0x1AB CALLDATASIZE PUSH1 0x4 PUSH2 0x80F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1E5 SWAP1 PUSH2 0x842 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x211 SWAP1 PUSH2 0x842 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x25E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x233 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x25E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x241 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x276 DUP2 DUP6 DUP6 PUSH2 0x399 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x290 DUP6 DUP3 DUP6 PUSH2 0x4BD JUMP JUMPDEST PUSH2 0x29B DUP6 DUP6 DUP6 PUSH2 0x54F JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x276 SWAP1 DUP3 SWAP1 DUP7 SWAP1 PUSH2 0x2E0 SWAP1 DUP8 SWAP1 PUSH2 0x87C JUMP JUMPDEST PUSH2 0x399 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1E5 SWAP1 PUSH2 0x842 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 DUP4 DUP2 LT ISZERO PUSH2 0x37E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x29B DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x399 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x276 DUP2 DUP6 DUP6 PUSH2 0x54F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3FB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x375 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x45C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x375 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 EQ PUSH2 0x549 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x53C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x375 JUMP JUMPDEST PUSH2 0x549 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x399 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x5B3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x375 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x615 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x375 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x68D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x375 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x6C4 SWAP1 DUP5 SWAP1 PUSH2 0x87C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x710 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x549 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x74A JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x72E JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x782 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x79A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7A3 DUP4 PUSH2 0x76B JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x7C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7CF DUP5 PUSH2 0x76B JUMP JUMPDEST SWAP3 POP PUSH2 0x7DD PUSH1 0x20 DUP6 ADD PUSH2 0x76B JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x808 DUP3 PUSH2 0x76B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x822 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x82B DUP4 PUSH2 0x76B JUMP JUMPDEST SWAP2 POP PUSH2 0x839 PUSH1 0x20 DUP5 ADD PUSH2 0x76B JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x856 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x876 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x27C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEB 0x4E 0x1F 0xB9 0xD2 DELEGATECALL SWAP13 0x49 0xDD DUP11 0xF7 0xFB SSTORE 0x28 PUSH18 0x9F0D08442691208701AFFC150761BE7F4464 PUSH20 0x6F6C634300081300330000000000000000000000 ","sourceMap":"1403:11223:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2156:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4433:197;;;;;;:::i;:::-;;:::i;:::-;;;1192:14:11;;1185:22;1167:41;;1155:2;1140:18;4433:197:4;1027:187:11;3244:106:4;3331:12;;3244:106;;;1365:25:11;;;1353:2;1338:18;3244:106:4;1219:177:11;5192:286:4;;;;;;:::i;:::-;;:::i;3093:91::-;;;3175:2;1876:36:11;;1864:2;1849:18;3093:91:4;1734:184:11;5873:236:4;;;;;;:::i;:::-;;:::i;3408:125::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3508:18:4;3482:7;3508:18;;;;;;;;;;;;3408:125;2367:102;;;:::i;6596:429::-;;;;;;:::i;:::-;;:::i;3729:189::-;;;;;;:::i;:::-;;:::i;3976:149::-;;;;;;:::i;:::-;-1:-1:-1;;;;;4091:18:4;;;4065:7;4091:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3976:149;2156:98;2210:13;2242:5;2235:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2156:98;:::o;4433:197::-;4516:4;719:10:7;4570:32:4;719:10:7;4586:7:4;4595:6;4570:8;:32::i;:::-;4619:4;4612:11;;;4433:197;;;;;:::o;5192:286::-;5319:4;719:10:7;5375:38:4;5391:4;719:10:7;5406:6:4;5375:15;:38::i;:::-;5423:27;5433:4;5439:2;5443:6;5423:9;:27::i;:::-;-1:-1:-1;5467:4:4;;5192:286;-1:-1:-1;;;;5192:286:4:o;5873:236::-;719:10:7;5961:4:4;6040:18;;;:11;:18;;;;;;;;-1:-1:-1;;;;;6040:27:4;;;;;;;;;;5961:4;;719:10:7;6015:66:4;;719:10:7;;6040:27:4;;:40;;6070:10;;6040:40;:::i;:::-;6015:8;:66::i;2367:102::-;2423:13;2455:7;2448:14;;;;;:::i;6596:429::-;719:10:7;6689:4:4;6770:18;;;:11;:18;;;;;;;;-1:-1:-1;;;;;6770:27:4;;;;;;;;;;6689:4;;719:10:7;6815:35:4;;;;6807:85;;;;-1:-1:-1;;;6807:85:4;;3193:2:11;6807:85:4;;;3175:21:11;3232:2;3212:18;;;3205:30;3271:34;3251:18;;;3244:62;-1:-1:-1;;;3322:18:11;;;3315:35;3367:19;;6807:85:4;;;;;;;;;6926:60;6935:5;6942:7;6970:15;6951:16;:34;6926:8;:60::i;3729:189::-;3808:4;719:10:7;3862:28:4;719:10:7;3879:2:4;3883:6;3862:9;:28::i;10123:370::-;-1:-1:-1;;;;;10254:19:4;;10246:68;;;;-1:-1:-1;;;10246:68:4;;3599:2:11;10246:68:4;;;3581:21:11;3638:2;3618:18;;;3611:30;3677:34;3657:18;;;3650:62;-1:-1:-1;;;3728:18:11;;;3721:34;3772:19;;10246:68:4;3397:400:11;10246:68:4;-1:-1:-1;;;;;10332:21:4;;10324:68;;;;-1:-1:-1;;;10324:68:4;;4004:2:11;10324:68:4;;;3986:21:11;4043:2;4023:18;;;4016:30;4082:34;4062:18;;;4055:62;-1:-1:-1;;;4133:18:11;;;4126:32;4175:19;;10324:68:4;3802:398:11;10324:68:4;-1:-1:-1;;;;;10403:18:4;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10454:32;;1365:25:11;;;10454:32:4;;1338:18:11;10454:32:4;;;;;;;10123:370;;;:::o;10770:441::-;-1:-1:-1;;;;;4091:18:4;;;10900:24;4091:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;10966:37:4;;10962:243;;11047:6;11027:16;:26;;11019:68;;;;-1:-1:-1;;;11019:68:4;;4407:2:11;11019:68:4;;;4389:21:11;4446:2;4426:18;;;4419:30;4485:31;4465:18;;;4458:59;4534:18;;11019:68:4;4205:353:11;11019:68:4;11129:51;11138:5;11145:7;11173:6;11154:16;:25;11129:8;:51::i;:::-;10890:321;10770:441;;;:::o;7488:651::-;-1:-1:-1;;;;;7614:18:4;;7606:68;;;;-1:-1:-1;;;7606:68:4;;4765:2:11;7606:68:4;;;4747:21:11;4804:2;4784:18;;;4777:30;4843:34;4823:18;;;4816:62;-1:-1:-1;;;4894:18:11;;;4887:35;4939:19;;7606:68:4;4563:401:11;7606:68:4;-1:-1:-1;;;;;7692:16:4;;7684:64;;;;-1:-1:-1;;;7684:64:4;;5171:2:11;7684:64:4;;;5153:21:11;5210:2;5190:18;;;5183:30;5249:34;5229:18;;;5222:62;-1:-1:-1;;;5300:18:11;;;5293:33;5343:19;;7684:64:4;4969:399:11;7684:64:4;-1:-1:-1;;;;;7830:15:4;;7808:19;7830:15;;;;;;;;;;;7863:21;;;;7855:72;;;;-1:-1:-1;;;7855:72:4;;5575:2:11;7855:72:4;;;5557:21:11;5614:2;5594:18;;;5587:30;5653:34;5633:18;;;5626:62;-1:-1:-1;;;5704:18:11;;;5697:36;5750:19;;7855:72:4;5373:402:11;7855:72:4;-1:-1:-1;;;;;7961:15:4;;;:9;:15;;;;;;;;;;;7979:20;;;7961:38;;8019:13;;;;;;;;:23;;7993:6;;7961:9;8019:23;;7993:6;;8019:23;:::i;:::-;;;;;;;;8073:2;-1:-1:-1;;;;;8058:26:4;8067:4;-1:-1:-1;;;;;8058:26:4;;8077:6;8058:26;;;;1365:25:11;;1353:2;1338:18;;1219:177;8058:26:4;;;;;;;;8095:37;11795:121;14:548:11;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;553:2;546;542:7;537:2;529:6;525:15;521:29;510:9;506:45;502:54;494:62;;;;14:548;;;;:::o;567:196::-;635:20;;-1:-1:-1;;;;;684:54:11;;674:65;;664:93;;753:1;750;743:12;664:93;567:196;;;:::o;768:254::-;836:6;844;897:2;885:9;876:7;872:23;868:32;865:52;;;913:1;910;903:12;865:52;936:29;955:9;936:29;:::i;:::-;926:39;1012:2;997:18;;;;984:32;;-1:-1:-1;;;768:254:11:o;1401:328::-;1478:6;1486;1494;1547:2;1535:9;1526:7;1522:23;1518:32;1515:52;;;1563:1;1560;1553:12;1515:52;1586:29;1605:9;1586:29;:::i;:::-;1576:39;;1634:38;1668:2;1657:9;1653:18;1634:38;:::i;:::-;1624:48;;1719:2;1708:9;1704:18;1691:32;1681:42;;1401:328;;;;;:::o;1923:186::-;1982:6;2035:2;2023:9;2014:7;2010:23;2006:32;2003:52;;;2051:1;2048;2041:12;2003:52;2074:29;2093:9;2074:29;:::i;:::-;2064:39;1923:186;-1:-1:-1;;;1923:186:11:o;2114:260::-;2182:6;2190;2243:2;2231:9;2222:7;2218:23;2214:32;2211:52;;;2259:1;2256;2249:12;2211:52;2282:29;2301:9;2282:29;:::i;:::-;2272:39;;2330:38;2364:2;2353:9;2349:18;2330:38;:::i;:::-;2320:48;;2114:260;;;;;:::o;2379:380::-;2458:1;2454:12;;;;2501;;;2522:61;;2576:4;2568:6;2564:17;2554:27;;2522:61;2629:2;2621:6;2618:14;2598:18;2595:38;2592:161;;2675:10;2670:3;2666:20;2663:1;2656:31;2710:4;2707:1;2700:15;2738:4;2735:1;2728:15;2592:161;;2379:380;;;:::o;2764:222::-;2829:9;;;2850:10;;;2847:133;;;2902:10;2897:3;2893:20;2890:1;2883:31;2937:4;2934:1;2927:15;2965:4;2962:1;2955:15"},"gasEstimates":{"creation":{"codeDepositCost":"451800","executionCost":"infinite","totalCost":"infinite"},"external":{"allowance(address,address)":"infinite","approve(address,uint256)":"24628","balanceOf(address)":"2585","decimals()":"266","decreaseAllowance(address,uint256)":"26922","increaseAllowance(address,uint256)":"infinite","name()":"infinite","symbol()":"infinite","totalSupply()":"2326","transfer(address,uint256)":"infinite","transferFrom(address,address,uint256)":"infinite"},"internal":{"_afterTokenTransfer(address,address,uint256)":"infinite","_approve(address,address,uint256)":"infinite","_beforeTokenTransfer(address,address,uint256)":"infinite","_burn(address,uint256)":"infinite","_mint(address,uint256)":"infinite","_spendAllowance(address,address,uint256)":"infinite","_transfer(address,address,uint256)":"infinite"}},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":512},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"./extensions/IERC20Metadata.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20, IERC20Metadata {\\n    mapping(address => uint256) private _balances;\\n\\n    mapping(address => mapping(address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * The default value of {decimals} is 18. To select a different value for\\n     * {decimals} you should overload it.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\\n     * overridden;\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual override returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) public virtual override returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, amount);\\n        _transfer(from, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, _allowances[owner][spender] + addedValue);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        uint256 currentAllowance = _allowances[owner][spender];\\n        require(currentAllowance >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\n        unchecked {\\n            _approve(owner, spender, currentAllowance - subtractedValue);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves `amount` of tokens from `sender` to `recipient`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     */\\n    function _transfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {\\n        require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, amount);\\n\\n        uint256 fromBalance = _balances[from];\\n        require(fromBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        unchecked {\\n            _balances[from] = fromBalance - amount;\\n        }\\n        _balances[to] += amount;\\n\\n        emit Transfer(from, to, amount);\\n\\n        _afterTokenTransfer(from, to, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply += amount;\\n        _balances[account] += amount;\\n        emit Transfer(address(0), account, amount);\\n\\n        _afterTokenTransfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        uint256 accountBalance = _balances[account];\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[account] = accountBalance - amount;\\n        }\\n        _totalSupply -= amount;\\n\\n        emit Transfer(account, address(0), amount);\\n\\n        _afterTokenTransfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Spend `amount` form the allowance of `owner` toward `spender`.\\n     *\\n     * Does not update the allowance amount in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Might emit an {Approval} event.\\n     */\\n    function _spendAllowance(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            require(currentAllowance >= amount, \\\"ERC20: insufficient allowance\\\");\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - amount);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * has been transferred to `to`.\\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n}\\n\",\"keccak256\":\"0xdadd41acb749920eccf40aeaa8d291adf9751399a7343561bad13e7a8d99be0b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":665,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"},{"astId":671,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_allowances","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":673,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_totalSupply","offset":0,"slot":"2","type":"t_uint256"},{"astId":675,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_name","offset":0,"slot":"3","type":"t_string_storage"},{"astId":677,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_symbol","offset":0,"slot":"4","type":"t_string_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface of the ERC20 standard as defined in the EIP.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the amount of tokens owned by `account`."},"totalSupply()":{"details":"Returns the amount of tokens in existence."},"transfer(address,uint256)":{"details":"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":512},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the amount of tokens owned by `account`."},"decimals()":{"details":"Returns the decimals places of the token."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token."},"totalSupply()":{"details":"Returns the amount of tokens in existence."},"transfer(address,uint256)":{"details":"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":512},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":512},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/IClientOrder.sol":{"IClientOrder":{"abi":[],"devdoc":{"kind":"dev","methods":{},"title":"Trader/Broker facing order struct","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Trader/Broker facing order struct\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"this order struct is sent to the limit order book and converted into an IPerpetualOrder\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IClientOrder.sol\":\"IClientOrder\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":512},\"remappings\":[]},\"sources\":{\"contracts/IClientOrder.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.19;\\n\\n/**\\n * @title Trader/Broker facing order struct\\n * @notice this order struct is sent to the limit order book and converted into an IPerpetualOrder\\n */\\ninterface IClientOrder {\\n    struct ClientOrder {\\n        uint24 iPerpetualId; // unique id of the perpetual\\n        int128 fLimitPrice; // order will not execute if realized price is above (buy) or below (sell) this price\\n        uint16 leverageTDR; // leverage, set to 0 if deposit margin and trade separate; format: two-digit integer (e.g., 12.34 -> 1234)\\n        uint32 executionTimestamp; // the order will not be executed before this timestamp, allows TWAP orders\\n        uint32 flags; // Order-flags are specified in OrderFlags.sol\\n        uint32 iDeadline; // order will not be executed after this deadline\\n        address brokerAddr; // can be empty, address of the broker\\n        int128 fTriggerPrice; // trigger price for stop-orders|0. Order can be executed if the mark price is below this price (sell order) or above (buy)\\n        int128 fAmount; // signed amount of base-currency. Will be rounded to lot size\\n        bytes32 parentChildDigest1; // see notice in LimitOrderBook.sol\\n        address traderAddr; // address of the trader\\n        bytes32 parentChildDigest2; // see notice in LimitOrderBook.sol\\n        uint16 brokerFeeTbps; // broker fee in tenth of a basis point\\n        bytes brokerSignature; // signature, can be empty if no brokerAddr provided\\n        //address executorAddr; <- will be set by LimitOrderBook\\n        //uint64 submittedBlock <- will be set by LimitOrderBook\\n    }\\n}\\n\",\"keccak256\":\"0xfe89524f4083b40b5c5ba58d3da8c14f13050cd776ec1032c59f969614fff16d\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"notice":"this order struct is sent to the limit order book and converted into an IPerpetualOrder","version":1}}},"contracts/ILiquidityPoolData.sol":{"ILiquidityPoolData":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ILiquidityPoolData.sol\":\"ILiquidityPoolData\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":512},\"remappings\":[]},\"sources\":{\"contracts/ILiquidityPoolData.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.19;\\n\\ninterface ILiquidityPoolData {\\n\\n    struct LiquidityPoolData {\\n            bool isRunning; // state\\n            uint8 iPerpetualCount; // state\\n            uint8 id; // parameter: index, starts from 1\\n            int32 fCeilPnLShare; // parameter: cap on the share of PnL allocated to liquidity providers\\n            uint8 marginTokenDecimals; // parameter: decimals of margin token, inferred from token contract\\n            uint16 iTargetPoolSizeUpdateTime; //parameter: timestamp in seconds. How often we update the pool's target size\\n            address marginTokenAddress; //parameter: address of the margin token\\n            // -----\\n            uint64 prevAnchor; // state: keep track of timestamp since last withdrawal was initiated\\n            int128 fRedemptionRate; // state: used for settlement in case of AMM default\\n            address shareTokenAddress; // parameter\\n            // -----\\n            int128 fPnLparticipantsCashCC; // state: addLiquidity/withdrawLiquidity + profit/loss - rebalance\\n            int128 fTargetAMMFundSize; // state: target liquidity for all perpetuals in pool (sum)\\n            // -----\\n            int128 fDefaultFundCashCC; // state: profit/loss\\n            int128 fTargetDFSize; // state: target default fund size for all perpetuals in pool\\n            // -----\\n            int128 fBrokerCollateralLotSize; // param:how much collateral do brokers deposit when providing \\\"1 lot\\\" (not trading lot)\\n            uint128 prevTokenAmount; // state\\n            // -----\\n            uint128 nextTokenAmount; // state\\n            uint128 totalSupplyShareToken; // state\\n            // -----\\n            int128 fBrokerFundCashCC; // state: amount of cash in broker fund\\n    }\\n\\n}\",\"keccak256\":\"0x2d3495679371a8c8d0c6f676ddf69ccae8d11f01022d4f3067dc0e092b03d2f7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/OnChainTrader.sol":{"OnChainTrader":{"abi":[{"inputs":[{"internalType":"address","name":"_perpetualProxy","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint24","name":"perpetualId","type":"uint24"},{"indexed":false,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"amountDecN","type":"uint256"}],"name":"MarginTokenSent","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint24","name":"perpetualId","type":"uint24"},{"indexed":false,"internalType":"address","name":"lobAddr","type":"address"},{"indexed":false,"internalType":"address","name":"mgnTknAddrOfPool","type":"address"}],"name":"PerpetualAdded","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"reason","type":"string"}],"name":"PerpetualOrderSubmitFailed","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"int256","name":"amountDec18","type":"int256"},{"indexed":false,"internalType":"uint16","name":"leverageTDR","type":"uint16"}],"name":"PerpetualOrderSubmitSuccess","type":"event"},{"inputs":[{"internalType":"uint24","name":"_iPerpetualId","type":"uint24"}],"name":"addPerpetual","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"uint24","name":"_iPerpetualId","type":"uint24"}],"name":"approveAmountForPerpetualMgnTkn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint24","name":"_iPerpetualId","type":"uint24"}],"name":"getMarginAccount","outputs":[{"components":[{"internalType":"int256","name":"lockedInValueQCD18","type":"int256"},{"internalType":"int256","name":"cashCCD18","type":"int256"},{"internalType":"int256","name":"positionSizeBCD18","type":"int256"},{"internalType":"bytes16","name":"positionId","type":"bytes16"}],"internalType":"struct D18MarginAccount","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint24","name":"_iPerpetualId","type":"uint24"},{"internalType":"bool","name":"isBuy","type":"bool"}],"name":"getMaxTradeAmount","outputs":[{"internalType":"int256","name":"","type":"int256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint8","name":"","type":"uint8"}],"name":"mgnTknAddrOfPool","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint24","name":"","type":"uint24"}],"name":"orderBookOfPerpetual","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"perpetualProxy","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint24","name":"_iPerpetualId","type":"uint24"},{"internalType":"int256","name":"_amountDec18","type":"int256"},{"internalType":"uint16","name":"_leverageTDR","type":"uint16"},{"internalType":"uint32","name":"_flags","type":"uint32"}],"name":"postOrder","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint24","name":"_iPerpetualId","type":"uint24"}],"name":"transferMarginCollateralTo","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"addPerpetual(uint24)":{"params":{"_iPerpetualId":"id of the perpetual to be traded"}},"approveAmountForPerpetualMgnTkn(uint256,uint24)":{"params":{"_amount":"spend amount"}},"getMarginAccount(uint24)":{"params":{"_iPerpetualId":"id of perpetual "}},"getMaxTradeAmount(uint24,bool)":{"params":{"_iPerpetualId":"id of perpetual","isBuy":"true if we go long, false if we go short"},"returns":{"_0":"signed maximal trade size (negative if resulting position is short, positive otherwise)"}},"owner()":{"details":"Returns the address of the current owner."},"postOrder(uint24,int256,uint16,uint32)":{"params":{"_amountDec18":"signed amount to be traded in base currency","_flags":"order-flags, can be left 0 for a market order","_iPerpetualId":"perpetual id for which we execute","_leverageTDR":"leverage two-digit-integer), e.g. 210 for 2.1x leverage"},"returns":{"_0":"true if posting order succeeded"}},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_1592":{"entryPoint":null,"id":1592,"parameterSlots":1,"returnSlots":0},"@_568":{"entryPoint":null,"id":568,"parameterSlots":0,"returnSlots":0},"@_msgSender_1352":{"entryPoint":null,"id":1352,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_648":{"entryPoint":75,"id":648,"parameterSlots":1,"returnSlots":0},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":155,"id":null,"parameterSlots":2,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:306:11","statements":[{"nodeType":"YulBlock","src":"6:3:11","statements":[]},{"body":{"nodeType":"YulBlock","src":"95:209:11","statements":[{"body":{"nodeType":"YulBlock","src":"141:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"150:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"153:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"143:6:11"},"nodeType":"YulFunctionCall","src":"143:12:11"},"nodeType":"YulExpressionStatement","src":"143:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"116:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"125:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"112:3:11"},"nodeType":"YulFunctionCall","src":"112:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"137:2:11","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"108:3:11"},"nodeType":"YulFunctionCall","src":"108:32:11"},"nodeType":"YulIf","src":"105:52:11"},{"nodeType":"YulVariableDeclaration","src":"166:29:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"185:9:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"179:5:11"},"nodeType":"YulFunctionCall","src":"179:16:11"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"170:5:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"258:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"267:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"270:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"260:6:11"},"nodeType":"YulFunctionCall","src":"260:12:11"},"nodeType":"YulExpressionStatement","src":"260:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"217:5:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"228:5:11"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"243:3:11","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"248:1:11","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"239:3:11"},"nodeType":"YulFunctionCall","src":"239:11:11"},{"kind":"number","nodeType":"YulLiteral","src":"252:1:11","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"235:3:11"},"nodeType":"YulFunctionCall","src":"235:19:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"224:3:11"},"nodeType":"YulFunctionCall","src":"224:31:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"214:2:11"},"nodeType":"YulFunctionCall","src":"214:42:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"207:6:11"},"nodeType":"YulFunctionCall","src":"207:50:11"},"nodeType":"YulIf","src":"204:70:11"},{"nodeType":"YulAssignment","src":"283:15:11","value":{"name":"value","nodeType":"YulIdentifier","src":"293:5:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"283:6:11"}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"61:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"72:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"84:6:11","type":""}],"src":"14:290:11"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n}","id":11,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60a060405234801561001057600080fd5b5060405162001b4e38038062001b4e8339810160408190526100319161009b565b61003a3361004b565b6001600160a01b03166080526100cb565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100ad57600080fd5b81516001600160a01b03811681146100c457600080fd5b9392505050565b608051611a3d620001116000396000818161015a015281816102a00152818161034c015281816105a0015281816109ce01528181610af60152610be40152611a3d6000f3fe608060405234801561001057600080fd5b50600436106100d45760003560e01c8063715018a611610081578063b1bd155e1161005b578063b1bd155e14610224578063ba0e939914610237578063f2fde38b1461026057600080fd5b8063715018a6146101b25780638da5cb5b146101ba5780639fbb0a3b146101cb57600080fd5b80633e99a53b116100b25780633e99a53b146101555780635db35a041461017c57806362bcc2581461018f57600080fd5b80630330d0c0146100d95780630df3ad4c1461011f578063230f238414610140575b600080fd5b6101026100e73660046111bf565b6001602052600090815260409020546001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b61013261012d3660046111e8565b610273565b604051908152602001610116565b61015361014e3660046111bf565b6103cd565b005b6101027f000000000000000000000000000000000000000000000000000000000000000081565b61015361018a36600461121f565b61051f565b6101a261019d36600461125b565b610623565b6040519015158152602001610116565b610153610907565b6000546001600160a01b0316610102565b6101de6101d93660046111bf565b61096d565b60405161011691908151815260208083015190820152604080830151908201526060918201516fffffffffffffffffffffffffffffffff19169181019190915260800190565b6101536102323660046111bf565b610ad9565b6101026102453660046112c4565b6002602052600090815260409020546001600160a01b031681565b61015361026e3660046112f6565b610cf7565b604051633d53a26b60e11b815262ffffff8316600482015230602482015260009081906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690637aa744d69060440161010060405180830381865afa1580156102e8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061030c91906113dc565b6040808201519051633ef0eb0f60e21b815262ffffff87166004820152600f9190910b602482015284151560448201529091506000906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063fbc3ac3c90606401602060405180830381865afa158015610393573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103b791906114af565b90506103c281610dc2565b925050505b92915050565b6000546001600160a01b0316331461042c5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b600061043b620186a0836114f6565b60ff81166000908152600260205260408082205490516370a0823160e01b81523060048201529293506001600160a01b03169182919082906370a0823190602401602060405180830381865afa158015610499573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104bd9190611518565b90506104d36001600160a01b0383163383610dee565b6040805162ffffff871681523360208201529081018290527fd7089a64efa4caccaea095308c4da0682a70797771cee9b36ab4a639054035929060600160405180910390a15050505050565b600061052e620186a0836114f6565b60ff81166000908152600260205260409020549091506001600160a01b0316806105895760405162461bcd60e51b815260206004820152600c60248201526b736574206f6220616464727360a01b6044820152606401610423565b60405163095ea7b360e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660048301526024820186905282169063095ea7b3906044016020604051808303816000875af11580156105f8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061061c919061153c565b5050505050565b600080546001600160a01b0316331461067e5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610423565b62ffffff85166000908152600160205260409020546001600160a01b0316806106e95760405162461bcd60e51b815260206004820152601260248201527f6f7264657220626f6f6b20756e6b6e6f776e00000000000000000000000000006044820152606401610423565b60006106f486610e5a565b90508363ffffffff1660000361070c57634000000093505b604080516101c081018252600060208201819052918101829052606080820183905260a0820183905260c0820183905260e082018390526101208201839052610160820183905261018082018390526101a082015263ffffffff8616608082015262ffffff8916815230610140820152600f83900b61010082018190529091126107975760006107a9565b6f7fffffffffffffffffffffffffffffff5b600f0b602082015261ffff861660408201526107c8426203f480611559565b63ffffffff90811660a0830152421660608201526040805160208101825260008152905163489cc5e960e01b81526001600160a01b0385169163489cc5e9916108159185916004016115bc565b600060405180830381600087803b15801561082f57600080fd5b505af1925050508015610840575060015b6108bb5761084c611705565b806308c379a0036108af5750610860611721565b8061086b57506108b1565b7f2858238d037e52471d3ad4944d280cdb1fd3b479a3fdf698bb04e99572e6efa88160405161089a91906117ab565b60405180910390a160009450505050506108ff565b505b3d6000803e3d6000fd5b6040805188815261ffff881660208201527f742895f70ed9b3e00487db3827a00b9c91de8360cd96129050b8a82c99de4862910160405180910390a1600193505050505b949350505050565b6000546001600160a01b031633146109615760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610423565b61096b6000610f02565b565b6109ab604051806080016040528060008152602001600081526020016000815260200160006fffffffffffffffffffffffffffffffff191681525090565b604051633d53a26b60e11b815262ffffff831660048201523060248201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690637aa744d69060440161010060405180830381865afa158015610a1e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a4291906113dc565b9050610a82604051806080016040528060008152602001600081526020016000815260200160006fffffffffffffffffffffffffffffffff191681525090565b8151610a8d90610dc2565b81526020820151610a9d90610dc2565b60208201526040820151610ab090610dc2565b604082015260e0909101516fffffffffffffffffffffffffffffffff1916606082015292915050565b60405163079e02e960e21b815262ffffff821660048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690631e780ba490602401602060405180830381865afa158015610b45573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b6991906117c9565b62ffffff8316600090815260016020526040812080546001600160a01b0319166001600160a01b038416179055909150610ba6620186a0846114f6565b60ff81166000908152600260205260409020549091506001600160a01b0316610c8d57604051631857be3960e11b815260ff821660048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906330af7c729060240161026060405180830381865afa158015610c34573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c589190611823565b60c0015160ff8316600090815260026020526040902080546001600160a01b0319166001600160a01b03909216919091179055505b60ff811660009081526002602090815260409182902054825162ffffff871681526001600160a01b038681169382019390935291168183015290517f5222a91cec499c7c85c5fcb8b8ddfb81880ec40273d8cda372740d8a97fa6ec79181900360600190a1505050565b6000546001600160a01b03163314610d515760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610423565b6001600160a01b038116610db65760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610423565b610dbf81610f02565b50565b600068010000000000000000610de4670de0b6b3a7640000600f85900b61198d565b6103c791906119bd565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1663a9059cbb60e01b179052610e55908490610f52565b505050565b600080670de0b6b3a7640000610e79680100000000000000008561198d565b610e8391906119bd565b90506f7fffffffffffffffffffffffffffffff198312801590610eb657506f7fffffffffffffffffffffffffffffff8313155b6103c75760405162461bcd60e51b815260206004820152601360248201527f726573756c74206f7574206f662072616e6765000000000000000000000000006044820152606401610423565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000610fa7826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166110249092919063ffffffff16565b805190915015610e555780806020019051810190610fc5919061153c565b610e555760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610423565b6060611033848460008561103d565b90505b9392505050565b60608247101561109e5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610423565b6001600160a01b0385163b6110f55760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610423565b600080866001600160a01b0316858760405161111191906119eb565b60006040518083038185875af1925050503d806000811461114e576040519150601f19603f3d011682016040523d82523d6000602084013e611153565b606091505b509150915061116382828661116e565b979650505050505050565b6060831561117d575081611036565b82511561118d5782518084602001fd5b8160405162461bcd60e51b815260040161042391906117ab565b803562ffffff811681146111ba57600080fd5b919050565b6000602082840312156111d157600080fd5b611036826111a7565b8015158114610dbf57600080fd5b600080604083850312156111fb57600080fd5b611204836111a7565b91506020830135611214816111da565b809150509250929050565b6000806040838503121561123257600080fd5b82359150611242602084016111a7565b90509250929050565b61ffff81168114610dbf57600080fd5b6000806000806080858703121561127157600080fd5b61127a856111a7565b93506020850135925060408501356112918161124b565b9150606085013563ffffffff811681146112aa57600080fd5b939692955090935050565b60ff81168114610dbf57600080fd5b6000602082840312156112d657600080fd5b8135611036816112b5565b6001600160a01b0381168114610dbf57600080fd5b60006020828403121561130857600080fd5b8135611036816112e1565b601f8201601f1916810167ffffffffffffffff8111828210171561134757634e487b7160e01b600052604160045260246000fd5b6040525050565b604051610260810167ffffffffffffffff8111828210171561138057634e487b7160e01b600052604160045260246000fd5b60405290565b8051600f81900b81146111ba57600080fd5b805167ffffffffffffffff811681146111ba57600080fd5b80516111ba8161124b565b80516fffffffffffffffffffffffffffffffff19811681146111ba57600080fd5b60006101008083850312156113f057600080fd5b6040519081019067ffffffffffffffff8211818310171561142157634e487b7160e01b600052604160045260246000fd5b8160405261142e84611386565b815261143c60208501611386565b602082015261144d60408501611386565b604082015261145e60608501611386565b606082015261146f60808501611398565b608082015261148060a085016113b0565b60a082015261149160c085016113b0565b60c08201526114a260e085016113bb565b60e0820152949350505050565b6000602082840312156114c157600080fd5b61103682611386565b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600062ffffff8084168061150c5761150c6114ca565b92169190910492915050565b60006020828403121561152a57600080fd5b5051919050565b80516111ba816111da565b60006020828403121561154e57600080fd5b8151611036816111da565b808201808211156103c7576103c76114e0565b60005b8381101561158757818101518382015260200161156f565b50506000910152565b600081518084526115a881602086016020860161156c565b601f01601f19169290920160200192915050565b604081526115d260408201845162ffffff169052565b600060208401516115e86060840182600f0b9052565b50604084015161ffff8116608084015250606084015163ffffffff811660a084015250608084015163ffffffff811660c08401525060a084015163ffffffff811660e08401525060c084015161010061164b818501836001600160a01b03169052565b60e0860151915061012061166381860184600f0b9052565b9086015191506101409061167b85830184600f0b9052565b86015161016085810191909152908601519150610180906116a6828601846001600160a01b03169052565b8601516101a0858101919091529086015191506101c0906116cc8286018461ffff169052565b8601516101e085019190915290506116e8610200840182611590565b905082810360208401526116fc8185611590565b95945050505050565b600060033d111561171e5760046000803e5060005160e01c5b90565b600060443d101561172f5790565b6040516003193d81016004833e81513d67ffffffffffffffff816024840111818411171561175f57505050505090565b82850191508151818111156117775750505050505090565b843d87010160208285010111156117915750505050505090565b6117a060208286010187611313565b509095945050505050565b6020815260006110366020830184611590565b80516111ba816112e1565b6000602082840312156117db57600080fd5b8151611036816112e1565b80516111ba816112b5565b8051600381900b81146111ba57600080fd5b80516fffffffffffffffffffffffffffffffff811681146111ba57600080fd5b6000610260828403121561183657600080fd5b61183e61134e565b61184783611531565b8152611855602084016117e6565b6020820152611866604084016117e6565b6040820152611877606084016117f1565b6060820152611888608084016117e6565b608082015261189960a084016113b0565b60a08201526118aa60c084016117be565b60c08201526118bb60e08401611398565b60e08201526101006118ce818501611386565b908201526101206118e08482016117be565b908201526101406118f2848201611386565b90820152610160611904848201611386565b90820152610180611916848201611386565b908201526101a0611928848201611386565b908201526101c061193a848201611386565b908201526101e061194c848201611803565b9082015261020061195e848201611803565b90820152610220611970848201611803565b90820152610240611982848201611386565b908201529392505050565b80820260008212600160ff1b841416156119a9576119a96114e0565b81810583148215176103c7576103c76114e0565b6000826119cc576119cc6114ca565b600160ff1b8214600019841416156119e6576119e66114e0565b500590565b600082516119fd81846020870161156c565b919091019291505056fea264697066735822122044e981601be4708bddca168ed09f7918febf6a576fcc3dc5a89777cc197ea44164736f6c63430008130033","opcodes":"PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1B4E CODESIZE SUB DUP1 PUSH3 0x1B4E DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x31 SWAP2 PUSH2 0x9B JUMP JUMPDEST PUSH2 0x3A CALLER PUSH2 0x4B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x80 MSTORE PUSH2 0xCB JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xC4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x1A3D PUSH3 0x111 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x15A ADD MSTORE DUP2 DUP2 PUSH2 0x2A0 ADD MSTORE DUP2 DUP2 PUSH2 0x34C ADD MSTORE DUP2 DUP2 PUSH2 0x5A0 ADD MSTORE DUP2 DUP2 PUSH2 0x9CE ADD MSTORE DUP2 DUP2 PUSH2 0xAF6 ADD MSTORE PUSH2 0xBE4 ADD MSTORE PUSH2 0x1A3D PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xD4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x81 JUMPI DUP1 PUSH4 0xB1BD155E GT PUSH2 0x5B JUMPI DUP1 PUSH4 0xB1BD155E EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0xBA0E9399 EQ PUSH2 0x237 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x260 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1B2 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1BA JUMPI DUP1 PUSH4 0x9FBB0A3B EQ PUSH2 0x1CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3E99A53B GT PUSH2 0xB2 JUMPI DUP1 PUSH4 0x3E99A53B EQ PUSH2 0x155 JUMPI DUP1 PUSH4 0x5DB35A04 EQ PUSH2 0x17C JUMPI DUP1 PUSH4 0x62BCC258 EQ PUSH2 0x18F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x330D0C0 EQ PUSH2 0xD9 JUMPI DUP1 PUSH4 0xDF3AD4C EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0x230F2384 EQ PUSH2 0x140 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x102 PUSH2 0xE7 CALLDATASIZE PUSH1 0x4 PUSH2 0x11BF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x132 PUSH2 0x12D CALLDATASIZE PUSH1 0x4 PUSH2 0x11E8 JUMP JUMPDEST PUSH2 0x273 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x116 JUMP JUMPDEST PUSH2 0x153 PUSH2 0x14E CALLDATASIZE PUSH1 0x4 PUSH2 0x11BF JUMP JUMPDEST PUSH2 0x3CD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x102 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x153 PUSH2 0x18A CALLDATASIZE PUSH1 0x4 PUSH2 0x121F JUMP JUMPDEST PUSH2 0x51F JUMP JUMPDEST PUSH2 0x1A2 PUSH2 0x19D CALLDATASIZE PUSH1 0x4 PUSH2 0x125B JUMP JUMPDEST PUSH2 0x623 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x116 JUMP JUMPDEST PUSH2 0x153 PUSH2 0x907 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x102 JUMP JUMPDEST PUSH2 0x1DE PUSH2 0x1D9 CALLDATASIZE PUSH1 0x4 PUSH2 0x11BF JUMP JUMPDEST PUSH2 0x96D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x116 SWAP2 SWAP1 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 DUP1 DUP4 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x40 DUP1 DUP4 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x60 SWAP2 DUP3 ADD MLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH2 0x153 PUSH2 0x232 CALLDATASIZE PUSH1 0x4 PUSH2 0x11BF JUMP JUMPDEST PUSH2 0xAD9 JUMP JUMPDEST PUSH2 0x102 PUSH2 0x245 CALLDATASIZE PUSH1 0x4 PUSH2 0x12C4 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x153 PUSH2 0x26E CALLDATASIZE PUSH1 0x4 PUSH2 0x12F6 JUMP JUMPDEST PUSH2 0xCF7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x3D53A26B PUSH1 0xE1 SHL DUP2 MSTORE PUSH3 0xFFFFFF DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x7AA744D6 SWAP1 PUSH1 0x44 ADD PUSH2 0x100 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2E8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x30C SWAP2 SWAP1 PUSH2 0x13DC JUMP JUMPDEST PUSH1 0x40 DUP1 DUP3 ADD MLOAD SWAP1 MLOAD PUSH4 0x3EF0EB0F PUSH1 0xE2 SHL DUP2 MSTORE PUSH3 0xFFFFFF DUP8 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF SWAP2 SWAP1 SWAP2 SIGNEXTEND PUSH1 0x24 DUP3 ADD MSTORE DUP5 ISZERO ISZERO PUSH1 0x44 DUP3 ADD MSTORE SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0xFBC3AC3C SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x393 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3B7 SWAP2 SWAP1 PUSH2 0x14AF JUMP JUMPDEST SWAP1 POP PUSH2 0x3C2 DUP2 PUSH2 0xDC2 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x42C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x43B PUSH3 0x186A0 DUP4 PUSH2 0x14F6 JUMP JUMPDEST PUSH1 0xFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD SWAP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP3 SWAP4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 SWAP2 SWAP1 DUP3 SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x499 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4BD SWAP2 SWAP1 PUSH2 0x1518 JUMP JUMPDEST SWAP1 POP PUSH2 0x4D3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND CALLER DUP4 PUSH2 0xDEE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH3 0xFFFFFF DUP8 AND DUP2 MSTORE CALLER PUSH1 0x20 DUP3 ADD MSTORE SWAP1 DUP2 ADD DUP3 SWAP1 MSTORE PUSH32 0xD7089A64EFA4CACCAEA095308C4DA0682A70797771CEE9B36AB4A63905403592 SWAP1 PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x52E PUSH3 0x186A0 DUP4 PUSH2 0x14F6 JUMP JUMPDEST PUSH1 0xFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x589 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x736574206F62206164647273 PUSH1 0xA0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x423 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP7 SWAP1 MSTORE DUP3 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5F8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x61C SWAP2 SWAP1 PUSH2 0x153C JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x67E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x423 JUMP JUMPDEST PUSH3 0xFFFFFF DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x6E9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F7264657220626F6F6B20756E6B6E6F776E0000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x423 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6F4 DUP7 PUSH2 0xE5A JUMP JUMPDEST SWAP1 POP DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0x0 SUB PUSH2 0x70C JUMPI PUSH4 0x40000000 SWAP4 POP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH2 0x1C0 DUP2 ADD DUP3 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 DUP1 DUP3 ADD DUP4 SWAP1 MSTORE PUSH1 0xA0 DUP3 ADD DUP4 SWAP1 MSTORE PUSH1 0xC0 DUP3 ADD DUP4 SWAP1 MSTORE PUSH1 0xE0 DUP3 ADD DUP4 SWAP1 MSTORE PUSH2 0x120 DUP3 ADD DUP4 SWAP1 MSTORE PUSH2 0x160 DUP3 ADD DUP4 SWAP1 MSTORE PUSH2 0x180 DUP3 ADD DUP4 SWAP1 MSTORE PUSH2 0x1A0 DUP3 ADD MSTORE PUSH4 0xFFFFFFFF DUP7 AND PUSH1 0x80 DUP3 ADD MSTORE PUSH3 0xFFFFFF DUP10 AND DUP2 MSTORE ADDRESS PUSH2 0x140 DUP3 ADD MSTORE PUSH1 0xF DUP4 SWAP1 SIGNEXTEND PUSH2 0x100 DUP3 ADD DUP2 SWAP1 MSTORE SWAP1 SWAP2 SLT PUSH2 0x797 JUMPI PUSH1 0x0 PUSH2 0x7A9 JUMP JUMPDEST PUSH16 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF JUMPDEST PUSH1 0xF SIGNEXTEND PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0xFFFF DUP7 AND PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x7C8 TIMESTAMP PUSH3 0x3F480 PUSH2 0x1559 JUMP JUMPDEST PUSH4 0xFFFFFFFF SWAP1 DUP2 AND PUSH1 0xA0 DUP4 ADD MSTORE TIMESTAMP AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 MLOAD PUSH4 0x489CC5E9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP2 PUSH4 0x489CC5E9 SWAP2 PUSH2 0x815 SWAP2 DUP6 SWAP2 PUSH1 0x4 ADD PUSH2 0x15BC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x82F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x840 JUMPI POP PUSH1 0x1 JUMPDEST PUSH2 0x8BB JUMPI PUSH2 0x84C PUSH2 0x1705 JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 SUB PUSH2 0x8AF JUMPI POP PUSH2 0x860 PUSH2 0x1721 JUMP JUMPDEST DUP1 PUSH2 0x86B JUMPI POP PUSH2 0x8B1 JUMP JUMPDEST PUSH32 0x2858238D037E52471D3AD4944D280CDB1FD3B479A3FDF698BB04E99572E6EFA8 DUP2 PUSH1 0x40 MLOAD PUSH2 0x89A SWAP2 SWAP1 PUSH2 0x17AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x0 SWAP5 POP POP POP POP POP PUSH2 0x8FF JUMP JUMPDEST POP JUMPDEST RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP9 DUP2 MSTORE PUSH2 0xFFFF DUP9 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x742895F70ED9B3E00487DB3827A00B9C91DE8360CD96129050B8A82C99DE4862 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 SWAP4 POP POP POP POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x961 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x423 JUMP JUMPDEST PUSH2 0x96B PUSH1 0x0 PUSH2 0xF02 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x9AB PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x3D53A26B PUSH1 0xE1 SHL DUP2 MSTORE PUSH3 0xFFFFFF DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x7AA744D6 SWAP1 PUSH1 0x44 ADD PUSH2 0x100 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA1E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA42 SWAP2 SWAP1 PUSH2 0x13DC JUMP JUMPDEST SWAP1 POP PUSH2 0xA82 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST DUP2 MLOAD PUSH2 0xA8D SWAP1 PUSH2 0xDC2 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0xA9D SWAP1 PUSH2 0xDC2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0xAB0 SWAP1 PUSH2 0xDC2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0xE0 SWAP1 SWAP2 ADD MLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x60 DUP3 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x79E02E9 PUSH1 0xE2 SHL DUP2 MSTORE PUSH3 0xFFFFFF DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x1E780BA4 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB45 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB69 SWAP2 SWAP1 PUSH2 0x17C9 JUMP JUMPDEST PUSH3 0xFFFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND OR SWAP1 SSTORE SWAP1 SWAP2 POP PUSH2 0xBA6 PUSH3 0x186A0 DUP5 PUSH2 0x14F6 JUMP JUMPDEST PUSH1 0xFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xC8D JUMPI PUSH1 0x40 MLOAD PUSH4 0x1857BE39 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0xFF DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x30AF7C72 SWAP1 PUSH1 0x24 ADD PUSH2 0x260 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC34 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC58 SWAP2 SWAP1 PUSH2 0x1823 JUMP JUMPDEST PUSH1 0xC0 ADD MLOAD PUSH1 0xFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP JUMPDEST PUSH1 0xFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SLOAD DUP3 MLOAD PUSH3 0xFFFFFF DUP8 AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND SWAP4 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 AND DUP2 DUP4 ADD MSTORE SWAP1 MLOAD PUSH32 0x5222A91CEC499C7C85C5FCB8B8DDFB81880EC40273D8CDA372740D8A97FA6EC7 SWAP2 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xD51 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x423 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xDB6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x423 JUMP JUMPDEST PUSH2 0xDBF DUP2 PUSH2 0xF02 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH9 0x10000000000000000 PUSH2 0xDE4 PUSH8 0xDE0B6B3A7640000 PUSH1 0xF DUP6 SWAP1 SIGNEXTEND PUSH2 0x198D JUMP JUMPDEST PUSH2 0x3C7 SWAP2 SWAP1 PUSH2 0x19BD JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0xE55 SWAP1 DUP5 SWAP1 PUSH2 0xF52 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH8 0xDE0B6B3A7640000 PUSH2 0xE79 PUSH9 0x10000000000000000 DUP6 PUSH2 0x198D JUMP JUMPDEST PUSH2 0xE83 SWAP2 SWAP1 PUSH2 0x19BD JUMP JUMPDEST SWAP1 POP PUSH16 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT DUP4 SLT DUP1 ISZERO SWAP1 PUSH2 0xEB6 JUMPI POP PUSH16 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 SGT ISZERO JUMPDEST PUSH2 0x3C7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x726573756C74206F7574206F662072616E676500000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x423 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFA7 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1024 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0xE55 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0xFC5 SWAP2 SWAP1 PUSH2 0x153C JUMP JUMPDEST PUSH2 0xE55 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x423 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1033 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x103D JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x109E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x423 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0x10F5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x423 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x1111 SWAP2 SWAP1 PUSH2 0x19EB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x114E JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1153 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1163 DUP3 DUP3 DUP7 PUSH2 0x116E JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x117D JUMPI POP DUP2 PUSH2 0x1036 JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x118D JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x423 SWAP2 SWAP1 PUSH2 0x17AB JUMP JUMPDEST DUP1 CALLDATALOAD PUSH3 0xFFFFFF DUP2 AND DUP2 EQ PUSH2 0x11BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1036 DUP3 PUSH2 0x11A7 JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xDBF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x11FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1204 DUP4 PUSH2 0x11A7 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x1214 DUP2 PUSH2 0x11DA JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1232 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x1242 PUSH1 0x20 DUP5 ADD PUSH2 0x11A7 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xFFFF DUP2 AND DUP2 EQ PUSH2 0xDBF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1271 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x127A DUP6 PUSH2 0x11A7 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH2 0x1291 DUP2 PUSH2 0x124B JUMP JUMPDEST SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x12AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP1 SWAP4 POP POP JUMP JUMPDEST PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0xDBF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1036 DUP2 PUSH2 0x12B5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xDBF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1308 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1036 DUP2 PUSH2 0x12E1 JUMP JUMPDEST PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1347 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MSTORE POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x260 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1380 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MSTORE SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH1 0xF DUP2 SWAP1 SIGNEXTEND DUP2 EQ PUSH2 0x11BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x11BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 MLOAD PUSH2 0x11BA DUP2 PUSH2 0x124B JUMP JUMPDEST DUP1 MLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT DUP2 AND DUP2 EQ PUSH2 0x11BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x100 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 ADD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x1421 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 PUSH1 0x40 MSTORE PUSH2 0x142E DUP5 PUSH2 0x1386 JUMP JUMPDEST DUP2 MSTORE PUSH2 0x143C PUSH1 0x20 DUP6 ADD PUSH2 0x1386 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x144D PUSH1 0x40 DUP6 ADD PUSH2 0x1386 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x145E PUSH1 0x60 DUP6 ADD PUSH2 0x1386 JUMP JUMPDEST PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0x146F PUSH1 0x80 DUP6 ADD PUSH2 0x1398 JUMP JUMPDEST PUSH1 0x80 DUP3 ADD MSTORE PUSH2 0x1480 PUSH1 0xA0 DUP6 ADD PUSH2 0x13B0 JUMP JUMPDEST PUSH1 0xA0 DUP3 ADD MSTORE PUSH2 0x1491 PUSH1 0xC0 DUP6 ADD PUSH2 0x13B0 JUMP JUMPDEST PUSH1 0xC0 DUP3 ADD MSTORE PUSH2 0x14A2 PUSH1 0xE0 DUP6 ADD PUSH2 0x13BB JUMP JUMPDEST PUSH1 0xE0 DUP3 ADD MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1036 DUP3 PUSH2 0x1386 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH3 0xFFFFFF DUP1 DUP5 AND DUP1 PUSH2 0x150C JUMPI PUSH2 0x150C PUSH2 0x14CA JUMP JUMPDEST SWAP3 AND SWAP2 SWAP1 SWAP2 DIV SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x152A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 MLOAD PUSH2 0x11BA DUP2 PUSH2 0x11DA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x154E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1036 DUP2 PUSH2 0x11DA JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x3C7 JUMPI PUSH2 0x3C7 PUSH2 0x14E0 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1587 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x156F JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x15A8 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x156C JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH2 0x15D2 PUSH1 0x40 DUP3 ADD DUP5 MLOAD PUSH3 0xFFFFFF AND SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP5 ADD MLOAD PUSH2 0x15E8 PUSH1 0x60 DUP5 ADD DUP3 PUSH1 0xF SIGNEXTEND SWAP1 MSTORE JUMP JUMPDEST POP PUSH1 0x40 DUP5 ADD MLOAD PUSH2 0xFFFF DUP2 AND PUSH1 0x80 DUP5 ADD MSTORE POP PUSH1 0x60 DUP5 ADD MLOAD PUSH4 0xFFFFFFFF DUP2 AND PUSH1 0xA0 DUP5 ADD MSTORE POP PUSH1 0x80 DUP5 ADD MLOAD PUSH4 0xFFFFFFFF DUP2 AND PUSH1 0xC0 DUP5 ADD MSTORE POP PUSH1 0xA0 DUP5 ADD MLOAD PUSH4 0xFFFFFFFF DUP2 AND PUSH1 0xE0 DUP5 ADD MSTORE POP PUSH1 0xC0 DUP5 ADD MLOAD PUSH2 0x100 PUSH2 0x164B DUP2 DUP6 ADD DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST PUSH1 0xE0 DUP7 ADD MLOAD SWAP2 POP PUSH2 0x120 PUSH2 0x1663 DUP2 DUP7 ADD DUP5 PUSH1 0xF SIGNEXTEND SWAP1 MSTORE JUMP JUMPDEST SWAP1 DUP7 ADD MLOAD SWAP2 POP PUSH2 0x140 SWAP1 PUSH2 0x167B DUP6 DUP4 ADD DUP5 PUSH1 0xF SIGNEXTEND SWAP1 MSTORE JUMP JUMPDEST DUP7 ADD MLOAD PUSH2 0x160 DUP6 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 DUP7 ADD MLOAD SWAP2 POP PUSH2 0x180 SWAP1 PUSH2 0x16A6 DUP3 DUP7 ADD DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST DUP7 ADD MLOAD PUSH2 0x1A0 DUP6 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 DUP7 ADD MLOAD SWAP2 POP PUSH2 0x1C0 SWAP1 PUSH2 0x16CC DUP3 DUP7 ADD DUP5 PUSH2 0xFFFF AND SWAP1 MSTORE JUMP JUMPDEST DUP7 ADD MLOAD PUSH2 0x1E0 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 POP PUSH2 0x16E8 PUSH2 0x200 DUP5 ADD DUP3 PUSH2 0x1590 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x16FC DUP2 DUP6 PUSH2 0x1590 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x171E JUMPI PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY POP PUSH1 0x0 MLOAD PUSH1 0xE0 SHR JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x172F JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3 NOT RETURNDATASIZE DUP2 ADD PUSH1 0x4 DUP4 RETURNDATACOPY DUP2 MLOAD RETURNDATASIZE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 PUSH1 0x24 DUP5 ADD GT DUP2 DUP5 GT OR ISZERO PUSH2 0x175F JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP3 DUP6 ADD SWAP2 POP DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x1777 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP5 RETURNDATASIZE DUP8 ADD ADD PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x1791 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x17A0 PUSH1 0x20 DUP3 DUP7 ADD ADD DUP8 PUSH2 0x1313 JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1036 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1590 JUMP JUMPDEST DUP1 MLOAD PUSH2 0x11BA DUP2 PUSH2 0x12E1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1036 DUP2 PUSH2 0x12E1 JUMP JUMPDEST DUP1 MLOAD PUSH2 0x11BA DUP2 PUSH2 0x12B5 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x3 DUP2 SWAP1 SIGNEXTEND DUP2 EQ PUSH2 0x11BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 MLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x11BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x260 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1836 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x183E PUSH2 0x134E JUMP JUMPDEST PUSH2 0x1847 DUP4 PUSH2 0x1531 JUMP JUMPDEST DUP2 MSTORE PUSH2 0x1855 PUSH1 0x20 DUP5 ADD PUSH2 0x17E6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x1866 PUSH1 0x40 DUP5 ADD PUSH2 0x17E6 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x1877 PUSH1 0x60 DUP5 ADD PUSH2 0x17F1 JUMP JUMPDEST PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0x1888 PUSH1 0x80 DUP5 ADD PUSH2 0x17E6 JUMP JUMPDEST PUSH1 0x80 DUP3 ADD MSTORE PUSH2 0x1899 PUSH1 0xA0 DUP5 ADD PUSH2 0x13B0 JUMP JUMPDEST PUSH1 0xA0 DUP3 ADD MSTORE PUSH2 0x18AA PUSH1 0xC0 DUP5 ADD PUSH2 0x17BE JUMP JUMPDEST PUSH1 0xC0 DUP3 ADD MSTORE PUSH2 0x18BB PUSH1 0xE0 DUP5 ADD PUSH2 0x1398 JUMP JUMPDEST PUSH1 0xE0 DUP3 ADD MSTORE PUSH2 0x100 PUSH2 0x18CE DUP2 DUP6 ADD PUSH2 0x1386 JUMP JUMPDEST SWAP1 DUP3 ADD MSTORE PUSH2 0x120 PUSH2 0x18E0 DUP5 DUP3 ADD PUSH2 0x17BE JUMP JUMPDEST SWAP1 DUP3 ADD MSTORE PUSH2 0x140 PUSH2 0x18F2 DUP5 DUP3 ADD PUSH2 0x1386 JUMP JUMPDEST SWAP1 DUP3 ADD MSTORE PUSH2 0x160 PUSH2 0x1904 DUP5 DUP3 ADD PUSH2 0x1386 JUMP JUMPDEST SWAP1 DUP3 ADD MSTORE PUSH2 0x180 PUSH2 0x1916 DUP5 DUP3 ADD PUSH2 0x1386 JUMP JUMPDEST SWAP1 DUP3 ADD MSTORE PUSH2 0x1A0 PUSH2 0x1928 DUP5 DUP3 ADD PUSH2 0x1386 JUMP JUMPDEST SWAP1 DUP3 ADD MSTORE PUSH2 0x1C0 PUSH2 0x193A DUP5 DUP3 ADD PUSH2 0x1386 JUMP JUMPDEST SWAP1 DUP3 ADD MSTORE PUSH2 0x1E0 PUSH2 0x194C DUP5 DUP3 ADD PUSH2 0x1803 JUMP JUMPDEST SWAP1 DUP3 ADD MSTORE PUSH2 0x200 PUSH2 0x195E DUP5 DUP3 ADD PUSH2 0x1803 JUMP JUMPDEST SWAP1 DUP3 ADD MSTORE PUSH2 0x220 PUSH2 0x1970 DUP5 DUP3 ADD PUSH2 0x1803 JUMP JUMPDEST SWAP1 DUP3 ADD MSTORE PUSH2 0x240 PUSH2 0x1982 DUP5 DUP3 ADD PUSH2 0x1386 JUMP JUMPDEST SWAP1 DUP3 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 DUP3 MUL PUSH1 0x0 DUP3 SLT PUSH1 0x1 PUSH1 0xFF SHL DUP5 EQ AND ISZERO PUSH2 0x19A9 JUMPI PUSH2 0x19A9 PUSH2 0x14E0 JUMP JUMPDEST DUP2 DUP2 SDIV DUP4 EQ DUP3 ISZERO OR PUSH2 0x3C7 JUMPI PUSH2 0x3C7 PUSH2 0x14E0 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x19CC JUMPI PUSH2 0x19CC PUSH2 0x14CA JUMP JUMPDEST PUSH1 0x1 PUSH1 0xFF SHL DUP3 EQ PUSH1 0x0 NOT DUP5 EQ AND ISZERO PUSH2 0x19E6 JUMPI PUSH2 0x19E6 PUSH2 0x14E0 JUMP JUMPDEST POP SDIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x19FD DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x156C JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PREVRANDAO 0xE9 DUP2 PUSH1 0x1B 0xE4 PUSH17 0x8BDDCA168ED09F7918FEBF6A576FCC3DC5 0xA8 SWAP8 PUSH24 0xCC197EA44164736F6C634300081300330000000000000000 ","sourceMap":"3027:7976:10:-:0;;;4002:110;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;921:32:3;719:10:7;921:18:3;:32::i;:::-;-1:-1:-1;;;;;4073:32:10::1;;::::0;3027:7976;;2270:187:3;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:3;;;-1:-1:-1;;;;;;2378:17:3;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;14:290:11:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:11;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:11:o;:::-;3027:7976:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_callOptionalReturn_300":{"entryPoint":3922,"id":300,"parameterSlots":2,"returnSlots":0},"@_fromDec18_2052":{"entryPoint":3674,"id":2052,"parameterSlots":1,"returnSlots":1},"@_msgSender_1352":{"entryPoint":null,"id":1352,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_648":{"entryPoint":3842,"id":648,"parameterSlots":1,"returnSlots":0},"@addPerpetual_1660":{"entryPoint":2777,"id":1660,"parameterSlots":1,"returnSlots":0},"@approveAmountForPerpetualMgnTkn_1702":{"entryPoint":1311,"id":1702,"parameterSlots":2,"returnSlots":0},"@functionCallWithValue_460":{"entryPoint":4157,"id":460,"parameterSlots":4,"returnSlots":1},"@functionCall_390":{"entryPoint":4132,"id":390,"parameterSlots":3,"returnSlots":1},"@getMarginAccount_1977":{"entryPoint":2413,"id":1977,"parameterSlots":1,"returnSlots":1},"@getMaxTradeAmount_2018":{"entryPoint":627,"id":2018,"parameterSlots":2,"returnSlots":1},"@isContract_319":{"entryPoint":null,"id":319,"parameterSlots":1,"returnSlots":1},"@mgnTknAddrOfPool_1580":{"entryPoint":null,"id":1580,"parameterSlots":0,"returnSlots":0},"@orderBookOfPerpetual_1576":{"entryPoint":null,"id":1576,"parameterSlots":0,"returnSlots":0},"@owner_577":{"entryPoint":null,"id":577,"parameterSlots":0,"returnSlots":1},"@perpetualProxy_1552":{"entryPoint":null,"id":1552,"parameterSlots":0,"returnSlots":0},"@postOrder_1858":{"entryPoint":1571,"id":1858,"parameterSlots":4,"returnSlots":1},"@renounceOwnership_605":{"entryPoint":2311,"id":605,"parameterSlots":0,"returnSlots":0},"@safeTransfer_108":{"entryPoint":3566,"id":108,"parameterSlots":3,"returnSlots":0},"@toDec18_2071":{"entryPoint":3522,"id":2071,"parameterSlots":1,"returnSlots":1},"@transferMarginCollateralTo_1913":{"entryPoint":973,"id":1913,"parameterSlots":1,"returnSlots":0},"@transferOwnership_628":{"entryPoint":3319,"id":628,"parameterSlots":1,"returnSlots":0},"@verifyCallResult_543":{"entryPoint":4462,"id":543,"parameterSlots":3,"returnSlots":1},"abi_decode_address_fromMemory":{"entryPoint":6078,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_bool_fromMemory":{"entryPoint":5425,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_bytes16_fromMemory":{"entryPoint":5051,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_int128_fromMemory":{"entryPoint":4998,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_int32_fromMemory":{"entryPoint":6129,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":4854,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":6089,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":5436,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_int128_fromMemory":{"entryPoint":5295,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_struct$_LiquidityPoolData_$1436_memory_ptr_fromMemory":{"entryPoint":6179,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_struct$_MarginAccount_$1509_memory_ptr_fromMemory":{"entryPoint":5084,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint24":{"entryPoint":4543,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint24t_bool":{"entryPoint":4584,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint24t_int256t_uint16t_uint32":{"entryPoint":4699,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":5400,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_uint24":{"entryPoint":4639,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint8":{"entryPoint":4804,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_uint128_fromMemory":{"entryPoint":6147,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_uint16_fromMemory":{"entryPoint":5040,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_uint24":{"entryPoint":4519,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_uint64_fromMemory":{"entryPoint":5016,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_uint8_fromMemory":{"entryPoint":6118,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_bytes":{"entryPoint":5520,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_int128":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":6635,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_int256_t_uint16__to_t_int256_t_uint16__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6059,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_774a4ae2b8b6c31151ef5dc7c463f6f8f5f1e9b277850852024f200dd1b62b5b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_ba1a75905e42c2c2ee220ec76b87374b00e44cc2cdf17342859ed546c8924001__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_e1d240271c0bae9a59e3391287011b8cb205593d101d7303b0a19e6a118e4a9e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_struct$_ClientOrder_$1394_memory_ptr_t_bytes_memory_ptr__to_t_struct$_ClientOrder_$1394_memory_ptr_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":5564,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_struct$_D18MarginAccount_$1518_memory_ptr__to_t_struct$_D18MarginAccount_$1518_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint24__to_t_uint24__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint24_t_address__to_t_uint24_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint24_t_address_t_address__to_t_uint24_t_address_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_uint24_t_address_t_uint256__to_t_uint24_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_uint24_t_int128_t_bool__to_t_uint24_t_int128_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_uint16":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_uint24":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_uint32":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"allocate_memory":{"entryPoint":4942,"id":null,"parameterSlots":0,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":5465,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_int256":{"entryPoint":6589,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint24":{"entryPoint":5366,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_int256":{"entryPoint":6541,"id":null,"parameterSlots":2,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":5484,"id":null,"parameterSlots":3,"returnSlots":0},"finalize_allocation":{"entryPoint":4883,"id":null,"parameterSlots":2,"returnSlots":0},"panic_error_0x11":{"entryPoint":5344,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":5322,"id":null,"parameterSlots":0,"returnSlots":0},"return_data_selector":{"entryPoint":5893,"id":null,"parameterSlots":0,"returnSlots":1},"try_decode_error_message":{"entryPoint":5921,"id":null,"parameterSlots":0,"returnSlots":1},"validator_revert_address":{"entryPoint":4833,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_bool":{"entryPoint":4570,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_uint16":{"entryPoint":4683,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_uint8":{"entryPoint":4789,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:20830:11","statements":[{"nodeType":"YulBlock","src":"6:3:11","statements":[]},{"body":{"nodeType":"YulBlock","src":"62:113:11","statements":[{"nodeType":"YulAssignment","src":"72:29:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"94:6:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"81:12:11"},"nodeType":"YulFunctionCall","src":"81:20:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"72:5:11"}]},{"body":{"nodeType":"YulBlock","src":"153:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"162:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"165:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"155:6:11"},"nodeType":"YulFunctionCall","src":"155:12:11"},"nodeType":"YulExpressionStatement","src":"155:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"123:5:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"134:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"141:8:11","type":"","value":"0xffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"130:3:11"},"nodeType":"YulFunctionCall","src":"130:20:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"120:2:11"},"nodeType":"YulFunctionCall","src":"120:31:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"113:6:11"},"nodeType":"YulFunctionCall","src":"113:39:11"},"nodeType":"YulIf","src":"110:59:11"}]},"name":"abi_decode_uint24","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"41:6:11","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"52:5:11","type":""}],"src":"14:161:11"},{"body":{"nodeType":"YulBlock","src":"249:115:11","statements":[{"body":{"nodeType":"YulBlock","src":"295:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"304:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"307:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"297:6:11"},"nodeType":"YulFunctionCall","src":"297:12:11"},"nodeType":"YulExpressionStatement","src":"297:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"270:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"279:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"266:3:11"},"nodeType":"YulFunctionCall","src":"266:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"291:2:11","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"262:3:11"},"nodeType":"YulFunctionCall","src":"262:32:11"},"nodeType":"YulIf","src":"259:52:11"},{"nodeType":"YulAssignment","src":"320:38:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"348:9:11"}],"functionName":{"name":"abi_decode_uint24","nodeType":"YulIdentifier","src":"330:17:11"},"nodeType":"YulFunctionCall","src":"330:28:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"320:6:11"}]}]},"name":"abi_decode_tuple_t_uint24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"215:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"226:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"238:6:11","type":""}],"src":"180:184:11"},{"body":{"nodeType":"YulBlock","src":"413:83:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"430:3:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"439:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"446:42:11","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"435:3:11"},"nodeType":"YulFunctionCall","src":"435:54:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"423:6:11"},"nodeType":"YulFunctionCall","src":"423:67:11"},"nodeType":"YulExpressionStatement","src":"423:67:11"}]},"name":"abi_encode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"397:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"404:3:11","type":""}],"src":"369:127:11"},{"body":{"nodeType":"YulBlock","src":"602:125:11","statements":[{"nodeType":"YulAssignment","src":"612:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"624:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"635:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"620:3:11"},"nodeType":"YulFunctionCall","src":"620:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"612:4:11"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"654:9:11"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"669:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"677:42:11","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"665:3:11"},"nodeType":"YulFunctionCall","src":"665:55:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"647:6:11"},"nodeType":"YulFunctionCall","src":"647:74:11"},"nodeType":"YulExpressionStatement","src":"647:74:11"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"571:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"582:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"593:4:11","type":""}],"src":"501:226:11"},{"body":{"nodeType":"YulBlock","src":"774:76:11","statements":[{"body":{"nodeType":"YulBlock","src":"828:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"837:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"840:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"830:6:11"},"nodeType":"YulFunctionCall","src":"830:12:11"},"nodeType":"YulExpressionStatement","src":"830:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"797:5:11"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"818:5:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"811:6:11"},"nodeType":"YulFunctionCall","src":"811:13:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"804:6:11"},"nodeType":"YulFunctionCall","src":"804:21:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"794:2:11"},"nodeType":"YulFunctionCall","src":"794:32:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"787:6:11"},"nodeType":"YulFunctionCall","src":"787:40:11"},"nodeType":"YulIf","src":"784:60:11"}]},"name":"validator_revert_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"763:5:11","type":""}],"src":"732:118:11"},{"body":{"nodeType":"YulBlock","src":"938:230:11","statements":[{"body":{"nodeType":"YulBlock","src":"984:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"993:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"996:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"986:6:11"},"nodeType":"YulFunctionCall","src":"986:12:11"},"nodeType":"YulExpressionStatement","src":"986:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"959:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"968:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"955:3:11"},"nodeType":"YulFunctionCall","src":"955:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"980:2:11","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"951:3:11"},"nodeType":"YulFunctionCall","src":"951:32:11"},"nodeType":"YulIf","src":"948:52:11"},{"nodeType":"YulAssignment","src":"1009:38:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1037:9:11"}],"functionName":{"name":"abi_decode_uint24","nodeType":"YulIdentifier","src":"1019:17:11"},"nodeType":"YulFunctionCall","src":"1019:28:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1009:6:11"}]},{"nodeType":"YulVariableDeclaration","src":"1056:45:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1086:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"1097:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1082:3:11"},"nodeType":"YulFunctionCall","src":"1082:18:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1069:12:11"},"nodeType":"YulFunctionCall","src":"1069:32:11"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"1060:5:11","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1132:5:11"}],"functionName":{"name":"validator_revert_bool","nodeType":"YulIdentifier","src":"1110:21:11"},"nodeType":"YulFunctionCall","src":"1110:28:11"},"nodeType":"YulExpressionStatement","src":"1110:28:11"},{"nodeType":"YulAssignment","src":"1147:15:11","value":{"name":"value","nodeType":"YulIdentifier","src":"1157:5:11"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1147:6:11"}]}]},"name":"abi_decode_tuple_t_uint24t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"896:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"907:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"919:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"927:6:11","type":""}],"src":"855:313:11"},{"body":{"nodeType":"YulBlock","src":"1272:76:11","statements":[{"nodeType":"YulAssignment","src":"1282:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1294:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"1305:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1290:3:11"},"nodeType":"YulFunctionCall","src":"1290:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1282:4:11"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1324:9:11"},{"name":"value0","nodeType":"YulIdentifier","src":"1335:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1317:6:11"},"nodeType":"YulFunctionCall","src":"1317:25:11"},"nodeType":"YulExpressionStatement","src":"1317:25:11"}]},"name":"abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1241:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1252:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1263:4:11","type":""}],"src":"1173:175:11"},{"body":{"nodeType":"YulBlock","src":"1439:166:11","statements":[{"body":{"nodeType":"YulBlock","src":"1485:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1494:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1497:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1487:6:11"},"nodeType":"YulFunctionCall","src":"1487:12:11"},"nodeType":"YulExpressionStatement","src":"1487:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1460:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"1469:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1456:3:11"},"nodeType":"YulFunctionCall","src":"1456:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"1481:2:11","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1452:3:11"},"nodeType":"YulFunctionCall","src":"1452:32:11"},"nodeType":"YulIf","src":"1449:52:11"},{"nodeType":"YulAssignment","src":"1510:33:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1533:9:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1520:12:11"},"nodeType":"YulFunctionCall","src":"1520:23:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1510:6:11"}]},{"nodeType":"YulAssignment","src":"1552:47:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1584:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"1595:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1580:3:11"},"nodeType":"YulFunctionCall","src":"1580:18:11"}],"functionName":{"name":"abi_decode_uint24","nodeType":"YulIdentifier","src":"1562:17:11"},"nodeType":"YulFunctionCall","src":"1562:37:11"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1552:6:11"}]}]},"name":"abi_decode_tuple_t_uint256t_uint24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1397:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1408:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1420:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1428:6:11","type":""}],"src":"1353:252:11"},{"body":{"nodeType":"YulBlock","src":"1654:73:11","statements":[{"body":{"nodeType":"YulBlock","src":"1705:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1714:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1717:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1707:6:11"},"nodeType":"YulFunctionCall","src":"1707:12:11"},"nodeType":"YulExpressionStatement","src":"1707:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1677:5:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1688:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"1695:6:11","type":"","value":"0xffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1684:3:11"},"nodeType":"YulFunctionCall","src":"1684:18:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1674:2:11"},"nodeType":"YulFunctionCall","src":"1674:29:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1667:6:11"},"nodeType":"YulFunctionCall","src":"1667:37:11"},"nodeType":"YulIf","src":"1664:57:11"}]},"name":"validator_revert_uint16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1643:5:11","type":""}],"src":"1610:117:11"},{"body":{"nodeType":"YulBlock","src":"1849:440:11","statements":[{"body":{"nodeType":"YulBlock","src":"1896:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1905:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1908:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1898:6:11"},"nodeType":"YulFunctionCall","src":"1898:12:11"},"nodeType":"YulExpressionStatement","src":"1898:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1870:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"1879:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1866:3:11"},"nodeType":"YulFunctionCall","src":"1866:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"1891:3:11","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1862:3:11"},"nodeType":"YulFunctionCall","src":"1862:33:11"},"nodeType":"YulIf","src":"1859:53:11"},{"nodeType":"YulAssignment","src":"1921:38:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1949:9:11"}],"functionName":{"name":"abi_decode_uint24","nodeType":"YulIdentifier","src":"1931:17:11"},"nodeType":"YulFunctionCall","src":"1931:28:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1921:6:11"}]},{"nodeType":"YulAssignment","src":"1968:42:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1995:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"2006:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1991:3:11"},"nodeType":"YulFunctionCall","src":"1991:18:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1978:12:11"},"nodeType":"YulFunctionCall","src":"1978:32:11"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1968:6:11"}]},{"nodeType":"YulVariableDeclaration","src":"2019:45:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2049:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"2060:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2045:3:11"},"nodeType":"YulFunctionCall","src":"2045:18:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2032:12:11"},"nodeType":"YulFunctionCall","src":"2032:32:11"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"2023:5:11","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2097:5:11"}],"functionName":{"name":"validator_revert_uint16","nodeType":"YulIdentifier","src":"2073:23:11"},"nodeType":"YulFunctionCall","src":"2073:30:11"},"nodeType":"YulExpressionStatement","src":"2073:30:11"},{"nodeType":"YulAssignment","src":"2112:15:11","value":{"name":"value","nodeType":"YulIdentifier","src":"2122:5:11"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"2112:6:11"}]},{"nodeType":"YulVariableDeclaration","src":"2136:47:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2168:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"2179:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2164:3:11"},"nodeType":"YulFunctionCall","src":"2164:18:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2151:12:11"},"nodeType":"YulFunctionCall","src":"2151:32:11"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"2140:7:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"2241:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2250:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2253:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2243:6:11"},"nodeType":"YulFunctionCall","src":"2243:12:11"},"nodeType":"YulExpressionStatement","src":"2243:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"2205:7:11"},{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"2218:7:11"},{"kind":"number","nodeType":"YulLiteral","src":"2227:10:11","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2214:3:11"},"nodeType":"YulFunctionCall","src":"2214:24:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2202:2:11"},"nodeType":"YulFunctionCall","src":"2202:37:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2195:6:11"},"nodeType":"YulFunctionCall","src":"2195:45:11"},"nodeType":"YulIf","src":"2192:65:11"},{"nodeType":"YulAssignment","src":"2266:17:11","value":{"name":"value_1","nodeType":"YulIdentifier","src":"2276:7:11"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"2266:6:11"}]}]},"name":"abi_decode_tuple_t_uint24t_int256t_uint16t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1791:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1802:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1814:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1822:6:11","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1830:6:11","type":""},{"name":"value3","nodeType":"YulTypedName","src":"1838:6:11","type":""}],"src":"1732:557:11"},{"body":{"nodeType":"YulBlock","src":"2389:92:11","statements":[{"nodeType":"YulAssignment","src":"2399:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2411:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"2422:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2407:3:11"},"nodeType":"YulFunctionCall","src":"2407:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2399:4:11"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2441:9:11"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2466:6:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2459:6:11"},"nodeType":"YulFunctionCall","src":"2459:14:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2452:6:11"},"nodeType":"YulFunctionCall","src":"2452:22:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2434:6:11"},"nodeType":"YulFunctionCall","src":"2434:41:11"},"nodeType":"YulExpressionStatement","src":"2434:41:11"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2358:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2369:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2380:4:11","type":""}],"src":"2294:187:11"},{"body":{"nodeType":"YulBlock","src":"2655:319:11","statements":[{"nodeType":"YulAssignment","src":"2665:27:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2677:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"2688:3:11","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2673:3:11"},"nodeType":"YulFunctionCall","src":"2673:19:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2665:4:11"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2708:9:11"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2725:6:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2719:5:11"},"nodeType":"YulFunctionCall","src":"2719:13:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2701:6:11"},"nodeType":"YulFunctionCall","src":"2701:32:11"},"nodeType":"YulExpressionStatement","src":"2701:32:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2753:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"2764:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2749:3:11"},"nodeType":"YulFunctionCall","src":"2749:20:11"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2781:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"2789:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2777:3:11"},"nodeType":"YulFunctionCall","src":"2777:17:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2771:5:11"},"nodeType":"YulFunctionCall","src":"2771:24:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2742:6:11"},"nodeType":"YulFunctionCall","src":"2742:54:11"},"nodeType":"YulExpressionStatement","src":"2742:54:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2816:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"2827:4:11","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2812:3:11"},"nodeType":"YulFunctionCall","src":"2812:20:11"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2844:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"2852:4:11","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2840:3:11"},"nodeType":"YulFunctionCall","src":"2840:17:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2834:5:11"},"nodeType":"YulFunctionCall","src":"2834:24:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2805:6:11"},"nodeType":"YulFunctionCall","src":"2805:54:11"},"nodeType":"YulExpressionStatement","src":"2805:54:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2879:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"2890:4:11","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2875:3:11"},"nodeType":"YulFunctionCall","src":"2875:20:11"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2911:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"2919:4:11","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2907:3:11"},"nodeType":"YulFunctionCall","src":"2907:17:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2901:5:11"},"nodeType":"YulFunctionCall","src":"2901:24:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2931:34:11","type":"","value":"0xffffffffffffffffffffffffffffffff"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2927:3:11"},"nodeType":"YulFunctionCall","src":"2927:39:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2897:3:11"},"nodeType":"YulFunctionCall","src":"2897:70:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2868:6:11"},"nodeType":"YulFunctionCall","src":"2868:100:11"},"nodeType":"YulExpressionStatement","src":"2868:100:11"}]},"name":"abi_encode_tuple_t_struct$_D18MarginAccount_$1518_memory_ptr__to_t_struct$_D18MarginAccount_$1518_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2624:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2635:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2646:4:11","type":""}],"src":"2486:488:11"},{"body":{"nodeType":"YulBlock","src":"3022:71:11","statements":[{"body":{"nodeType":"YulBlock","src":"3071:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3080:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3083:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3073:6:11"},"nodeType":"YulFunctionCall","src":"3073:12:11"},"nodeType":"YulExpressionStatement","src":"3073:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3045:5:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3056:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"3063:4:11","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3052:3:11"},"nodeType":"YulFunctionCall","src":"3052:16:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3042:2:11"},"nodeType":"YulFunctionCall","src":"3042:27:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3035:6:11"},"nodeType":"YulFunctionCall","src":"3035:35:11"},"nodeType":"YulIf","src":"3032:55:11"}]},"name":"validator_revert_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3011:5:11","type":""}],"src":"2979:114:11"},{"body":{"nodeType":"YulBlock","src":"3166:175:11","statements":[{"body":{"nodeType":"YulBlock","src":"3212:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3221:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3224:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3214:6:11"},"nodeType":"YulFunctionCall","src":"3214:12:11"},"nodeType":"YulExpressionStatement","src":"3214:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3187:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"3196:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3183:3:11"},"nodeType":"YulFunctionCall","src":"3183:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"3208:2:11","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3179:3:11"},"nodeType":"YulFunctionCall","src":"3179:32:11"},"nodeType":"YulIf","src":"3176:52:11"},{"nodeType":"YulVariableDeclaration","src":"3237:36:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3263:9:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3250:12:11"},"nodeType":"YulFunctionCall","src":"3250:23:11"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"3241:5:11","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3305:5:11"}],"functionName":{"name":"validator_revert_uint8","nodeType":"YulIdentifier","src":"3282:22:11"},"nodeType":"YulFunctionCall","src":"3282:29:11"},"nodeType":"YulExpressionStatement","src":"3282:29:11"},{"nodeType":"YulAssignment","src":"3320:15:11","value":{"name":"value","nodeType":"YulIdentifier","src":"3330:5:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3320:6:11"}]}]},"name":"abi_decode_tuple_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3132:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3143:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3155:6:11","type":""}],"src":"3098:243:11"},{"body":{"nodeType":"YulBlock","src":"3391:109:11","statements":[{"body":{"nodeType":"YulBlock","src":"3478:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3487:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3490:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3480:6:11"},"nodeType":"YulFunctionCall","src":"3480:12:11"},"nodeType":"YulExpressionStatement","src":"3480:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3414:5:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3425:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"3432:42:11","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3421:3:11"},"nodeType":"YulFunctionCall","src":"3421:54:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3411:2:11"},"nodeType":"YulFunctionCall","src":"3411:65:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3404:6:11"},"nodeType":"YulFunctionCall","src":"3404:73:11"},"nodeType":"YulIf","src":"3401:93:11"}]},"name":"validator_revert_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3380:5:11","type":""}],"src":"3346:154:11"},{"body":{"nodeType":"YulBlock","src":"3575:177:11","statements":[{"body":{"nodeType":"YulBlock","src":"3621:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3630:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3633:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3623:6:11"},"nodeType":"YulFunctionCall","src":"3623:12:11"},"nodeType":"YulExpressionStatement","src":"3623:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3596:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"3605:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3592:3:11"},"nodeType":"YulFunctionCall","src":"3592:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"3617:2:11","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3588:3:11"},"nodeType":"YulFunctionCall","src":"3588:32:11"},"nodeType":"YulIf","src":"3585:52:11"},{"nodeType":"YulVariableDeclaration","src":"3646:36:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3672:9:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3659:12:11"},"nodeType":"YulFunctionCall","src":"3659:23:11"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"3650:5:11","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3716:5:11"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"3691:24:11"},"nodeType":"YulFunctionCall","src":"3691:31:11"},"nodeType":"YulExpressionStatement","src":"3691:31:11"},{"nodeType":"YulAssignment","src":"3731:15:11","value":{"name":"value","nodeType":"YulIdentifier","src":"3741:5:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3731:6:11"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3541:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3552:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3564:6:11","type":""}],"src":"3505:247:11"},{"body":{"nodeType":"YulBlock","src":"3800:49:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3817:3:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3826:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"3833:8:11","type":"","value":"0xffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3822:3:11"},"nodeType":"YulFunctionCall","src":"3822:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3810:6:11"},"nodeType":"YulFunctionCall","src":"3810:33:11"},"nodeType":"YulExpressionStatement","src":"3810:33:11"}]},"name":"abi_encode_uint24","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3784:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3791:3:11","type":""}],"src":"3757:92:11"},{"body":{"nodeType":"YulBlock","src":"3981:183:11","statements":[{"nodeType":"YulAssignment","src":"3991:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4003:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"4014:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3999:3:11"},"nodeType":"YulFunctionCall","src":"3999:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3991:4:11"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4033:9:11"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4048:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"4056:8:11","type":"","value":"0xffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4044:3:11"},"nodeType":"YulFunctionCall","src":"4044:21:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4026:6:11"},"nodeType":"YulFunctionCall","src":"4026:40:11"},"nodeType":"YulExpressionStatement","src":"4026:40:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4086:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"4097:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4082:3:11"},"nodeType":"YulFunctionCall","src":"4082:18:11"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"4106:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"4114:42:11","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4102:3:11"},"nodeType":"YulFunctionCall","src":"4102:55:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4075:6:11"},"nodeType":"YulFunctionCall","src":"4075:83:11"},"nodeType":"YulExpressionStatement","src":"4075:83:11"}]},"name":"abi_encode_tuple_t_uint24_t_address__to_t_uint24_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3942:9:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3953:6:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3961:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3972:4:11","type":""}],"src":"3854:310:11"},{"body":{"nodeType":"YulBlock","src":"4216:299:11","statements":[{"nodeType":"YulVariableDeclaration","src":"4226:58:11","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4248:6:11"},{"arguments":[{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"4264:4:11"},{"kind":"number","nodeType":"YulLiteral","src":"4270:2:11","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4260:3:11"},"nodeType":"YulFunctionCall","src":"4260:13:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4279:2:11","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4275:3:11"},"nodeType":"YulFunctionCall","src":"4275:7:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4256:3:11"},"nodeType":"YulFunctionCall","src":"4256:27:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4244:3:11"},"nodeType":"YulFunctionCall","src":"4244:40:11"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"4230:10:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"4367:111:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4388:1:11","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4395:3:11","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"4400:10:11","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4391:3:11"},"nodeType":"YulFunctionCall","src":"4391:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4381:6:11"},"nodeType":"YulFunctionCall","src":"4381:31:11"},"nodeType":"YulExpressionStatement","src":"4381:31:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4432:1:11","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"4435:4:11","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4425:6:11"},"nodeType":"YulFunctionCall","src":"4425:15:11"},"nodeType":"YulExpressionStatement","src":"4425:15:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4460:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4463:4:11","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4453:6:11"},"nodeType":"YulFunctionCall","src":"4453:15:11"},"nodeType":"YulExpressionStatement","src":"4453:15:11"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"4302:10:11"},{"kind":"number","nodeType":"YulLiteral","src":"4314:18:11","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4299:2:11"},"nodeType":"YulFunctionCall","src":"4299:34:11"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"4338:10:11"},{"name":"memPtr","nodeType":"YulIdentifier","src":"4350:6:11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4335:2:11"},"nodeType":"YulFunctionCall","src":"4335:22:11"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"4296:2:11"},"nodeType":"YulFunctionCall","src":"4296:62:11"},"nodeType":"YulIf","src":"4293:185:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4494:2:11","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"4498:10:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4487:6:11"},"nodeType":"YulFunctionCall","src":"4487:22:11"},"nodeType":"YulExpressionStatement","src":"4487:22:11"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"4198:6:11","type":""},{"name":"size","nodeType":"YulTypedName","src":"4206:4:11","type":""}],"src":"4169:346:11"},{"body":{"nodeType":"YulBlock","src":"4561:303:11","statements":[{"nodeType":"YulAssignment","src":"4571:19:11","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4587:2:11","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4581:5:11"},"nodeType":"YulFunctionCall","src":"4581:9:11"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4571:6:11"}]},{"nodeType":"YulVariableDeclaration","src":"4599:34:11","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4621:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"4629:3:11","type":"","value":"608"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4617:3:11"},"nodeType":"YulFunctionCall","src":"4617:16:11"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"4603:10:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"4716:111:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4737:1:11","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4744:3:11","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"4749:10:11","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4740:3:11"},"nodeType":"YulFunctionCall","src":"4740:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4730:6:11"},"nodeType":"YulFunctionCall","src":"4730:31:11"},"nodeType":"YulExpressionStatement","src":"4730:31:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4781:1:11","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"4784:4:11","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4774:6:11"},"nodeType":"YulFunctionCall","src":"4774:15:11"},"nodeType":"YulExpressionStatement","src":"4774:15:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4809:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4812:4:11","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4802:6:11"},"nodeType":"YulFunctionCall","src":"4802:15:11"},"nodeType":"YulExpressionStatement","src":"4802:15:11"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"4651:10:11"},{"kind":"number","nodeType":"YulLiteral","src":"4663:18:11","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4648:2:11"},"nodeType":"YulFunctionCall","src":"4648:34:11"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"4687:10:11"},{"name":"memPtr","nodeType":"YulIdentifier","src":"4699:6:11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4684:2:11"},"nodeType":"YulFunctionCall","src":"4684:22:11"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"4645:2:11"},"nodeType":"YulFunctionCall","src":"4645:62:11"},"nodeType":"YulIf","src":"4642:185:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4843:2:11","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"4847:10:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4836:6:11"},"nodeType":"YulFunctionCall","src":"4836:22:11"},"nodeType":"YulExpressionStatement","src":"4836:22:11"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"4550:6:11","type":""}],"src":"4520:344:11"},{"body":{"nodeType":"YulBlock","src":"4928:107:11","statements":[{"nodeType":"YulAssignment","src":"4938:22:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4953:6:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4947:5:11"},"nodeType":"YulFunctionCall","src":"4947:13:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"4938:5:11"}]},{"body":{"nodeType":"YulBlock","src":"5013:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5022:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5025:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5015:6:11"},"nodeType":"YulFunctionCall","src":"5015:12:11"},"nodeType":"YulExpressionStatement","src":"5015:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4982:5:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5000:2:11","type":"","value":"15"},{"name":"value","nodeType":"YulIdentifier","src":"5004:5:11"}],"functionName":{"name":"signextend","nodeType":"YulIdentifier","src":"4989:10:11"},"nodeType":"YulFunctionCall","src":"4989:21:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4979:2:11"},"nodeType":"YulFunctionCall","src":"4979:32:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4972:6:11"},"nodeType":"YulFunctionCall","src":"4972:40:11"},"nodeType":"YulIf","src":"4969:60:11"}]},"name":"abi_decode_int128_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"4907:6:11","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"4918:5:11","type":""}],"src":"4869:166:11"},{"body":{"nodeType":"YulBlock","src":"5099:116:11","statements":[{"nodeType":"YulAssignment","src":"5109:22:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5124:6:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5118:5:11"},"nodeType":"YulFunctionCall","src":"5118:13:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"5109:5:11"}]},{"body":{"nodeType":"YulBlock","src":"5193:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5202:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5205:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5195:6:11"},"nodeType":"YulFunctionCall","src":"5195:12:11"},"nodeType":"YulExpressionStatement","src":"5195:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5153:5:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5164:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"5171:18:11","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5160:3:11"},"nodeType":"YulFunctionCall","src":"5160:30:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"5150:2:11"},"nodeType":"YulFunctionCall","src":"5150:41:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5143:6:11"},"nodeType":"YulFunctionCall","src":"5143:49:11"},"nodeType":"YulIf","src":"5140:69:11"}]},"name":"abi_decode_uint64_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"5078:6:11","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"5089:5:11","type":""}],"src":"5040:175:11"},{"body":{"nodeType":"YulBlock","src":"5279:77:11","statements":[{"nodeType":"YulAssignment","src":"5289:22:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5304:6:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5298:5:11"},"nodeType":"YulFunctionCall","src":"5298:13:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"5289:5:11"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5344:5:11"}],"functionName":{"name":"validator_revert_uint16","nodeType":"YulIdentifier","src":"5320:23:11"},"nodeType":"YulFunctionCall","src":"5320:30:11"},"nodeType":"YulExpressionStatement","src":"5320:30:11"}]},"name":"abi_decode_uint16_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"5258:6:11","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"5269:5:11","type":""}],"src":"5220:136:11"},{"body":{"nodeType":"YulBlock","src":"5421:137:11","statements":[{"nodeType":"YulAssignment","src":"5431:22:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5446:6:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5440:5:11"},"nodeType":"YulFunctionCall","src":"5440:13:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"5431:5:11"}]},{"body":{"nodeType":"YulBlock","src":"5536:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5545:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5548:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5538:6:11"},"nodeType":"YulFunctionCall","src":"5538:12:11"},"nodeType":"YulExpressionStatement","src":"5538:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5475:5:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5486:5:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5497:34:11","type":"","value":"0xffffffffffffffffffffffffffffffff"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"5493:3:11"},"nodeType":"YulFunctionCall","src":"5493:39:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5482:3:11"},"nodeType":"YulFunctionCall","src":"5482:51:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"5472:2:11"},"nodeType":"YulFunctionCall","src":"5472:62:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5465:6:11"},"nodeType":"YulFunctionCall","src":"5465:70:11"},"nodeType":"YulIf","src":"5462:90:11"}]},"name":"abi_decode_bytes16_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"5400:6:11","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"5411:5:11","type":""}],"src":"5361:197:11"},{"body":{"nodeType":"YulBlock","src":"5675:1061:11","statements":[{"nodeType":"YulVariableDeclaration","src":"5685:13:11","value":{"kind":"number","nodeType":"YulLiteral","src":"5695:3:11","type":"","value":"256"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"5689:2:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"5743:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5752:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5755:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5745:6:11"},"nodeType":"YulFunctionCall","src":"5745:12:11"},"nodeType":"YulExpressionStatement","src":"5745:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5718:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"5727:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5714:3:11"},"nodeType":"YulFunctionCall","src":"5714:23:11"},{"name":"_1","nodeType":"YulIdentifier","src":"5739:2:11"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5710:3:11"},"nodeType":"YulFunctionCall","src":"5710:32:11"},"nodeType":"YulIf","src":"5707:52:11"},{"nodeType":"YulVariableDeclaration","src":"5768:23:11","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5788:2:11","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5782:5:11"},"nodeType":"YulFunctionCall","src":"5782:9:11"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"5772:6:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5800:33:11","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"5822:6:11"},{"name":"_1","nodeType":"YulIdentifier","src":"5830:2:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5818:3:11"},"nodeType":"YulFunctionCall","src":"5818:15:11"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"5804:10:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"5916:111:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5937:1:11","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5944:3:11","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"5949:10:11","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5940:3:11"},"nodeType":"YulFunctionCall","src":"5940:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5930:6:11"},"nodeType":"YulFunctionCall","src":"5930:31:11"},"nodeType":"YulExpressionStatement","src":"5930:31:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5981:1:11","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5984:4:11","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5974:6:11"},"nodeType":"YulFunctionCall","src":"5974:15:11"},"nodeType":"YulExpressionStatement","src":"5974:15:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6009:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6012:4:11","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6002:6:11"},"nodeType":"YulFunctionCall","src":"6002:15:11"},"nodeType":"YulExpressionStatement","src":"6002:15:11"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"5851:10:11"},{"kind":"number","nodeType":"YulLiteral","src":"5863:18:11","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5848:2:11"},"nodeType":"YulFunctionCall","src":"5848:34:11"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"5887:10:11"},{"name":"memPtr","nodeType":"YulIdentifier","src":"5899:6:11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5884:2:11"},"nodeType":"YulFunctionCall","src":"5884:22:11"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"5845:2:11"},"nodeType":"YulFunctionCall","src":"5845:62:11"},"nodeType":"YulIf","src":"5842:185:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6043:2:11","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"6047:10:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6036:6:11"},"nodeType":"YulFunctionCall","src":"6036:22:11"},"nodeType":"YulExpressionStatement","src":"6036:22:11"},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6074:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6111:9:11"}],"functionName":{"name":"abi_decode_int128_fromMemory","nodeType":"YulIdentifier","src":"6082:28:11"},"nodeType":"YulFunctionCall","src":"6082:39:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6067:6:11"},"nodeType":"YulFunctionCall","src":"6067:55:11"},"nodeType":"YulExpressionStatement","src":"6067:55:11"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6142:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"6150:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6138:3:11"},"nodeType":"YulFunctionCall","src":"6138:15:11"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6188:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"6199:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6184:3:11"},"nodeType":"YulFunctionCall","src":"6184:18:11"}],"functionName":{"name":"abi_decode_int128_fromMemory","nodeType":"YulIdentifier","src":"6155:28:11"},"nodeType":"YulFunctionCall","src":"6155:48:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6131:6:11"},"nodeType":"YulFunctionCall","src":"6131:73:11"},"nodeType":"YulExpressionStatement","src":"6131:73:11"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6224:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"6232:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6220:3:11"},"nodeType":"YulFunctionCall","src":"6220:15:11"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6270:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"6281:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6266:3:11"},"nodeType":"YulFunctionCall","src":"6266:18:11"}],"functionName":{"name":"abi_decode_int128_fromMemory","nodeType":"YulIdentifier","src":"6237:28:11"},"nodeType":"YulFunctionCall","src":"6237:48:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6213:6:11"},"nodeType":"YulFunctionCall","src":"6213:73:11"},"nodeType":"YulExpressionStatement","src":"6213:73:11"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6306:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"6314:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6302:3:11"},"nodeType":"YulFunctionCall","src":"6302:15:11"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6352:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"6363:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6348:3:11"},"nodeType":"YulFunctionCall","src":"6348:18:11"}],"functionName":{"name":"abi_decode_int128_fromMemory","nodeType":"YulIdentifier","src":"6319:28:11"},"nodeType":"YulFunctionCall","src":"6319:48:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6295:6:11"},"nodeType":"YulFunctionCall","src":"6295:73:11"},"nodeType":"YulExpressionStatement","src":"6295:73:11"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6388:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"6396:3:11","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6384:3:11"},"nodeType":"YulFunctionCall","src":"6384:16:11"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6435:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"6446:3:11","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6431:3:11"},"nodeType":"YulFunctionCall","src":"6431:19:11"}],"functionName":{"name":"abi_decode_uint64_fromMemory","nodeType":"YulIdentifier","src":"6402:28:11"},"nodeType":"YulFunctionCall","src":"6402:49:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6377:6:11"},"nodeType":"YulFunctionCall","src":"6377:75:11"},"nodeType":"YulExpressionStatement","src":"6377:75:11"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6472:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"6480:3:11","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6468:3:11"},"nodeType":"YulFunctionCall","src":"6468:16:11"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6519:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"6530:3:11","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6515:3:11"},"nodeType":"YulFunctionCall","src":"6515:19:11"}],"functionName":{"name":"abi_decode_uint16_fromMemory","nodeType":"YulIdentifier","src":"6486:28:11"},"nodeType":"YulFunctionCall","src":"6486:49:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6461:6:11"},"nodeType":"YulFunctionCall","src":"6461:75:11"},"nodeType":"YulExpressionStatement","src":"6461:75:11"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6556:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"6564:3:11","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6552:3:11"},"nodeType":"YulFunctionCall","src":"6552:16:11"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6603:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"6614:3:11","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6599:3:11"},"nodeType":"YulFunctionCall","src":"6599:19:11"}],"functionName":{"name":"abi_decode_uint16_fromMemory","nodeType":"YulIdentifier","src":"6570:28:11"},"nodeType":"YulFunctionCall","src":"6570:49:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6545:6:11"},"nodeType":"YulFunctionCall","src":"6545:75:11"},"nodeType":"YulExpressionStatement","src":"6545:75:11"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6640:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"6648:3:11","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6636:3:11"},"nodeType":"YulFunctionCall","src":"6636:16:11"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6688:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"6699:3:11","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6684:3:11"},"nodeType":"YulFunctionCall","src":"6684:19:11"}],"functionName":{"name":"abi_decode_bytes16_fromMemory","nodeType":"YulIdentifier","src":"6654:29:11"},"nodeType":"YulFunctionCall","src":"6654:50:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6629:6:11"},"nodeType":"YulFunctionCall","src":"6629:76:11"},"nodeType":"YulExpressionStatement","src":"6629:76:11"},{"nodeType":"YulAssignment","src":"6714:16:11","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"6724:6:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6714:6:11"}]}]},"name":"abi_decode_tuple_t_struct$_MarginAccount_$1509_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5641:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5652:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5664:6:11","type":""}],"src":"5563:1173:11"},{"body":{"nodeType":"YulBlock","src":"6784:50:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6801:3:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6817:2:11","type":"","value":"15"},{"name":"value","nodeType":"YulIdentifier","src":"6821:5:11"}],"functionName":{"name":"signextend","nodeType":"YulIdentifier","src":"6806:10:11"},"nodeType":"YulFunctionCall","src":"6806:21:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6794:6:11"},"nodeType":"YulFunctionCall","src":"6794:34:11"},"nodeType":"YulExpressionStatement","src":"6794:34:11"}]},"name":"abi_encode_int128","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6768:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6775:3:11","type":""}],"src":"6741:93:11"},{"body":{"nodeType":"YulBlock","src":"6986:209:11","statements":[{"nodeType":"YulAssignment","src":"6996:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7008:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"7019:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7004:3:11"},"nodeType":"YulFunctionCall","src":"7004:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6996:4:11"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7038:9:11"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7053:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"7061:8:11","type":"","value":"0xffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7049:3:11"},"nodeType":"YulFunctionCall","src":"7049:21:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7031:6:11"},"nodeType":"YulFunctionCall","src":"7031:40:11"},"nodeType":"YulExpressionStatement","src":"7031:40:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7091:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"7102:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7087:3:11"},"nodeType":"YulFunctionCall","src":"7087:18:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7118:2:11","type":"","value":"15"},{"name":"value1","nodeType":"YulIdentifier","src":"7122:6:11"}],"functionName":{"name":"signextend","nodeType":"YulIdentifier","src":"7107:10:11"},"nodeType":"YulFunctionCall","src":"7107:22:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7080:6:11"},"nodeType":"YulFunctionCall","src":"7080:50:11"},"nodeType":"YulExpressionStatement","src":"7080:50:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7150:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"7161:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7146:3:11"},"nodeType":"YulFunctionCall","src":"7146:18:11"},{"arguments":[{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"7180:6:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7173:6:11"},"nodeType":"YulFunctionCall","src":"7173:14:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7166:6:11"},"nodeType":"YulFunctionCall","src":"7166:22:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7139:6:11"},"nodeType":"YulFunctionCall","src":"7139:50:11"},"nodeType":"YulExpressionStatement","src":"7139:50:11"}]},"name":"abi_encode_tuple_t_uint24_t_int128_t_bool__to_t_uint24_t_int128_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6939:9:11","type":""},{"name":"value2","nodeType":"YulTypedName","src":"6950:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6958:6:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6966:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6977:4:11","type":""}],"src":"6839:356:11"},{"body":{"nodeType":"YulBlock","src":"7280:126:11","statements":[{"body":{"nodeType":"YulBlock","src":"7326:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7335:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7338:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7328:6:11"},"nodeType":"YulFunctionCall","src":"7328:12:11"},"nodeType":"YulExpressionStatement","src":"7328:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7301:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"7310:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7297:3:11"},"nodeType":"YulFunctionCall","src":"7297:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"7322:2:11","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7293:3:11"},"nodeType":"YulFunctionCall","src":"7293:32:11"},"nodeType":"YulIf","src":"7290:52:11"},{"nodeType":"YulAssignment","src":"7351:49:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7390:9:11"}],"functionName":{"name":"abi_decode_int128_fromMemory","nodeType":"YulIdentifier","src":"7361:28:11"},"nodeType":"YulFunctionCall","src":"7361:39:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7351:6:11"}]}]},"name":"abi_decode_tuple_t_int128_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7246:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7257:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7269:6:11","type":""}],"src":"7200:206:11"},{"body":{"nodeType":"YulBlock","src":"7585:182:11","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7602:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"7613:2:11","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7595:6:11"},"nodeType":"YulFunctionCall","src":"7595:21:11"},"nodeType":"YulExpressionStatement","src":"7595:21:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7636:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"7647:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7632:3:11"},"nodeType":"YulFunctionCall","src":"7632:18:11"},{"kind":"number","nodeType":"YulLiteral","src":"7652:2:11","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7625:6:11"},"nodeType":"YulFunctionCall","src":"7625:30:11"},"nodeType":"YulExpressionStatement","src":"7625:30:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7675:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"7686:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7671:3:11"},"nodeType":"YulFunctionCall","src":"7671:18:11"},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","kind":"string","nodeType":"YulLiteral","src":"7691:34:11","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7664:6:11"},"nodeType":"YulFunctionCall","src":"7664:62:11"},"nodeType":"YulExpressionStatement","src":"7664:62:11"},{"nodeType":"YulAssignment","src":"7735:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7747:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"7758:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7743:3:11"},"nodeType":"YulFunctionCall","src":"7743:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7735:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7562:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7576:4:11","type":""}],"src":"7411:356:11"},{"body":{"nodeType":"YulBlock","src":"7804:95:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7821:1:11","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7828:3:11","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"7833:10:11","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"7824:3:11"},"nodeType":"YulFunctionCall","src":"7824:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7814:6:11"},"nodeType":"YulFunctionCall","src":"7814:31:11"},"nodeType":"YulExpressionStatement","src":"7814:31:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7861:1:11","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"7864:4:11","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7854:6:11"},"nodeType":"YulFunctionCall","src":"7854:15:11"},"nodeType":"YulExpressionStatement","src":"7854:15:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7885:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7888:4:11","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7878:6:11"},"nodeType":"YulFunctionCall","src":"7878:15:11"},"nodeType":"YulExpressionStatement","src":"7878:15:11"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"7772:127:11"},{"body":{"nodeType":"YulBlock","src":"7936:95:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7953:1:11","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7960:3:11","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"7965:10:11","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"7956:3:11"},"nodeType":"YulFunctionCall","src":"7956:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7946:6:11"},"nodeType":"YulFunctionCall","src":"7946:31:11"},"nodeType":"YulExpressionStatement","src":"7946:31:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7993:1:11","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"7996:4:11","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7986:6:11"},"nodeType":"YulFunctionCall","src":"7986:15:11"},"nodeType":"YulExpressionStatement","src":"7986:15:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8017:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8020:4:11","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8010:6:11"},"nodeType":"YulFunctionCall","src":"8010:15:11"},"nodeType":"YulExpressionStatement","src":"8010:15:11"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"7904:127:11"},{"body":{"nodeType":"YulBlock","src":"8081:144:11","statements":[{"nodeType":"YulVariableDeclaration","src":"8091:18:11","value":{"kind":"number","nodeType":"YulLiteral","src":"8101:8:11","type":"","value":"0xffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"8095:2:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"8118:21:11","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"8133:1:11"},{"name":"_1","nodeType":"YulIdentifier","src":"8136:2:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8129:3:11"},"nodeType":"YulFunctionCall","src":"8129:10:11"},"variables":[{"name":"y_1","nodeType":"YulTypedName","src":"8122:3:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"8163:22:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"8165:16:11"},"nodeType":"YulFunctionCall","src":"8165:18:11"},"nodeType":"YulExpressionStatement","src":"8165:18:11"}]},"condition":{"arguments":[{"name":"y_1","nodeType":"YulIdentifier","src":"8158:3:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8151:6:11"},"nodeType":"YulFunctionCall","src":"8151:11:11"},"nodeType":"YulIf","src":"8148:37:11"},{"nodeType":"YulAssignment","src":"8194:25:11","value":{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"8207:1:11"},{"name":"_1","nodeType":"YulIdentifier","src":"8210:2:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8203:3:11"},"nodeType":"YulFunctionCall","src":"8203:10:11"},{"name":"y_1","nodeType":"YulIdentifier","src":"8215:3:11"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"8199:3:11"},"nodeType":"YulFunctionCall","src":"8199:20:11"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"8194:1:11"}]}]},"name":"checked_div_t_uint24","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"8066:1:11","type":""},{"name":"y","nodeType":"YulTypedName","src":"8069:1:11","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"8075:1:11","type":""}],"src":"8036:189:11"},{"body":{"nodeType":"YulBlock","src":"8311:103:11","statements":[{"body":{"nodeType":"YulBlock","src":"8357:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8366:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8369:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8359:6:11"},"nodeType":"YulFunctionCall","src":"8359:12:11"},"nodeType":"YulExpressionStatement","src":"8359:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"8332:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"8341:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8328:3:11"},"nodeType":"YulFunctionCall","src":"8328:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"8353:2:11","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8324:3:11"},"nodeType":"YulFunctionCall","src":"8324:32:11"},"nodeType":"YulIf","src":"8321:52:11"},{"nodeType":"YulAssignment","src":"8382:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8398:9:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8392:5:11"},"nodeType":"YulFunctionCall","src":"8392:16:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8382:6:11"}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8277:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"8288:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"8300:6:11","type":""}],"src":"8230:184:11"},{"body":{"nodeType":"YulBlock","src":"8574:226:11","statements":[{"nodeType":"YulAssignment","src":"8584:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8596:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"8607:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8592:3:11"},"nodeType":"YulFunctionCall","src":"8592:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8584:4:11"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8626:9:11"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8641:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"8649:8:11","type":"","value":"0xffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8637:3:11"},"nodeType":"YulFunctionCall","src":"8637:21:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8619:6:11"},"nodeType":"YulFunctionCall","src":"8619:40:11"},"nodeType":"YulExpressionStatement","src":"8619:40:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8679:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"8690:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8675:3:11"},"nodeType":"YulFunctionCall","src":"8675:18:11"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"8699:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"8707:42:11","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8695:3:11"},"nodeType":"YulFunctionCall","src":"8695:55:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8668:6:11"},"nodeType":"YulFunctionCall","src":"8668:83:11"},"nodeType":"YulExpressionStatement","src":"8668:83:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8771:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"8782:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8767:3:11"},"nodeType":"YulFunctionCall","src":"8767:18:11"},{"name":"value2","nodeType":"YulIdentifier","src":"8787:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8760:6:11"},"nodeType":"YulFunctionCall","src":"8760:34:11"},"nodeType":"YulExpressionStatement","src":"8760:34:11"}]},"name":"abi_encode_tuple_t_uint24_t_address_t_uint256__to_t_uint24_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8527:9:11","type":""},{"name":"value2","nodeType":"YulTypedName","src":"8538:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8546:6:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8554:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8565:4:11","type":""}],"src":"8419:381:11"},{"body":{"nodeType":"YulBlock","src":"8979:162:11","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8996:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"9007:2:11","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8989:6:11"},"nodeType":"YulFunctionCall","src":"8989:21:11"},"nodeType":"YulExpressionStatement","src":"8989:21:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9030:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"9041:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9026:3:11"},"nodeType":"YulFunctionCall","src":"9026:18:11"},{"kind":"number","nodeType":"YulLiteral","src":"9046:2:11","type":"","value":"12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9019:6:11"},"nodeType":"YulFunctionCall","src":"9019:30:11"},"nodeType":"YulExpressionStatement","src":"9019:30:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9069:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"9080:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9065:3:11"},"nodeType":"YulFunctionCall","src":"9065:18:11"},{"hexValue":"736574206f62206164647273","kind":"string","nodeType":"YulLiteral","src":"9085:14:11","type":"","value":"set ob addrs"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9058:6:11"},"nodeType":"YulFunctionCall","src":"9058:42:11"},"nodeType":"YulExpressionStatement","src":"9058:42:11"},{"nodeType":"YulAssignment","src":"9109:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9121:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"9132:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9117:3:11"},"nodeType":"YulFunctionCall","src":"9117:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9109:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_ba1a75905e42c2c2ee220ec76b87374b00e44cc2cdf17342859ed546c8924001__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8956:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8970:4:11","type":""}],"src":"8805:336:11"},{"body":{"nodeType":"YulBlock","src":"9275:168:11","statements":[{"nodeType":"YulAssignment","src":"9285:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9297:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"9308:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9293:3:11"},"nodeType":"YulFunctionCall","src":"9293:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9285:4:11"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9327:9:11"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9342:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"9350:42:11","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9338:3:11"},"nodeType":"YulFunctionCall","src":"9338:55:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9320:6:11"},"nodeType":"YulFunctionCall","src":"9320:74:11"},"nodeType":"YulExpressionStatement","src":"9320:74:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9414:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"9425:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9410:3:11"},"nodeType":"YulFunctionCall","src":"9410:18:11"},{"name":"value1","nodeType":"YulIdentifier","src":"9430:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9403:6:11"},"nodeType":"YulFunctionCall","src":"9403:34:11"},"nodeType":"YulExpressionStatement","src":"9403:34:11"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9236:9:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9247:6:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9255:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9266:4:11","type":""}],"src":"9146:297:11"},{"body":{"nodeType":"YulBlock","src":"9505:75:11","statements":[{"nodeType":"YulAssignment","src":"9515:22:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9530:6:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9524:5:11"},"nodeType":"YulFunctionCall","src":"9524:13:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"9515:5:11"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9568:5:11"}],"functionName":{"name":"validator_revert_bool","nodeType":"YulIdentifier","src":"9546:21:11"},"nodeType":"YulFunctionCall","src":"9546:28:11"},"nodeType":"YulExpressionStatement","src":"9546:28:11"}]},"name":"abi_decode_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"9484:6:11","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"9495:5:11","type":""}],"src":"9448:132:11"},{"body":{"nodeType":"YulBlock","src":"9663:167:11","statements":[{"body":{"nodeType":"YulBlock","src":"9709:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9718:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9721:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9711:6:11"},"nodeType":"YulFunctionCall","src":"9711:12:11"},"nodeType":"YulExpressionStatement","src":"9711:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"9684:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"9693:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9680:3:11"},"nodeType":"YulFunctionCall","src":"9680:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"9705:2:11","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9676:3:11"},"nodeType":"YulFunctionCall","src":"9676:32:11"},"nodeType":"YulIf","src":"9673:52:11"},{"nodeType":"YulVariableDeclaration","src":"9734:29:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9753:9:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9747:5:11"},"nodeType":"YulFunctionCall","src":"9747:16:11"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"9738:5:11","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9794:5:11"}],"functionName":{"name":"validator_revert_bool","nodeType":"YulIdentifier","src":"9772:21:11"},"nodeType":"YulFunctionCall","src":"9772:28:11"},"nodeType":"YulExpressionStatement","src":"9772:28:11"},{"nodeType":"YulAssignment","src":"9809:15:11","value":{"name":"value","nodeType":"YulIdentifier","src":"9819:5:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"9809:6:11"}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9629:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9640:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"9652:6:11","type":""}],"src":"9585:245:11"},{"body":{"nodeType":"YulBlock","src":"10009:168:11","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10026:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"10037:2:11","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10019:6:11"},"nodeType":"YulFunctionCall","src":"10019:21:11"},"nodeType":"YulExpressionStatement","src":"10019:21:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10060:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"10071:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10056:3:11"},"nodeType":"YulFunctionCall","src":"10056:18:11"},{"kind":"number","nodeType":"YulLiteral","src":"10076:2:11","type":"","value":"18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10049:6:11"},"nodeType":"YulFunctionCall","src":"10049:30:11"},"nodeType":"YulExpressionStatement","src":"10049:30:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10099:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"10110:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10095:3:11"},"nodeType":"YulFunctionCall","src":"10095:18:11"},{"hexValue":"6f7264657220626f6f6b20756e6b6e6f776e","kind":"string","nodeType":"YulLiteral","src":"10115:20:11","type":"","value":"order book unknown"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10088:6:11"},"nodeType":"YulFunctionCall","src":"10088:48:11"},"nodeType":"YulExpressionStatement","src":"10088:48:11"},{"nodeType":"YulAssignment","src":"10145:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10157:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"10168:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10153:3:11"},"nodeType":"YulFunctionCall","src":"10153:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10145:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_774a4ae2b8b6c31151ef5dc7c463f6f8f5f1e9b277850852024f200dd1b62b5b__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9986:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10000:4:11","type":""}],"src":"9835:342:11"},{"body":{"nodeType":"YulBlock","src":"10230:77:11","statements":[{"nodeType":"YulAssignment","src":"10240:16:11","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"10251:1:11"},{"name":"y","nodeType":"YulIdentifier","src":"10254:1:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10247:3:11"},"nodeType":"YulFunctionCall","src":"10247:9:11"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"10240:3:11"}]},{"body":{"nodeType":"YulBlock","src":"10279:22:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"10281:16:11"},"nodeType":"YulFunctionCall","src":"10281:18:11"},"nodeType":"YulExpressionStatement","src":"10281:18:11"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"10271:1:11"},{"name":"sum","nodeType":"YulIdentifier","src":"10274:3:11"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10268:2:11"},"nodeType":"YulFunctionCall","src":"10268:10:11"},"nodeType":"YulIf","src":"10265:36:11"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"10213:1:11","type":""},{"name":"y","nodeType":"YulTypedName","src":"10216:1:11","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"10222:3:11","type":""}],"src":"10182:125:11"},{"body":{"nodeType":"YulBlock","src":"10355:47:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10372:3:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10381:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"10388:6:11","type":"","value":"0xffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10377:3:11"},"nodeType":"YulFunctionCall","src":"10377:18:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10365:6:11"},"nodeType":"YulFunctionCall","src":"10365:31:11"},"nodeType":"YulExpressionStatement","src":"10365:31:11"}]},"name":"abi_encode_uint16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10339:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"10346:3:11","type":""}],"src":"10312:90:11"},{"body":{"nodeType":"YulBlock","src":"10450:51:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10467:3:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10476:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"10483:10:11","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10472:3:11"},"nodeType":"YulFunctionCall","src":"10472:22:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10460:6:11"},"nodeType":"YulFunctionCall","src":"10460:35:11"},"nodeType":"YulExpressionStatement","src":"10460:35:11"}]},"name":"abi_encode_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10434:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"10441:3:11","type":""}],"src":"10407:94:11"},{"body":{"nodeType":"YulBlock","src":"10572:184:11","statements":[{"nodeType":"YulVariableDeclaration","src":"10582:10:11","value":{"kind":"number","nodeType":"YulLiteral","src":"10591:1:11","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"10586:1:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"10651:63:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"10676:3:11"},{"name":"i","nodeType":"YulIdentifier","src":"10681:1:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10672:3:11"},"nodeType":"YulFunctionCall","src":"10672:11:11"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"10695:3:11"},{"name":"i","nodeType":"YulIdentifier","src":"10700:1:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10691:3:11"},"nodeType":"YulFunctionCall","src":"10691:11:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10685:5:11"},"nodeType":"YulFunctionCall","src":"10685:18:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10665:6:11"},"nodeType":"YulFunctionCall","src":"10665:39:11"},"nodeType":"YulExpressionStatement","src":"10665:39:11"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"10612:1:11"},{"name":"length","nodeType":"YulIdentifier","src":"10615:6:11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"10609:2:11"},"nodeType":"YulFunctionCall","src":"10609:13:11"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"10623:19:11","statements":[{"nodeType":"YulAssignment","src":"10625:15:11","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"10634:1:11"},{"kind":"number","nodeType":"YulLiteral","src":"10637:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10630:3:11"},"nodeType":"YulFunctionCall","src":"10630:10:11"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"10625:1:11"}]}]},"pre":{"nodeType":"YulBlock","src":"10605:3:11","statements":[]},"src":"10601:113:11"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"10734:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"10739:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10730:3:11"},"nodeType":"YulFunctionCall","src":"10730:16:11"},{"kind":"number","nodeType":"YulLiteral","src":"10748:1:11","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10723:6:11"},"nodeType":"YulFunctionCall","src":"10723:27:11"},"nodeType":"YulExpressionStatement","src":"10723:27:11"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"10550:3:11","type":""},{"name":"dst","nodeType":"YulTypedName","src":"10555:3:11","type":""},{"name":"length","nodeType":"YulTypedName","src":"10560:6:11","type":""}],"src":"10506:250:11"},{"body":{"nodeType":"YulBlock","src":"10810:221:11","statements":[{"nodeType":"YulVariableDeclaration","src":"10820:26:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10840:5:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10834:5:11"},"nodeType":"YulFunctionCall","src":"10834:12:11"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"10824:6:11","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10862:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"10867:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10855:6:11"},"nodeType":"YulFunctionCall","src":"10855:19:11"},"nodeType":"YulExpressionStatement","src":"10855:19:11"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10922:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"10929:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10918:3:11"},"nodeType":"YulFunctionCall","src":"10918:16:11"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10940:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"10945:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10936:3:11"},"nodeType":"YulFunctionCall","src":"10936:14:11"},{"name":"length","nodeType":"YulIdentifier","src":"10952:6:11"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"10883:34:11"},"nodeType":"YulFunctionCall","src":"10883:76:11"},"nodeType":"YulExpressionStatement","src":"10883:76:11"},{"nodeType":"YulAssignment","src":"10968:57:11","value":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10983:3:11"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"10996:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"11004:2:11","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10992:3:11"},"nodeType":"YulFunctionCall","src":"10992:15:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11013:2:11","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"11009:3:11"},"nodeType":"YulFunctionCall","src":"11009:7:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10988:3:11"},"nodeType":"YulFunctionCall","src":"10988:29:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10979:3:11"},"nodeType":"YulFunctionCall","src":"10979:39:11"},{"kind":"number","nodeType":"YulLiteral","src":"11020:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10975:3:11"},"nodeType":"YulFunctionCall","src":"10975:50:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10968:3:11"}]}]},"name":"abi_encode_bytes","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10787:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"10794:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"10802:3:11","type":""}],"src":"10761:270:11"},{"body":{"nodeType":"YulBlock","src":"11241:1845:11","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11258:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"11269:2:11","type":"","value":"64"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11251:6:11"},"nodeType":"YulFunctionCall","src":"11251:21:11"},"nodeType":"YulExpressionStatement","src":"11251:21:11"},{"expression":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11305:6:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11299:5:11"},"nodeType":"YulFunctionCall","src":"11299:13:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11318:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"11329:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11314:3:11"},"nodeType":"YulFunctionCall","src":"11314:18:11"}],"functionName":{"name":"abi_encode_uint24","nodeType":"YulIdentifier","src":"11281:17:11"},"nodeType":"YulFunctionCall","src":"11281:52:11"},"nodeType":"YulExpressionStatement","src":"11281:52:11"},{"nodeType":"YulVariableDeclaration","src":"11342:44:11","value":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11372:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"11380:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11368:3:11"},"nodeType":"YulFunctionCall","src":"11368:17:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11362:5:11"},"nodeType":"YulFunctionCall","src":"11362:24:11"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"11346:12:11","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"11413:12:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11431:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"11442:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11427:3:11"},"nodeType":"YulFunctionCall","src":"11427:18:11"}],"functionName":{"name":"abi_encode_int128","nodeType":"YulIdentifier","src":"11395:17:11"},"nodeType":"YulFunctionCall","src":"11395:51:11"},"nodeType":"YulExpressionStatement","src":"11395:51:11"},{"nodeType":"YulVariableDeclaration","src":"11455:44:11","value":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11487:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"11495:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11483:3:11"},"nodeType":"YulFunctionCall","src":"11483:15:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11477:5:11"},"nodeType":"YulFunctionCall","src":"11477:22:11"},"variables":[{"name":"memberValue0_1","nodeType":"YulTypedName","src":"11459:14:11","type":""}]},{"expression":{"arguments":[{"name":"memberValue0_1","nodeType":"YulIdentifier","src":"11526:14:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11546:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"11557:3:11","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11542:3:11"},"nodeType":"YulFunctionCall","src":"11542:19:11"}],"functionName":{"name":"abi_encode_uint16","nodeType":"YulIdentifier","src":"11508:17:11"},"nodeType":"YulFunctionCall","src":"11508:54:11"},"nodeType":"YulExpressionStatement","src":"11508:54:11"},{"nodeType":"YulVariableDeclaration","src":"11571:44:11","value":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11603:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"11611:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11599:3:11"},"nodeType":"YulFunctionCall","src":"11599:15:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11593:5:11"},"nodeType":"YulFunctionCall","src":"11593:22:11"},"variables":[{"name":"memberValue0_2","nodeType":"YulTypedName","src":"11575:14:11","type":""}]},{"expression":{"arguments":[{"name":"memberValue0_2","nodeType":"YulIdentifier","src":"11642:14:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11662:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"11673:3:11","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11658:3:11"},"nodeType":"YulFunctionCall","src":"11658:19:11"}],"functionName":{"name":"abi_encode_uint32","nodeType":"YulIdentifier","src":"11624:17:11"},"nodeType":"YulFunctionCall","src":"11624:54:11"},"nodeType":"YulExpressionStatement","src":"11624:54:11"},{"nodeType":"YulVariableDeclaration","src":"11687:45:11","value":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11719:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"11727:3:11","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11715:3:11"},"nodeType":"YulFunctionCall","src":"11715:16:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11709:5:11"},"nodeType":"YulFunctionCall","src":"11709:23:11"},"variables":[{"name":"memberValue0_3","nodeType":"YulTypedName","src":"11691:14:11","type":""}]},{"expression":{"arguments":[{"name":"memberValue0_3","nodeType":"YulIdentifier","src":"11759:14:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11779:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"11790:3:11","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11775:3:11"},"nodeType":"YulFunctionCall","src":"11775:19:11"}],"functionName":{"name":"abi_encode_uint32","nodeType":"YulIdentifier","src":"11741:17:11"},"nodeType":"YulFunctionCall","src":"11741:54:11"},"nodeType":"YulExpressionStatement","src":"11741:54:11"},{"nodeType":"YulVariableDeclaration","src":"11804:45:11","value":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11836:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"11844:3:11","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11832:3:11"},"nodeType":"YulFunctionCall","src":"11832:16:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11826:5:11"},"nodeType":"YulFunctionCall","src":"11826:23:11"},"variables":[{"name":"memberValue0_4","nodeType":"YulTypedName","src":"11808:14:11","type":""}]},{"expression":{"arguments":[{"name":"memberValue0_4","nodeType":"YulIdentifier","src":"11876:14:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11896:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"11907:3:11","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11892:3:11"},"nodeType":"YulFunctionCall","src":"11892:19:11"}],"functionName":{"name":"abi_encode_uint32","nodeType":"YulIdentifier","src":"11858:17:11"},"nodeType":"YulFunctionCall","src":"11858:54:11"},"nodeType":"YulExpressionStatement","src":"11858:54:11"},{"nodeType":"YulVariableDeclaration","src":"11921:45:11","value":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11953:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"11961:3:11","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11949:3:11"},"nodeType":"YulFunctionCall","src":"11949:16:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11943:5:11"},"nodeType":"YulFunctionCall","src":"11943:23:11"},"variables":[{"name":"memberValue0_5","nodeType":"YulTypedName","src":"11925:14:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"11975:13:11","value":{"kind":"number","nodeType":"YulLiteral","src":"11985:3:11","type":"","value":"256"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"11979:2:11","type":""}]},{"expression":{"arguments":[{"name":"memberValue0_5","nodeType":"YulIdentifier","src":"12016:14:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12036:9:11"},{"name":"_1","nodeType":"YulIdentifier","src":"12047:2:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12032:3:11"},"nodeType":"YulFunctionCall","src":"12032:18:11"}],"functionName":{"name":"abi_encode_address","nodeType":"YulIdentifier","src":"11997:18:11"},"nodeType":"YulFunctionCall","src":"11997:54:11"},"nodeType":"YulExpressionStatement","src":"11997:54:11"},{"nodeType":"YulVariableDeclaration","src":"12060:45:11","value":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12092:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"12100:3:11","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12088:3:11"},"nodeType":"YulFunctionCall","src":"12088:16:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12082:5:11"},"nodeType":"YulFunctionCall","src":"12082:23:11"},"variables":[{"name":"memberValue0_6","nodeType":"YulTypedName","src":"12064:14:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"12114:13:11","value":{"kind":"number","nodeType":"YulLiteral","src":"12124:3:11","type":"","value":"288"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"12118:2:11","type":""}]},{"expression":{"arguments":[{"name":"memberValue0_6","nodeType":"YulIdentifier","src":"12154:14:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12174:9:11"},{"name":"_2","nodeType":"YulIdentifier","src":"12185:2:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12170:3:11"},"nodeType":"YulFunctionCall","src":"12170:18:11"}],"functionName":{"name":"abi_encode_int128","nodeType":"YulIdentifier","src":"12136:17:11"},"nodeType":"YulFunctionCall","src":"12136:53:11"},"nodeType":"YulExpressionStatement","src":"12136:53:11"},{"nodeType":"YulVariableDeclaration","src":"12198:44:11","value":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12230:6:11"},{"name":"_1","nodeType":"YulIdentifier","src":"12238:2:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12226:3:11"},"nodeType":"YulFunctionCall","src":"12226:15:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12220:5:11"},"nodeType":"YulFunctionCall","src":"12220:22:11"},"variables":[{"name":"memberValue0_7","nodeType":"YulTypedName","src":"12202:14:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"12251:13:11","value":{"kind":"number","nodeType":"YulLiteral","src":"12261:3:11","type":"","value":"320"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"12255:2:11","type":""}]},{"expression":{"arguments":[{"name":"memberValue0_7","nodeType":"YulIdentifier","src":"12291:14:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12311:9:11"},{"name":"_3","nodeType":"YulIdentifier","src":"12322:2:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12307:3:11"},"nodeType":"YulFunctionCall","src":"12307:18:11"}],"functionName":{"name":"abi_encode_int128","nodeType":"YulIdentifier","src":"12273:17:11"},"nodeType":"YulFunctionCall","src":"12273:53:11"},"nodeType":"YulExpressionStatement","src":"12273:53:11"},{"nodeType":"YulVariableDeclaration","src":"12335:32:11","value":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12355:6:11"},{"name":"_2","nodeType":"YulIdentifier","src":"12363:2:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12351:3:11"},"nodeType":"YulFunctionCall","src":"12351:15:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12345:5:11"},"nodeType":"YulFunctionCall","src":"12345:22:11"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"12339:2:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"12376:13:11","value":{"kind":"number","nodeType":"YulLiteral","src":"12386:3:11","type":"","value":"352"},"variables":[{"name":"_5","nodeType":"YulTypedName","src":"12380:2:11","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12409:9:11"},{"name":"_5","nodeType":"YulIdentifier","src":"12420:2:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12405:3:11"},"nodeType":"YulFunctionCall","src":"12405:18:11"},{"name":"_4","nodeType":"YulIdentifier","src":"12425:2:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12398:6:11"},"nodeType":"YulFunctionCall","src":"12398:30:11"},"nodeType":"YulExpressionStatement","src":"12398:30:11"},{"nodeType":"YulVariableDeclaration","src":"12437:44:11","value":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12469:6:11"},{"name":"_3","nodeType":"YulIdentifier","src":"12477:2:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12465:3:11"},"nodeType":"YulFunctionCall","src":"12465:15:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12459:5:11"},"nodeType":"YulFunctionCall","src":"12459:22:11"},"variables":[{"name":"memberValue0_8","nodeType":"YulTypedName","src":"12441:14:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"12490:13:11","value":{"kind":"number","nodeType":"YulLiteral","src":"12500:3:11","type":"","value":"384"},"variables":[{"name":"_6","nodeType":"YulTypedName","src":"12494:2:11","type":""}]},{"expression":{"arguments":[{"name":"memberValue0_8","nodeType":"YulIdentifier","src":"12531:14:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12551:9:11"},{"name":"_6","nodeType":"YulIdentifier","src":"12562:2:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12547:3:11"},"nodeType":"YulFunctionCall","src":"12547:18:11"}],"functionName":{"name":"abi_encode_address","nodeType":"YulIdentifier","src":"12512:18:11"},"nodeType":"YulFunctionCall","src":"12512:54:11"},"nodeType":"YulExpressionStatement","src":"12512:54:11"},{"nodeType":"YulVariableDeclaration","src":"12575:32:11","value":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12595:6:11"},{"name":"_5","nodeType":"YulIdentifier","src":"12603:2:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12591:3:11"},"nodeType":"YulFunctionCall","src":"12591:15:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12585:5:11"},"nodeType":"YulFunctionCall","src":"12585:22:11"},"variables":[{"name":"_7","nodeType":"YulTypedName","src":"12579:2:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"12616:13:11","value":{"kind":"number","nodeType":"YulLiteral","src":"12626:3:11","type":"","value":"416"},"variables":[{"name":"_8","nodeType":"YulTypedName","src":"12620:2:11","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12649:9:11"},{"name":"_8","nodeType":"YulIdentifier","src":"12660:2:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12645:3:11"},"nodeType":"YulFunctionCall","src":"12645:18:11"},{"name":"_7","nodeType":"YulIdentifier","src":"12665:2:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12638:6:11"},"nodeType":"YulFunctionCall","src":"12638:30:11"},"nodeType":"YulExpressionStatement","src":"12638:30:11"},{"nodeType":"YulVariableDeclaration","src":"12677:44:11","value":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12709:6:11"},{"name":"_6","nodeType":"YulIdentifier","src":"12717:2:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12705:3:11"},"nodeType":"YulFunctionCall","src":"12705:15:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12699:5:11"},"nodeType":"YulFunctionCall","src":"12699:22:11"},"variables":[{"name":"memberValue0_9","nodeType":"YulTypedName","src":"12681:14:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"12730:16:11","value":{"kind":"number","nodeType":"YulLiteral","src":"12740:6:11","type":"","value":"0x01c0"},"variables":[{"name":"_9","nodeType":"YulTypedName","src":"12734:2:11","type":""}]},{"expression":{"arguments":[{"name":"memberValue0_9","nodeType":"YulIdentifier","src":"12773:14:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12793:9:11"},{"name":"_9","nodeType":"YulIdentifier","src":"12804:2:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12789:3:11"},"nodeType":"YulFunctionCall","src":"12789:18:11"}],"functionName":{"name":"abi_encode_uint16","nodeType":"YulIdentifier","src":"12755:17:11"},"nodeType":"YulFunctionCall","src":"12755:53:11"},"nodeType":"YulExpressionStatement","src":"12755:53:11"},{"nodeType":"YulVariableDeclaration","src":"12817:45:11","value":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12850:6:11"},{"name":"_8","nodeType":"YulIdentifier","src":"12858:2:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12846:3:11"},"nodeType":"YulFunctionCall","src":"12846:15:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12840:5:11"},"nodeType":"YulFunctionCall","src":"12840:22:11"},"variables":[{"name":"memberValue0_10","nodeType":"YulTypedName","src":"12821:15:11","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12882:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"12893:3:11","type":"","value":"480"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12878:3:11"},"nodeType":"YulFunctionCall","src":"12878:19:11"},{"name":"_9","nodeType":"YulIdentifier","src":"12899:2:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12871:6:11"},"nodeType":"YulFunctionCall","src":"12871:31:11"},"nodeType":"YulExpressionStatement","src":"12871:31:11"},{"nodeType":"YulVariableDeclaration","src":"12911:65:11","value":{"arguments":[{"name":"memberValue0_10","nodeType":"YulIdentifier","src":"12939:15:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12960:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"12971:3:11","type":"","value":"512"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12956:3:11"},"nodeType":"YulFunctionCall","src":"12956:19:11"}],"functionName":{"name":"abi_encode_bytes","nodeType":"YulIdentifier","src":"12922:16:11"},"nodeType":"YulFunctionCall","src":"12922:54:11"},"variables":[{"name":"end","nodeType":"YulTypedName","src":"12915:3:11","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12996:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"13007:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12992:3:11"},"nodeType":"YulFunctionCall","src":"12992:20:11"},{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"13018:3:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"13023:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13014:3:11"},"nodeType":"YulFunctionCall","src":"13014:19:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12985:6:11"},"nodeType":"YulFunctionCall","src":"12985:49:11"},"nodeType":"YulExpressionStatement","src":"12985:49:11"},{"nodeType":"YulAssignment","src":"13043:37:11","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"13068:6:11"},{"name":"end","nodeType":"YulIdentifier","src":"13076:3:11"}],"functionName":{"name":"abi_encode_bytes","nodeType":"YulIdentifier","src":"13051:16:11"},"nodeType":"YulFunctionCall","src":"13051:29:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13043:4:11"}]}]},"name":"abi_encode_tuple_t_struct$_ClientOrder_$1394_memory_ptr_t_bytes_memory_ptr__to_t_struct$_ClientOrder_$1394_memory_ptr_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11202:9:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11213:6:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11221:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11232:4:11","type":""}],"src":"11036:2050:11"},{"body":{"nodeType":"YulBlock","src":"13134:136:11","statements":[{"body":{"nodeType":"YulBlock","src":"13179:85:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13208:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13211:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13214:1:11","type":"","value":"4"}],"functionName":{"name":"returndatacopy","nodeType":"YulIdentifier","src":"13193:14:11"},"nodeType":"YulFunctionCall","src":"13193:23:11"},"nodeType":"YulExpressionStatement","src":"13193:23:11"},{"nodeType":"YulAssignment","src":"13229:25:11","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13240:3:11","type":"","value":"224"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13251:1:11","type":"","value":"0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13245:5:11"},"nodeType":"YulFunctionCall","src":"13245:8:11"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"13236:3:11"},"nodeType":"YulFunctionCall","src":"13236:18:11"},"variableNames":[{"name":"sig","nodeType":"YulIdentifier","src":"13229:3:11"}]}]},"condition":{"arguments":[{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"13150:14:11"},"nodeType":"YulFunctionCall","src":"13150:16:11"},{"kind":"number","nodeType":"YulLiteral","src":"13168:1:11","type":"","value":"3"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"13147:2:11"},"nodeType":"YulFunctionCall","src":"13147:23:11"},"nodeType":"YulIf","src":"13144:120:11"}]},"name":"return_data_selector","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"sig","nodeType":"YulTypedName","src":"13126:3:11","type":""}],"src":"13091:179:11"},{"body":{"nodeType":"YulBlock","src":"13322:624:11","statements":[{"body":{"nodeType":"YulBlock","src":"13362:9:11","statements":[{"nodeType":"YulLeave","src":"13364:5:11"}]},"condition":{"arguments":[{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"13338:14:11"},"nodeType":"YulFunctionCall","src":"13338:16:11"},{"kind":"number","nodeType":"YulLiteral","src":"13356:4:11","type":"","value":"0x44"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"13335:2:11"},"nodeType":"YulFunctionCall","src":"13335:26:11"},"nodeType":"YulIf","src":"13332:39:11"},{"nodeType":"YulVariableDeclaration","src":"13380:21:11","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13398:2:11","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13392:5:11"},"nodeType":"YulFunctionCall","src":"13392:9:11"},"variables":[{"name":"data","nodeType":"YulTypedName","src":"13384:4:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"13410:16:11","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13424:1:11","type":"","value":"3"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"13420:3:11"},"nodeType":"YulFunctionCall","src":"13420:6:11"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"13414:2:11","type":""}]},{"expression":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"13450:4:11"},{"kind":"number","nodeType":"YulLiteral","src":"13456:1:11","type":"","value":"4"},{"arguments":[{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"13463:14:11"},"nodeType":"YulFunctionCall","src":"13463:16:11"},{"name":"_1","nodeType":"YulIdentifier","src":"13481:2:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13459:3:11"},"nodeType":"YulFunctionCall","src":"13459:25:11"}],"functionName":{"name":"returndatacopy","nodeType":"YulIdentifier","src":"13435:14:11"},"nodeType":"YulFunctionCall","src":"13435:50:11"},"nodeType":"YulExpressionStatement","src":"13435:50:11"},{"nodeType":"YulVariableDeclaration","src":"13494:25:11","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"13514:4:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13508:5:11"},"nodeType":"YulFunctionCall","src":"13508:11:11"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"13498:6:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"13528:26:11","value":{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"13538:14:11"},"nodeType":"YulFunctionCall","src":"13538:16:11"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"13532:2:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"13563:28:11","value":{"kind":"number","nodeType":"YulLiteral","src":"13573:18:11","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"13567:2:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"13649:9:11","statements":[{"nodeType":"YulLeave","src":"13651:5:11"}]},"condition":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"13609:6:11"},{"name":"_3","nodeType":"YulIdentifier","src":"13617:2:11"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"13606:2:11"},"nodeType":"YulFunctionCall","src":"13606:14:11"},{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"13629:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"13637:4:11","type":"","value":"0x24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13625:3:11"},"nodeType":"YulFunctionCall","src":"13625:17:11"},{"name":"_2","nodeType":"YulIdentifier","src":"13644:2:11"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"13622:2:11"},"nodeType":"YulFunctionCall","src":"13622:25:11"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"13603:2:11"},"nodeType":"YulFunctionCall","src":"13603:45:11"},"nodeType":"YulIf","src":"13600:58:11"},{"nodeType":"YulVariableDeclaration","src":"13667:28:11","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"13682:4:11"},{"name":"offset","nodeType":"YulIdentifier","src":"13688:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13678:3:11"},"nodeType":"YulFunctionCall","src":"13678:17:11"},"variables":[{"name":"msg","nodeType":"YulTypedName","src":"13671:3:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"13704:24:11","value":{"arguments":[{"name":"msg","nodeType":"YulIdentifier","src":"13724:3:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13718:5:11"},"nodeType":"YulFunctionCall","src":"13718:10:11"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"13708:6:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"13755:9:11","statements":[{"nodeType":"YulLeave","src":"13757:5:11"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"13743:6:11"},{"name":"_3","nodeType":"YulIdentifier","src":"13751:2:11"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"13740:2:11"},"nodeType":"YulFunctionCall","src":"13740:14:11"},"nodeType":"YulIf","src":"13737:27:11"},{"body":{"nodeType":"YulBlock","src":"13846:9:11","statements":[{"nodeType":"YulLeave","src":"13848:5:11"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"msg","nodeType":"YulIdentifier","src":"13787:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"13792:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13783:3:11"},"nodeType":"YulFunctionCall","src":"13783:16:11"},{"kind":"number","nodeType":"YulLiteral","src":"13801:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13779:3:11"},"nodeType":"YulFunctionCall","src":"13779:27:11"},{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"13816:4:11"},{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"13822:14:11"},"nodeType":"YulFunctionCall","src":"13822:16:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13812:3:11"},"nodeType":"YulFunctionCall","src":"13812:27:11"},{"name":"_1","nodeType":"YulIdentifier","src":"13841:2:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13808:3:11"},"nodeType":"YulFunctionCall","src":"13808:36:11"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"13776:2:11"},"nodeType":"YulFunctionCall","src":"13776:69:11"},"nodeType":"YulIf","src":"13773:82:11"},{"expression":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"13884:4:11"},{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"13898:6:11"},{"name":"length","nodeType":"YulIdentifier","src":"13906:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13894:3:11"},"nodeType":"YulFunctionCall","src":"13894:19:11"},{"kind":"number","nodeType":"YulLiteral","src":"13915:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13890:3:11"},"nodeType":"YulFunctionCall","src":"13890:30:11"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"13864:19:11"},"nodeType":"YulFunctionCall","src":"13864:57:11"},"nodeType":"YulExpressionStatement","src":"13864:57:11"},{"nodeType":"YulAssignment","src":"13930:10:11","value":{"name":"msg","nodeType":"YulIdentifier","src":"13937:3:11"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"13930:3:11"}]}]},"name":"try_decode_error_message","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"13314:3:11","type":""}],"src":"13275:671:11"},{"body":{"nodeType":"YulBlock","src":"14072:98:11","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14089:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"14100:2:11","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14082:6:11"},"nodeType":"YulFunctionCall","src":"14082:21:11"},"nodeType":"YulExpressionStatement","src":"14082:21:11"},{"nodeType":"YulAssignment","src":"14112:52:11","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"14137:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14149:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"14160:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14145:3:11"},"nodeType":"YulFunctionCall","src":"14145:18:11"}],"functionName":{"name":"abi_encode_bytes","nodeType":"YulIdentifier","src":"14120:16:11"},"nodeType":"YulFunctionCall","src":"14120:44:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14112:4:11"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14041:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"14052:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14063:4:11","type":""}],"src":"13951:219:11"},{"body":{"nodeType":"YulBlock","src":"14300:132:11","statements":[{"nodeType":"YulAssignment","src":"14310:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14322:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"14333:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14318:3:11"},"nodeType":"YulFunctionCall","src":"14318:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14310:4:11"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14352:9:11"},{"name":"value0","nodeType":"YulIdentifier","src":"14363:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14345:6:11"},"nodeType":"YulFunctionCall","src":"14345:25:11"},"nodeType":"YulExpressionStatement","src":"14345:25:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14390:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"14401:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14386:3:11"},"nodeType":"YulFunctionCall","src":"14386:18:11"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"14410:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"14418:6:11","type":"","value":"0xffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"14406:3:11"},"nodeType":"YulFunctionCall","src":"14406:19:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14379:6:11"},"nodeType":"YulFunctionCall","src":"14379:47:11"},"nodeType":"YulExpressionStatement","src":"14379:47:11"}]},"name":"abi_encode_tuple_t_int256_t_uint16__to_t_int256_t_uint16__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14261:9:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"14272:6:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"14280:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14291:4:11","type":""}],"src":"14175:257:11"},{"body":{"nodeType":"YulBlock","src":"14536:91:11","statements":[{"nodeType":"YulAssignment","src":"14546:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14558:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"14569:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14554:3:11"},"nodeType":"YulFunctionCall","src":"14554:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14546:4:11"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14588:9:11"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"14603:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"14611:8:11","type":"","value":"0xffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"14599:3:11"},"nodeType":"YulFunctionCall","src":"14599:21:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14581:6:11"},"nodeType":"YulFunctionCall","src":"14581:40:11"},"nodeType":"YulExpressionStatement","src":"14581:40:11"}]},"name":"abi_encode_tuple_t_uint24__to_t_uint24__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14505:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"14516:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14527:4:11","type":""}],"src":"14437:190:11"},{"body":{"nodeType":"YulBlock","src":"14692:78:11","statements":[{"nodeType":"YulAssignment","src":"14702:22:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"14717:6:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14711:5:11"},"nodeType":"YulFunctionCall","src":"14711:13:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"14702:5:11"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14758:5:11"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"14733:24:11"},"nodeType":"YulFunctionCall","src":"14733:31:11"},"nodeType":"YulExpressionStatement","src":"14733:31:11"}]},"name":"abi_decode_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"14671:6:11","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"14682:5:11","type":""}],"src":"14632:138:11"},{"body":{"nodeType":"YulBlock","src":"14856:170:11","statements":[{"body":{"nodeType":"YulBlock","src":"14902:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14911:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14914:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14904:6:11"},"nodeType":"YulFunctionCall","src":"14904:12:11"},"nodeType":"YulExpressionStatement","src":"14904:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"14877:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"14886:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14873:3:11"},"nodeType":"YulFunctionCall","src":"14873:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"14898:2:11","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"14869:3:11"},"nodeType":"YulFunctionCall","src":"14869:32:11"},"nodeType":"YulIf","src":"14866:52:11"},{"nodeType":"YulVariableDeclaration","src":"14927:29:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14946:9:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14940:5:11"},"nodeType":"YulFunctionCall","src":"14940:16:11"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"14931:5:11","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14990:5:11"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"14965:24:11"},"nodeType":"YulFunctionCall","src":"14965:31:11"},"nodeType":"YulExpressionStatement","src":"14965:31:11"},{"nodeType":"YulAssignment","src":"15005:15:11","value":{"name":"value","nodeType":"YulIdentifier","src":"15015:5:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"15005:6:11"}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14822:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"14833:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"14845:6:11","type":""}],"src":"14775:251:11"},{"body":{"nodeType":"YulBlock","src":"15128:87:11","statements":[{"nodeType":"YulAssignment","src":"15138:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15150:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"15161:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15146:3:11"},"nodeType":"YulFunctionCall","src":"15146:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15138:4:11"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15180:9:11"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"15195:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"15203:4:11","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"15191:3:11"},"nodeType":"YulFunctionCall","src":"15191:17:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15173:6:11"},"nodeType":"YulFunctionCall","src":"15173:36:11"},"nodeType":"YulExpressionStatement","src":"15173:36:11"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15097:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"15108:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15119:4:11","type":""}],"src":"15031:184:11"},{"body":{"nodeType":"YulBlock","src":"15278:76:11","statements":[{"nodeType":"YulAssignment","src":"15288:22:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"15303:6:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15297:5:11"},"nodeType":"YulFunctionCall","src":"15297:13:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"15288:5:11"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15342:5:11"}],"functionName":{"name":"validator_revert_uint8","nodeType":"YulIdentifier","src":"15319:22:11"},"nodeType":"YulFunctionCall","src":"15319:29:11"},"nodeType":"YulExpressionStatement","src":"15319:29:11"}]},"name":"abi_decode_uint8_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"15257:6:11","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"15268:5:11","type":""}],"src":"15220:134:11"},{"body":{"nodeType":"YulBlock","src":"15417:106:11","statements":[{"nodeType":"YulAssignment","src":"15427:22:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"15442:6:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15436:5:11"},"nodeType":"YulFunctionCall","src":"15436:13:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"15427:5:11"}]},{"body":{"nodeType":"YulBlock","src":"15501:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15510:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15513:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"15503:6:11"},"nodeType":"YulFunctionCall","src":"15503:12:11"},"nodeType":"YulExpressionStatement","src":"15503:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15471:5:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15489:1:11","type":"","value":"3"},{"name":"value","nodeType":"YulIdentifier","src":"15492:5:11"}],"functionName":{"name":"signextend","nodeType":"YulIdentifier","src":"15478:10:11"},"nodeType":"YulFunctionCall","src":"15478:20:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"15468:2:11"},"nodeType":"YulFunctionCall","src":"15468:31:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"15461:6:11"},"nodeType":"YulFunctionCall","src":"15461:39:11"},"nodeType":"YulIf","src":"15458:59:11"}]},"name":"abi_decode_int32_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"15396:6:11","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"15407:5:11","type":""}],"src":"15359:164:11"},{"body":{"nodeType":"YulBlock","src":"15588:132:11","statements":[{"nodeType":"YulAssignment","src":"15598:22:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"15613:6:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15607:5:11"},"nodeType":"YulFunctionCall","src":"15607:13:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"15598:5:11"}]},{"body":{"nodeType":"YulBlock","src":"15698:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15707:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15710:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"15700:6:11"},"nodeType":"YulFunctionCall","src":"15700:12:11"},"nodeType":"YulExpressionStatement","src":"15700:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15642:5:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15653:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"15660:34:11","type":"","value":"0xffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"15649:3:11"},"nodeType":"YulFunctionCall","src":"15649:46:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"15639:2:11"},"nodeType":"YulFunctionCall","src":"15639:57:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"15632:6:11"},"nodeType":"YulFunctionCall","src":"15632:65:11"},"nodeType":"YulIf","src":"15629:85:11"}]},"name":"abi_decode_uint128_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"15567:6:11","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"15578:5:11","type":""}],"src":"15528:192:11"},{"body":{"nodeType":"YulBlock","src":"15841:1908:11","statements":[{"body":{"nodeType":"YulBlock","src":"15888:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15897:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15900:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"15890:6:11"},"nodeType":"YulFunctionCall","src":"15890:12:11"},"nodeType":"YulExpressionStatement","src":"15890:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"15862:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"15871:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15858:3:11"},"nodeType":"YulFunctionCall","src":"15858:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"15883:3:11","type":"","value":"608"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"15854:3:11"},"nodeType":"YulFunctionCall","src":"15854:33:11"},"nodeType":"YulIf","src":"15851:53:11"},{"nodeType":"YulVariableDeclaration","src":"15913:30:11","value":{"arguments":[],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"15926:15:11"},"nodeType":"YulFunctionCall","src":"15926:17:11"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"15917:5:11","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15959:5:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15993:9:11"}],"functionName":{"name":"abi_decode_bool_fromMemory","nodeType":"YulIdentifier","src":"15966:26:11"},"nodeType":"YulFunctionCall","src":"15966:37:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15952:6:11"},"nodeType":"YulFunctionCall","src":"15952:52:11"},"nodeType":"YulExpressionStatement","src":"15952:52:11"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16024:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"16031:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16020:3:11"},"nodeType":"YulFunctionCall","src":"16020:14:11"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16068:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"16079:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16064:3:11"},"nodeType":"YulFunctionCall","src":"16064:18:11"}],"functionName":{"name":"abi_decode_uint8_fromMemory","nodeType":"YulIdentifier","src":"16036:27:11"},"nodeType":"YulFunctionCall","src":"16036:47:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16013:6:11"},"nodeType":"YulFunctionCall","src":"16013:71:11"},"nodeType":"YulExpressionStatement","src":"16013:71:11"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16104:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"16111:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16100:3:11"},"nodeType":"YulFunctionCall","src":"16100:14:11"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16148:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"16159:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16144:3:11"},"nodeType":"YulFunctionCall","src":"16144:18:11"}],"functionName":{"name":"abi_decode_uint8_fromMemory","nodeType":"YulIdentifier","src":"16116:27:11"},"nodeType":"YulFunctionCall","src":"16116:47:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16093:6:11"},"nodeType":"YulFunctionCall","src":"16093:71:11"},"nodeType":"YulExpressionStatement","src":"16093:71:11"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16184:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"16191:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16180:3:11"},"nodeType":"YulFunctionCall","src":"16180:14:11"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16228:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"16239:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16224:3:11"},"nodeType":"YulFunctionCall","src":"16224:18:11"}],"functionName":{"name":"abi_decode_int32_fromMemory","nodeType":"YulIdentifier","src":"16196:27:11"},"nodeType":"YulFunctionCall","src":"16196:47:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16173:6:11"},"nodeType":"YulFunctionCall","src":"16173:71:11"},"nodeType":"YulExpressionStatement","src":"16173:71:11"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16264:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"16271:3:11","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16260:3:11"},"nodeType":"YulFunctionCall","src":"16260:15:11"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16309:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"16320:3:11","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16305:3:11"},"nodeType":"YulFunctionCall","src":"16305:19:11"}],"functionName":{"name":"abi_decode_uint8_fromMemory","nodeType":"YulIdentifier","src":"16277:27:11"},"nodeType":"YulFunctionCall","src":"16277:48:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16253:6:11"},"nodeType":"YulFunctionCall","src":"16253:73:11"},"nodeType":"YulExpressionStatement","src":"16253:73:11"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16346:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"16353:3:11","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16342:3:11"},"nodeType":"YulFunctionCall","src":"16342:15:11"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16392:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"16403:3:11","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16388:3:11"},"nodeType":"YulFunctionCall","src":"16388:19:11"}],"functionName":{"name":"abi_decode_uint16_fromMemory","nodeType":"YulIdentifier","src":"16359:28:11"},"nodeType":"YulFunctionCall","src":"16359:49:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16335:6:11"},"nodeType":"YulFunctionCall","src":"16335:74:11"},"nodeType":"YulExpressionStatement","src":"16335:74:11"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16429:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"16436:3:11","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16425:3:11"},"nodeType":"YulFunctionCall","src":"16425:15:11"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16476:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"16487:3:11","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16472:3:11"},"nodeType":"YulFunctionCall","src":"16472:19:11"}],"functionName":{"name":"abi_decode_address_fromMemory","nodeType":"YulIdentifier","src":"16442:29:11"},"nodeType":"YulFunctionCall","src":"16442:50:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16418:6:11"},"nodeType":"YulFunctionCall","src":"16418:75:11"},"nodeType":"YulExpressionStatement","src":"16418:75:11"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16513:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"16520:3:11","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16509:3:11"},"nodeType":"YulFunctionCall","src":"16509:15:11"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16559:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"16570:3:11","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16555:3:11"},"nodeType":"YulFunctionCall","src":"16555:19:11"}],"functionName":{"name":"abi_decode_uint64_fromMemory","nodeType":"YulIdentifier","src":"16526:28:11"},"nodeType":"YulFunctionCall","src":"16526:49:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16502:6:11"},"nodeType":"YulFunctionCall","src":"16502:74:11"},"nodeType":"YulExpressionStatement","src":"16502:74:11"},{"nodeType":"YulVariableDeclaration","src":"16585:13:11","value":{"kind":"number","nodeType":"YulLiteral","src":"16595:3:11","type":"","value":"256"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"16589:2:11","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16618:5:11"},{"name":"_1","nodeType":"YulIdentifier","src":"16625:2:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16614:3:11"},"nodeType":"YulFunctionCall","src":"16614:14:11"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16663:9:11"},{"name":"_1","nodeType":"YulIdentifier","src":"16674:2:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16659:3:11"},"nodeType":"YulFunctionCall","src":"16659:18:11"}],"functionName":{"name":"abi_decode_int128_fromMemory","nodeType":"YulIdentifier","src":"16630:28:11"},"nodeType":"YulFunctionCall","src":"16630:48:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16607:6:11"},"nodeType":"YulFunctionCall","src":"16607:72:11"},"nodeType":"YulExpressionStatement","src":"16607:72:11"},{"nodeType":"YulVariableDeclaration","src":"16688:13:11","value":{"kind":"number","nodeType":"YulLiteral","src":"16698:3:11","type":"","value":"288"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"16692:2:11","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16721:5:11"},{"name":"_2","nodeType":"YulIdentifier","src":"16728:2:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16717:3:11"},"nodeType":"YulFunctionCall","src":"16717:14:11"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16767:9:11"},{"name":"_2","nodeType":"YulIdentifier","src":"16778:2:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16763:3:11"},"nodeType":"YulFunctionCall","src":"16763:18:11"}],"functionName":{"name":"abi_decode_address_fromMemory","nodeType":"YulIdentifier","src":"16733:29:11"},"nodeType":"YulFunctionCall","src":"16733:49:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16710:6:11"},"nodeType":"YulFunctionCall","src":"16710:73:11"},"nodeType":"YulExpressionStatement","src":"16710:73:11"},{"nodeType":"YulVariableDeclaration","src":"16792:13:11","value":{"kind":"number","nodeType":"YulLiteral","src":"16802:3:11","type":"","value":"320"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"16796:2:11","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16825:5:11"},{"name":"_3","nodeType":"YulIdentifier","src":"16832:2:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16821:3:11"},"nodeType":"YulFunctionCall","src":"16821:14:11"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16870:9:11"},{"name":"_3","nodeType":"YulIdentifier","src":"16881:2:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16866:3:11"},"nodeType":"YulFunctionCall","src":"16866:18:11"}],"functionName":{"name":"abi_decode_int128_fromMemory","nodeType":"YulIdentifier","src":"16837:28:11"},"nodeType":"YulFunctionCall","src":"16837:48:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16814:6:11"},"nodeType":"YulFunctionCall","src":"16814:72:11"},"nodeType":"YulExpressionStatement","src":"16814:72:11"},{"nodeType":"YulVariableDeclaration","src":"16895:13:11","value":{"kind":"number","nodeType":"YulLiteral","src":"16905:3:11","type":"","value":"352"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"16899:2:11","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16928:5:11"},{"name":"_4","nodeType":"YulIdentifier","src":"16935:2:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16924:3:11"},"nodeType":"YulFunctionCall","src":"16924:14:11"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16973:9:11"},{"name":"_4","nodeType":"YulIdentifier","src":"16984:2:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16969:3:11"},"nodeType":"YulFunctionCall","src":"16969:18:11"}],"functionName":{"name":"abi_decode_int128_fromMemory","nodeType":"YulIdentifier","src":"16940:28:11"},"nodeType":"YulFunctionCall","src":"16940:48:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16917:6:11"},"nodeType":"YulFunctionCall","src":"16917:72:11"},"nodeType":"YulExpressionStatement","src":"16917:72:11"},{"nodeType":"YulVariableDeclaration","src":"16998:13:11","value":{"kind":"number","nodeType":"YulLiteral","src":"17008:3:11","type":"","value":"384"},"variables":[{"name":"_5","nodeType":"YulTypedName","src":"17002:2:11","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17031:5:11"},{"name":"_5","nodeType":"YulIdentifier","src":"17038:2:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17027:3:11"},"nodeType":"YulFunctionCall","src":"17027:14:11"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17076:9:11"},{"name":"_5","nodeType":"YulIdentifier","src":"17087:2:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17072:3:11"},"nodeType":"YulFunctionCall","src":"17072:18:11"}],"functionName":{"name":"abi_decode_int128_fromMemory","nodeType":"YulIdentifier","src":"17043:28:11"},"nodeType":"YulFunctionCall","src":"17043:48:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17020:6:11"},"nodeType":"YulFunctionCall","src":"17020:72:11"},"nodeType":"YulExpressionStatement","src":"17020:72:11"},{"nodeType":"YulVariableDeclaration","src":"17101:13:11","value":{"kind":"number","nodeType":"YulLiteral","src":"17111:3:11","type":"","value":"416"},"variables":[{"name":"_6","nodeType":"YulTypedName","src":"17105:2:11","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17134:5:11"},{"name":"_6","nodeType":"YulIdentifier","src":"17141:2:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17130:3:11"},"nodeType":"YulFunctionCall","src":"17130:14:11"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17179:9:11"},{"name":"_6","nodeType":"YulIdentifier","src":"17190:2:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17175:3:11"},"nodeType":"YulFunctionCall","src":"17175:18:11"}],"functionName":{"name":"abi_decode_int128_fromMemory","nodeType":"YulIdentifier","src":"17146:28:11"},"nodeType":"YulFunctionCall","src":"17146:48:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17123:6:11"},"nodeType":"YulFunctionCall","src":"17123:72:11"},"nodeType":"YulExpressionStatement","src":"17123:72:11"},{"nodeType":"YulVariableDeclaration","src":"17204:13:11","value":{"kind":"number","nodeType":"YulLiteral","src":"17214:3:11","type":"","value":"448"},"variables":[{"name":"_7","nodeType":"YulTypedName","src":"17208:2:11","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17237:5:11"},{"name":"_7","nodeType":"YulIdentifier","src":"17244:2:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17233:3:11"},"nodeType":"YulFunctionCall","src":"17233:14:11"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17282:9:11"},{"name":"_7","nodeType":"YulIdentifier","src":"17293:2:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17278:3:11"},"nodeType":"YulFunctionCall","src":"17278:18:11"}],"functionName":{"name":"abi_decode_int128_fromMemory","nodeType":"YulIdentifier","src":"17249:28:11"},"nodeType":"YulFunctionCall","src":"17249:48:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17226:6:11"},"nodeType":"YulFunctionCall","src":"17226:72:11"},"nodeType":"YulExpressionStatement","src":"17226:72:11"},{"nodeType":"YulVariableDeclaration","src":"17307:13:11","value":{"kind":"number","nodeType":"YulLiteral","src":"17317:3:11","type":"","value":"480"},"variables":[{"name":"_8","nodeType":"YulTypedName","src":"17311:2:11","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17340:5:11"},{"name":"_8","nodeType":"YulIdentifier","src":"17347:2:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17336:3:11"},"nodeType":"YulFunctionCall","src":"17336:14:11"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17386:9:11"},{"name":"_8","nodeType":"YulIdentifier","src":"17397:2:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17382:3:11"},"nodeType":"YulFunctionCall","src":"17382:18:11"}],"functionName":{"name":"abi_decode_uint128_fromMemory","nodeType":"YulIdentifier","src":"17352:29:11"},"nodeType":"YulFunctionCall","src":"17352:49:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17329:6:11"},"nodeType":"YulFunctionCall","src":"17329:73:11"},"nodeType":"YulExpressionStatement","src":"17329:73:11"},{"nodeType":"YulVariableDeclaration","src":"17411:13:11","value":{"kind":"number","nodeType":"YulLiteral","src":"17421:3:11","type":"","value":"512"},"variables":[{"name":"_9","nodeType":"YulTypedName","src":"17415:2:11","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17444:5:11"},{"name":"_9","nodeType":"YulIdentifier","src":"17451:2:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17440:3:11"},"nodeType":"YulFunctionCall","src":"17440:14:11"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17490:9:11"},{"name":"_9","nodeType":"YulIdentifier","src":"17501:2:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17486:3:11"},"nodeType":"YulFunctionCall","src":"17486:18:11"}],"functionName":{"name":"abi_decode_uint128_fromMemory","nodeType":"YulIdentifier","src":"17456:29:11"},"nodeType":"YulFunctionCall","src":"17456:49:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17433:6:11"},"nodeType":"YulFunctionCall","src":"17433:73:11"},"nodeType":"YulExpressionStatement","src":"17433:73:11"},{"nodeType":"YulVariableDeclaration","src":"17515:14:11","value":{"kind":"number","nodeType":"YulLiteral","src":"17526:3:11","type":"","value":"544"},"variables":[{"name":"_10","nodeType":"YulTypedName","src":"17519:3:11","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17549:5:11"},{"name":"_10","nodeType":"YulIdentifier","src":"17556:3:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17545:3:11"},"nodeType":"YulFunctionCall","src":"17545:15:11"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17596:9:11"},{"name":"_10","nodeType":"YulIdentifier","src":"17607:3:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17592:3:11"},"nodeType":"YulFunctionCall","src":"17592:19:11"}],"functionName":{"name":"abi_decode_uint128_fromMemory","nodeType":"YulIdentifier","src":"17562:29:11"},"nodeType":"YulFunctionCall","src":"17562:50:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17538:6:11"},"nodeType":"YulFunctionCall","src":"17538:75:11"},"nodeType":"YulExpressionStatement","src":"17538:75:11"},{"nodeType":"YulVariableDeclaration","src":"17622:14:11","value":{"kind":"number","nodeType":"YulLiteral","src":"17633:3:11","type":"","value":"576"},"variables":[{"name":"_11","nodeType":"YulTypedName","src":"17626:3:11","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17656:5:11"},{"name":"_11","nodeType":"YulIdentifier","src":"17663:3:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17652:3:11"},"nodeType":"YulFunctionCall","src":"17652:15:11"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17702:9:11"},{"name":"_11","nodeType":"YulIdentifier","src":"17713:3:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17698:3:11"},"nodeType":"YulFunctionCall","src":"17698:19:11"}],"functionName":{"name":"abi_decode_int128_fromMemory","nodeType":"YulIdentifier","src":"17669:28:11"},"nodeType":"YulFunctionCall","src":"17669:49:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17645:6:11"},"nodeType":"YulFunctionCall","src":"17645:74:11"},"nodeType":"YulExpressionStatement","src":"17645:74:11"},{"nodeType":"YulAssignment","src":"17728:15:11","value":{"name":"value","nodeType":"YulIdentifier","src":"17738:5:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"17728:6:11"}]}]},"name":"abi_decode_tuple_t_struct$_LiquidityPoolData_$1436_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15807:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"15818:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"15830:6:11","type":""}],"src":"15725:2024:11"},{"body":{"nodeType":"YulBlock","src":"17909:256:11","statements":[{"nodeType":"YulAssignment","src":"17919:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17931:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"17942:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17927:3:11"},"nodeType":"YulFunctionCall","src":"17927:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17919:4:11"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17961:9:11"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"17976:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"17984:8:11","type":"","value":"0xffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"17972:3:11"},"nodeType":"YulFunctionCall","src":"17972:21:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17954:6:11"},"nodeType":"YulFunctionCall","src":"17954:40:11"},"nodeType":"YulExpressionStatement","src":"17954:40:11"},{"nodeType":"YulVariableDeclaration","src":"18003:52:11","value":{"kind":"number","nodeType":"YulLiteral","src":"18013:42:11","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"18007:2:11","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18075:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"18086:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18071:3:11"},"nodeType":"YulFunctionCall","src":"18071:18:11"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"18095:6:11"},{"name":"_1","nodeType":"YulIdentifier","src":"18103:2:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"18091:3:11"},"nodeType":"YulFunctionCall","src":"18091:15:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18064:6:11"},"nodeType":"YulFunctionCall","src":"18064:43:11"},"nodeType":"YulExpressionStatement","src":"18064:43:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18127:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"18138:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18123:3:11"},"nodeType":"YulFunctionCall","src":"18123:18:11"},{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"18147:6:11"},{"name":"_1","nodeType":"YulIdentifier","src":"18155:2:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"18143:3:11"},"nodeType":"YulFunctionCall","src":"18143:15:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18116:6:11"},"nodeType":"YulFunctionCall","src":"18116:43:11"},"nodeType":"YulExpressionStatement","src":"18116:43:11"}]},"name":"abi_encode_tuple_t_uint24_t_address_t_address__to_t_uint24_t_address_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17862:9:11","type":""},{"name":"value2","nodeType":"YulTypedName","src":"17873:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"17881:6:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"17889:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17900:4:11","type":""}],"src":"17754:411:11"},{"body":{"nodeType":"YulBlock","src":"18344:228:11","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18361:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"18372:2:11","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18354:6:11"},"nodeType":"YulFunctionCall","src":"18354:21:11"},"nodeType":"YulExpressionStatement","src":"18354:21:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18395:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"18406:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18391:3:11"},"nodeType":"YulFunctionCall","src":"18391:18:11"},{"kind":"number","nodeType":"YulLiteral","src":"18411:2:11","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18384:6:11"},"nodeType":"YulFunctionCall","src":"18384:30:11"},"nodeType":"YulExpressionStatement","src":"18384:30:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18434:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"18445:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18430:3:11"},"nodeType":"YulFunctionCall","src":"18430:18:11"},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061","kind":"string","nodeType":"YulLiteral","src":"18450:34:11","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18423:6:11"},"nodeType":"YulFunctionCall","src":"18423:62:11"},"nodeType":"YulExpressionStatement","src":"18423:62:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18505:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"18516:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18501:3:11"},"nodeType":"YulFunctionCall","src":"18501:18:11"},{"hexValue":"646472657373","kind":"string","nodeType":"YulLiteral","src":"18521:8:11","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18494:6:11"},"nodeType":"YulFunctionCall","src":"18494:36:11"},"nodeType":"YulExpressionStatement","src":"18494:36:11"},{"nodeType":"YulAssignment","src":"18539:27:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18551:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"18562:3:11","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18547:3:11"},"nodeType":"YulFunctionCall","src":"18547:19:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18539:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18321:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18335:4:11","type":""}],"src":"18170:402:11"},{"body":{"nodeType":"YulBlock","src":"18628:186:11","statements":[{"nodeType":"YulAssignment","src":"18638:20:11","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"18653:1:11"},{"name":"y","nodeType":"YulIdentifier","src":"18656:1:11"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"18649:3:11"},"nodeType":"YulFunctionCall","src":"18649:9:11"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"18638:7:11"}]},{"body":{"nodeType":"YulBlock","src":"18705:22:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"18707:16:11"},"nodeType":"YulFunctionCall","src":"18707:18:11"},"nodeType":"YulExpressionStatement","src":"18707:18:11"}]},"condition":{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"18678:1:11"},{"kind":"number","nodeType":"YulLiteral","src":"18681:1:11","type":"","value":"0"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"18674:3:11"},"nodeType":"YulFunctionCall","src":"18674:9:11"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"18688:1:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18695:3:11","type":"","value":"255"},{"kind":"number","nodeType":"YulLiteral","src":"18700:1:11","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"18691:3:11"},"nodeType":"YulFunctionCall","src":"18691:11:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"18685:2:11"},"nodeType":"YulFunctionCall","src":"18685:18:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"18670:3:11"},"nodeType":"YulFunctionCall","src":"18670:34:11"},"nodeType":"YulIf","src":"18667:60:11"},{"body":{"nodeType":"YulBlock","src":"18786:22:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"18788:16:11"},"nodeType":"YulFunctionCall","src":"18788:18:11"},"nodeType":"YulExpressionStatement","src":"18788:18:11"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"18756:1:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"18749:6:11"},"nodeType":"YulFunctionCall","src":"18749:9:11"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"18763:1:11"},{"arguments":[{"name":"product","nodeType":"YulIdentifier","src":"18771:7:11"},{"name":"x","nodeType":"YulIdentifier","src":"18780:1:11"}],"functionName":{"name":"sdiv","nodeType":"YulIdentifier","src":"18766:4:11"},"nodeType":"YulFunctionCall","src":"18766:16:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"18760:2:11"},"nodeType":"YulFunctionCall","src":"18760:23:11"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"18746:2:11"},"nodeType":"YulFunctionCall","src":"18746:38:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"18739:6:11"},"nodeType":"YulFunctionCall","src":"18739:46:11"},"nodeType":"YulIf","src":"18736:72:11"}]},"name":"checked_mul_t_int256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"18607:1:11","type":""},{"name":"y","nodeType":"YulTypedName","src":"18610:1:11","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"18616:7:11","type":""}],"src":"18577:237:11"},{"body":{"nodeType":"YulBlock","src":"18864:148:11","statements":[{"body":{"nodeType":"YulBlock","src":"18887:22:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"18889:16:11"},"nodeType":"YulFunctionCall","src":"18889:18:11"},"nodeType":"YulExpressionStatement","src":"18889:18:11"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"18884:1:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"18877:6:11"},"nodeType":"YulFunctionCall","src":"18877:9:11"},"nodeType":"YulIf","src":"18874:35:11"},{"body":{"nodeType":"YulBlock","src":"18960:22:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"18962:16:11"},"nodeType":"YulFunctionCall","src":"18962:18:11"},"nodeType":"YulExpressionStatement","src":"18962:18:11"}]},"condition":{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"18928:1:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18935:3:11","type":"","value":"255"},{"kind":"number","nodeType":"YulLiteral","src":"18940:1:11","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"18931:3:11"},"nodeType":"YulFunctionCall","src":"18931:11:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"18925:2:11"},"nodeType":"YulFunctionCall","src":"18925:18:11"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"18948:1:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18955:1:11","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"18951:3:11"},"nodeType":"YulFunctionCall","src":"18951:6:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"18945:2:11"},"nodeType":"YulFunctionCall","src":"18945:13:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"18921:3:11"},"nodeType":"YulFunctionCall","src":"18921:38:11"},"nodeType":"YulIf","src":"18918:64:11"},{"nodeType":"YulAssignment","src":"18991:15:11","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"19001:1:11"},{"name":"y","nodeType":"YulIdentifier","src":"19004:1:11"}],"functionName":{"name":"sdiv","nodeType":"YulIdentifier","src":"18996:4:11"},"nodeType":"YulFunctionCall","src":"18996:10:11"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"18991:1:11"}]}]},"name":"checked_div_t_int256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"18849:1:11","type":""},{"name":"y","nodeType":"YulTypedName","src":"18852:1:11","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"18858:1:11","type":""}],"src":"18819:193:11"},{"body":{"nodeType":"YulBlock","src":"19191:169:11","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19208:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"19219:2:11","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19201:6:11"},"nodeType":"YulFunctionCall","src":"19201:21:11"},"nodeType":"YulExpressionStatement","src":"19201:21:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19242:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"19253:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19238:3:11"},"nodeType":"YulFunctionCall","src":"19238:18:11"},{"kind":"number","nodeType":"YulLiteral","src":"19258:2:11","type":"","value":"19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19231:6:11"},"nodeType":"YulFunctionCall","src":"19231:30:11"},"nodeType":"YulExpressionStatement","src":"19231:30:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19281:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"19292:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19277:3:11"},"nodeType":"YulFunctionCall","src":"19277:18:11"},{"hexValue":"726573756c74206f7574206f662072616e6765","kind":"string","nodeType":"YulLiteral","src":"19297:21:11","type":"","value":"result out of range"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19270:6:11"},"nodeType":"YulFunctionCall","src":"19270:49:11"},"nodeType":"YulExpressionStatement","src":"19270:49:11"},{"nodeType":"YulAssignment","src":"19328:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19340:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"19351:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19336:3:11"},"nodeType":"YulFunctionCall","src":"19336:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19328:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_e1d240271c0bae9a59e3391287011b8cb205593d101d7303b0a19e6a118e4a9e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19168:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19182:4:11","type":""}],"src":"19017:343:11"},{"body":{"nodeType":"YulBlock","src":"19539:232:11","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19556:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"19567:2:11","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19549:6:11"},"nodeType":"YulFunctionCall","src":"19549:21:11"},"nodeType":"YulExpressionStatement","src":"19549:21:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19590:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"19601:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19586:3:11"},"nodeType":"YulFunctionCall","src":"19586:18:11"},{"kind":"number","nodeType":"YulLiteral","src":"19606:2:11","type":"","value":"42"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19579:6:11"},"nodeType":"YulFunctionCall","src":"19579:30:11"},"nodeType":"YulExpressionStatement","src":"19579:30:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19629:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"19640:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19625:3:11"},"nodeType":"YulFunctionCall","src":"19625:18:11"},{"hexValue":"5361666545524332303a204552433230206f7065726174696f6e20646964206e","kind":"string","nodeType":"YulLiteral","src":"19645:34:11","type":"","value":"SafeERC20: ERC20 operation did n"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19618:6:11"},"nodeType":"YulFunctionCall","src":"19618:62:11"},"nodeType":"YulExpressionStatement","src":"19618:62:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19700:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"19711:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19696:3:11"},"nodeType":"YulFunctionCall","src":"19696:18:11"},{"hexValue":"6f742073756363656564","kind":"string","nodeType":"YulLiteral","src":"19716:12:11","type":"","value":"ot succeed"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19689:6:11"},"nodeType":"YulFunctionCall","src":"19689:40:11"},"nodeType":"YulExpressionStatement","src":"19689:40:11"},{"nodeType":"YulAssignment","src":"19738:27:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19750:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"19761:3:11","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19746:3:11"},"nodeType":"YulFunctionCall","src":"19746:19:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19738:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19516:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19530:4:11","type":""}],"src":"19365:406:11"},{"body":{"nodeType":"YulBlock","src":"19950:228:11","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19967:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"19978:2:11","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19960:6:11"},"nodeType":"YulFunctionCall","src":"19960:21:11"},"nodeType":"YulExpressionStatement","src":"19960:21:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20001:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"20012:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19997:3:11"},"nodeType":"YulFunctionCall","src":"19997:18:11"},{"kind":"number","nodeType":"YulLiteral","src":"20017:2:11","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19990:6:11"},"nodeType":"YulFunctionCall","src":"19990:30:11"},"nodeType":"YulExpressionStatement","src":"19990:30:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20040:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"20051:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20036:3:11"},"nodeType":"YulFunctionCall","src":"20036:18:11"},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f","kind":"string","nodeType":"YulLiteral","src":"20056:34:11","type":"","value":"Address: insufficient balance fo"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20029:6:11"},"nodeType":"YulFunctionCall","src":"20029:62:11"},"nodeType":"YulExpressionStatement","src":"20029:62:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20111:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"20122:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20107:3:11"},"nodeType":"YulFunctionCall","src":"20107:18:11"},{"hexValue":"722063616c6c","kind":"string","nodeType":"YulLiteral","src":"20127:8:11","type":"","value":"r call"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20100:6:11"},"nodeType":"YulFunctionCall","src":"20100:36:11"},"nodeType":"YulExpressionStatement","src":"20100:36:11"},{"nodeType":"YulAssignment","src":"20145:27:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20157:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"20168:3:11","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20153:3:11"},"nodeType":"YulFunctionCall","src":"20153:19:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20145:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19927:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19941:4:11","type":""}],"src":"19776:402:11"},{"body":{"nodeType":"YulBlock","src":"20357:179:11","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20374:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"20385:2:11","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20367:6:11"},"nodeType":"YulFunctionCall","src":"20367:21:11"},"nodeType":"YulExpressionStatement","src":"20367:21:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20408:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"20419:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20404:3:11"},"nodeType":"YulFunctionCall","src":"20404:18:11"},{"kind":"number","nodeType":"YulLiteral","src":"20424:2:11","type":"","value":"29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20397:6:11"},"nodeType":"YulFunctionCall","src":"20397:30:11"},"nodeType":"YulExpressionStatement","src":"20397:30:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20447:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"20458:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20443:3:11"},"nodeType":"YulFunctionCall","src":"20443:18:11"},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","kind":"string","nodeType":"YulLiteral","src":"20463:31:11","type":"","value":"Address: call to non-contract"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20436:6:11"},"nodeType":"YulFunctionCall","src":"20436:59:11"},"nodeType":"YulExpressionStatement","src":"20436:59:11"},{"nodeType":"YulAssignment","src":"20504:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20516:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"20527:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20512:3:11"},"nodeType":"YulFunctionCall","src":"20512:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20504:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20334:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20348:4:11","type":""}],"src":"20183:353:11"},{"body":{"nodeType":"YulBlock","src":"20678:150:11","statements":[{"nodeType":"YulVariableDeclaration","src":"20688:27:11","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"20708:6:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"20702:5:11"},"nodeType":"YulFunctionCall","src":"20702:13:11"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"20692:6:11","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"20763:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"20771:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20759:3:11"},"nodeType":"YulFunctionCall","src":"20759:17:11"},{"name":"pos","nodeType":"YulIdentifier","src":"20778:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"20783:6:11"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"20724:34:11"},"nodeType":"YulFunctionCall","src":"20724:66:11"},"nodeType":"YulExpressionStatement","src":"20724:66:11"},{"nodeType":"YulAssignment","src":"20799:23:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20810:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"20815:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20806:3:11"},"nodeType":"YulFunctionCall","src":"20806:16:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"20799:3:11"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"20654:3:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"20659:6:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"20670:3:11","type":""}],"src":"20541:287:11"}]},"contents":"{\n    { }\n    function abi_decode_uint24(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint24(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_uint24(headStart)\n    }\n    function abi_encode_address(value, pos)\n    {\n        mstore(pos, and(value, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function validator_revert_bool(value)\n    {\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint24t_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_uint24(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_bool(value)\n        value1 := value\n    }\n    function abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_uint256t_uint24(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_uint24(add(headStart, 32))\n    }\n    function validator_revert_uint16(value)\n    {\n        if iszero(eq(value, and(value, 0xffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint24t_int256t_uint16t_uint32(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_uint24(headStart)\n        value1 := calldataload(add(headStart, 32))\n        let value := calldataload(add(headStart, 64))\n        validator_revert_uint16(value)\n        value2 := value\n        let value_1 := calldataload(add(headStart, 96))\n        if iszero(eq(value_1, and(value_1, 0xffffffff))) { revert(0, 0) }\n        value3 := value_1\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_struct$_D18MarginAccount_$1518_memory_ptr__to_t_struct$_D18MarginAccount_$1518_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, mload(value0))\n        mstore(add(headStart, 0x20), mload(add(value0, 0x20)))\n        mstore(add(headStart, 0x40), mload(add(value0, 0x40)))\n        mstore(add(headStart, 0x60), and(mload(add(value0, 0x60)), not(0xffffffffffffffffffffffffffffffff)))\n    }\n    function validator_revert_uint8(value)\n    {\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint8(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_uint8(value)\n        value0 := value\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_uint24(value, pos)\n    {\n        mstore(pos, and(value, 0xffffff))\n    }\n    function abi_encode_tuple_t_uint24_t_address__to_t_uint24_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffff))\n        mstore(add(headStart, 32), and(value1, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function finalize_allocation(memPtr, size)\n    {\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x41)\n            revert(0, 0x24)\n        }\n        mstore(64, newFreePtr)\n    }\n    function allocate_memory() -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, 608)\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x41)\n            revert(0, 0x24)\n        }\n        mstore(64, newFreePtr)\n    }\n    function abi_decode_int128_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, signextend(15, value))) { revert(0, 0) }\n    }\n    function abi_decode_uint64_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_uint16_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        validator_revert_uint16(value)\n    }\n    function abi_decode_bytes16_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, not(0xffffffffffffffffffffffffffffffff)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_struct$_MarginAccount_$1509_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        let _1 := 256\n        if slt(sub(dataEnd, headStart), _1) { revert(0, 0) }\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, _1)\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x41)\n            revert(0, 0x24)\n        }\n        mstore(64, newFreePtr)\n        mstore(memPtr, abi_decode_int128_fromMemory(headStart))\n        mstore(add(memPtr, 32), abi_decode_int128_fromMemory(add(headStart, 32)))\n        mstore(add(memPtr, 64), abi_decode_int128_fromMemory(add(headStart, 64)))\n        mstore(add(memPtr, 96), abi_decode_int128_fromMemory(add(headStart, 96)))\n        mstore(add(memPtr, 128), abi_decode_uint64_fromMemory(add(headStart, 128)))\n        mstore(add(memPtr, 160), abi_decode_uint16_fromMemory(add(headStart, 160)))\n        mstore(add(memPtr, 192), abi_decode_uint16_fromMemory(add(headStart, 192)))\n        mstore(add(memPtr, 224), abi_decode_bytes16_fromMemory(add(headStart, 224)))\n        value0 := memPtr\n    }\n    function abi_encode_int128(value, pos)\n    {\n        mstore(pos, signextend(15, value))\n    }\n    function abi_encode_tuple_t_uint24_t_int128_t_bool__to_t_uint24_t_int128_t_bool__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, 0xffffff))\n        mstore(add(headStart, 32), signextend(15, value1))\n        mstore(add(headStart, 64), iszero(iszero(value2)))\n    }\n    function abi_decode_tuple_t_int128_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_int128_fromMemory(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_div_t_uint24(x, y) -> r\n    {\n        let _1 := 0xffffff\n        let y_1 := and(y, _1)\n        if iszero(y_1) { panic_error_0x12() }\n        r := div(and(x, _1), y_1)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_uint24_t_address_t_uint256__to_t_uint24_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, 0xffffff))\n        mstore(add(headStart, 32), and(value1, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_stringliteral_ba1a75905e42c2c2ee220ec76b87374b00e44cc2cdf17342859ed546c8924001__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 12)\n        mstore(add(headStart, 64), \"set ob addrs\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_bool_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        validator_revert_bool(value)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_774a4ae2b8b6c31151ef5dc7c463f6f8f5f1e9b277850852024f200dd1b62b5b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"order book unknown\")\n        tail := add(headStart, 96)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_uint16(value, pos)\n    {\n        mstore(pos, and(value, 0xffff))\n    }\n    function abi_encode_uint32(value, pos)\n    {\n        mstore(pos, and(value, 0xffffffff))\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_bytes(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_struct$_ClientOrder_$1394_memory_ptr_t_bytes_memory_ptr__to_t_struct$_ClientOrder_$1394_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 64)\n        abi_encode_uint24(mload(value0), add(headStart, 64))\n        let memberValue0 := mload(add(value0, 0x20))\n        abi_encode_int128(memberValue0, add(headStart, 96))\n        let memberValue0_1 := mload(add(value0, 64))\n        abi_encode_uint16(memberValue0_1, add(headStart, 128))\n        let memberValue0_2 := mload(add(value0, 96))\n        abi_encode_uint32(memberValue0_2, add(headStart, 160))\n        let memberValue0_3 := mload(add(value0, 128))\n        abi_encode_uint32(memberValue0_3, add(headStart, 192))\n        let memberValue0_4 := mload(add(value0, 160))\n        abi_encode_uint32(memberValue0_4, add(headStart, 224))\n        let memberValue0_5 := mload(add(value0, 192))\n        let _1 := 256\n        abi_encode_address(memberValue0_5, add(headStart, _1))\n        let memberValue0_6 := mload(add(value0, 224))\n        let _2 := 288\n        abi_encode_int128(memberValue0_6, add(headStart, _2))\n        let memberValue0_7 := mload(add(value0, _1))\n        let _3 := 320\n        abi_encode_int128(memberValue0_7, add(headStart, _3))\n        let _4 := mload(add(value0, _2))\n        let _5 := 352\n        mstore(add(headStart, _5), _4)\n        let memberValue0_8 := mload(add(value0, _3))\n        let _6 := 384\n        abi_encode_address(memberValue0_8, add(headStart, _6))\n        let _7 := mload(add(value0, _5))\n        let _8 := 416\n        mstore(add(headStart, _8), _7)\n        let memberValue0_9 := mload(add(value0, _6))\n        let _9 := 0x01c0\n        abi_encode_uint16(memberValue0_9, add(headStart, _9))\n        let memberValue0_10 := mload(add(value0, _8))\n        mstore(add(headStart, 480), _9)\n        let end := abi_encode_bytes(memberValue0_10, add(headStart, 512))\n        mstore(add(headStart, 0x20), sub(end, headStart))\n        tail := abi_encode_bytes(value1, end)\n    }\n    function return_data_selector() -> sig\n    {\n        if gt(returndatasize(), 3)\n        {\n            returndatacopy(0, 0, 4)\n            sig := shr(224, mload(0))\n        }\n    }\n    function try_decode_error_message() -> ret\n    {\n        if lt(returndatasize(), 0x44) { leave }\n        let data := mload(64)\n        let _1 := not(3)\n        returndatacopy(data, 4, add(returndatasize(), _1))\n        let offset := mload(data)\n        let _2 := returndatasize()\n        let _3 := 0xffffffffffffffff\n        if or(gt(offset, _3), gt(add(offset, 0x24), _2)) { leave }\n        let msg := add(data, offset)\n        let length := mload(msg)\n        if gt(length, _3) { leave }\n        if gt(add(add(msg, length), 0x20), add(add(data, returndatasize()), _1)) { leave }\n        finalize_allocation(data, add(add(offset, length), 0x20))\n        ret := msg\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_bytes(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_int256_t_uint16__to_t_int256_t_uint16__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xffff))\n    }\n    function abi_encode_tuple_t_uint24__to_t_uint24__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffff))\n    }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        validator_revert_address(value)\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_uint8_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        validator_revert_uint8(value)\n    }\n    function abi_decode_int32_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, signextend(3, value))) { revert(0, 0) }\n    }\n    function abi_decode_uint128_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_struct$_LiquidityPoolData_$1436_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 608) { revert(0, 0) }\n        let value := allocate_memory()\n        mstore(value, abi_decode_bool_fromMemory(headStart))\n        mstore(add(value, 32), abi_decode_uint8_fromMemory(add(headStart, 32)))\n        mstore(add(value, 64), abi_decode_uint8_fromMemory(add(headStart, 64)))\n        mstore(add(value, 96), abi_decode_int32_fromMemory(add(headStart, 96)))\n        mstore(add(value, 128), abi_decode_uint8_fromMemory(add(headStart, 128)))\n        mstore(add(value, 160), abi_decode_uint16_fromMemory(add(headStart, 160)))\n        mstore(add(value, 192), abi_decode_address_fromMemory(add(headStart, 192)))\n        mstore(add(value, 224), abi_decode_uint64_fromMemory(add(headStart, 224)))\n        let _1 := 256\n        mstore(add(value, _1), abi_decode_int128_fromMemory(add(headStart, _1)))\n        let _2 := 288\n        mstore(add(value, _2), abi_decode_address_fromMemory(add(headStart, _2)))\n        let _3 := 320\n        mstore(add(value, _3), abi_decode_int128_fromMemory(add(headStart, _3)))\n        let _4 := 352\n        mstore(add(value, _4), abi_decode_int128_fromMemory(add(headStart, _4)))\n        let _5 := 384\n        mstore(add(value, _5), abi_decode_int128_fromMemory(add(headStart, _5)))\n        let _6 := 416\n        mstore(add(value, _6), abi_decode_int128_fromMemory(add(headStart, _6)))\n        let _7 := 448\n        mstore(add(value, _7), abi_decode_int128_fromMemory(add(headStart, _7)))\n        let _8 := 480\n        mstore(add(value, _8), abi_decode_uint128_fromMemory(add(headStart, _8)))\n        let _9 := 512\n        mstore(add(value, _9), abi_decode_uint128_fromMemory(add(headStart, _9)))\n        let _10 := 544\n        mstore(add(value, _10), abi_decode_uint128_fromMemory(add(headStart, _10)))\n        let _11 := 576\n        mstore(add(value, _11), abi_decode_int128_fromMemory(add(headStart, _11)))\n        value0 := value\n    }\n    function abi_encode_tuple_t_uint24_t_address_t_address__to_t_uint24_t_address_t_address__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, 0xffffff))\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function checked_mul_t_int256(x, y) -> product\n    {\n        product := mul(x, y)\n        if and(slt(x, 0), eq(y, shl(255, 1))) { panic_error_0x11() }\n        if iszero(or(iszero(x), eq(y, sdiv(product, x)))) { panic_error_0x11() }\n    }\n    function checked_div_t_int256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        if and(eq(x, shl(255, 1)), eq(y, not(0))) { panic_error_0x11() }\n        r := sdiv(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_e1d240271c0bae9a59e3391287011b8cb205593d101d7303b0a19e6a118e4a9e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"result out of range\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"SafeERC20: ERC20 operation did n\")\n        mstore(add(headStart, 96), \"ot succeed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Address: insufficient balance fo\")\n        mstore(add(headStart, 96), \"r call\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Address: call to non-contract\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n}","id":11,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"1552":[{"length":32,"start":346},{"length":32,"start":672},{"length":32,"start":844},{"length":32,"start":1440},{"length":32,"start":2510},{"length":32,"start":2806},{"length":32,"start":3044}]},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100d45760003560e01c8063715018a611610081578063b1bd155e1161005b578063b1bd155e14610224578063ba0e939914610237578063f2fde38b1461026057600080fd5b8063715018a6146101b25780638da5cb5b146101ba5780639fbb0a3b146101cb57600080fd5b80633e99a53b116100b25780633e99a53b146101555780635db35a041461017c57806362bcc2581461018f57600080fd5b80630330d0c0146100d95780630df3ad4c1461011f578063230f238414610140575b600080fd5b6101026100e73660046111bf565b6001602052600090815260409020546001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b61013261012d3660046111e8565b610273565b604051908152602001610116565b61015361014e3660046111bf565b6103cd565b005b6101027f000000000000000000000000000000000000000000000000000000000000000081565b61015361018a36600461121f565b61051f565b6101a261019d36600461125b565b610623565b6040519015158152602001610116565b610153610907565b6000546001600160a01b0316610102565b6101de6101d93660046111bf565b61096d565b60405161011691908151815260208083015190820152604080830151908201526060918201516fffffffffffffffffffffffffffffffff19169181019190915260800190565b6101536102323660046111bf565b610ad9565b6101026102453660046112c4565b6002602052600090815260409020546001600160a01b031681565b61015361026e3660046112f6565b610cf7565b604051633d53a26b60e11b815262ffffff8316600482015230602482015260009081906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690637aa744d69060440161010060405180830381865afa1580156102e8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061030c91906113dc565b6040808201519051633ef0eb0f60e21b815262ffffff87166004820152600f9190910b602482015284151560448201529091506000906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063fbc3ac3c90606401602060405180830381865afa158015610393573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103b791906114af565b90506103c281610dc2565b925050505b92915050565b6000546001600160a01b0316331461042c5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b600061043b620186a0836114f6565b60ff81166000908152600260205260408082205490516370a0823160e01b81523060048201529293506001600160a01b03169182919082906370a0823190602401602060405180830381865afa158015610499573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104bd9190611518565b90506104d36001600160a01b0383163383610dee565b6040805162ffffff871681523360208201529081018290527fd7089a64efa4caccaea095308c4da0682a70797771cee9b36ab4a639054035929060600160405180910390a15050505050565b600061052e620186a0836114f6565b60ff81166000908152600260205260409020549091506001600160a01b0316806105895760405162461bcd60e51b815260206004820152600c60248201526b736574206f6220616464727360a01b6044820152606401610423565b60405163095ea7b360e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660048301526024820186905282169063095ea7b3906044016020604051808303816000875af11580156105f8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061061c919061153c565b5050505050565b600080546001600160a01b0316331461067e5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610423565b62ffffff85166000908152600160205260409020546001600160a01b0316806106e95760405162461bcd60e51b815260206004820152601260248201527f6f7264657220626f6f6b20756e6b6e6f776e00000000000000000000000000006044820152606401610423565b60006106f486610e5a565b90508363ffffffff1660000361070c57634000000093505b604080516101c081018252600060208201819052918101829052606080820183905260a0820183905260c0820183905260e082018390526101208201839052610160820183905261018082018390526101a082015263ffffffff8616608082015262ffffff8916815230610140820152600f83900b61010082018190529091126107975760006107a9565b6f7fffffffffffffffffffffffffffffff5b600f0b602082015261ffff861660408201526107c8426203f480611559565b63ffffffff90811660a0830152421660608201526040805160208101825260008152905163489cc5e960e01b81526001600160a01b0385169163489cc5e9916108159185916004016115bc565b600060405180830381600087803b15801561082f57600080fd5b505af1925050508015610840575060015b6108bb5761084c611705565b806308c379a0036108af5750610860611721565b8061086b57506108b1565b7f2858238d037e52471d3ad4944d280cdb1fd3b479a3fdf698bb04e99572e6efa88160405161089a91906117ab565b60405180910390a160009450505050506108ff565b505b3d6000803e3d6000fd5b6040805188815261ffff881660208201527f742895f70ed9b3e00487db3827a00b9c91de8360cd96129050b8a82c99de4862910160405180910390a1600193505050505b949350505050565b6000546001600160a01b031633146109615760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610423565b61096b6000610f02565b565b6109ab604051806080016040528060008152602001600081526020016000815260200160006fffffffffffffffffffffffffffffffff191681525090565b604051633d53a26b60e11b815262ffffff831660048201523060248201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690637aa744d69060440161010060405180830381865afa158015610a1e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a4291906113dc565b9050610a82604051806080016040528060008152602001600081526020016000815260200160006fffffffffffffffffffffffffffffffff191681525090565b8151610a8d90610dc2565b81526020820151610a9d90610dc2565b60208201526040820151610ab090610dc2565b604082015260e0909101516fffffffffffffffffffffffffffffffff1916606082015292915050565b60405163079e02e960e21b815262ffffff821660048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690631e780ba490602401602060405180830381865afa158015610b45573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b6991906117c9565b62ffffff8316600090815260016020526040812080546001600160a01b0319166001600160a01b038416179055909150610ba6620186a0846114f6565b60ff81166000908152600260205260409020549091506001600160a01b0316610c8d57604051631857be3960e11b815260ff821660048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906330af7c729060240161026060405180830381865afa158015610c34573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c589190611823565b60c0015160ff8316600090815260026020526040902080546001600160a01b0319166001600160a01b03909216919091179055505b60ff811660009081526002602090815260409182902054825162ffffff871681526001600160a01b038681169382019390935291168183015290517f5222a91cec499c7c85c5fcb8b8ddfb81880ec40273d8cda372740d8a97fa6ec79181900360600190a1505050565b6000546001600160a01b03163314610d515760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610423565b6001600160a01b038116610db65760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610423565b610dbf81610f02565b50565b600068010000000000000000610de4670de0b6b3a7640000600f85900b61198d565b6103c791906119bd565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1663a9059cbb60e01b179052610e55908490610f52565b505050565b600080670de0b6b3a7640000610e79680100000000000000008561198d565b610e8391906119bd565b90506f7fffffffffffffffffffffffffffffff198312801590610eb657506f7fffffffffffffffffffffffffffffff8313155b6103c75760405162461bcd60e51b815260206004820152601360248201527f726573756c74206f7574206f662072616e6765000000000000000000000000006044820152606401610423565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000610fa7826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166110249092919063ffffffff16565b805190915015610e555780806020019051810190610fc5919061153c565b610e555760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610423565b6060611033848460008561103d565b90505b9392505050565b60608247101561109e5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610423565b6001600160a01b0385163b6110f55760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610423565b600080866001600160a01b0316858760405161111191906119eb565b60006040518083038185875af1925050503d806000811461114e576040519150601f19603f3d011682016040523d82523d6000602084013e611153565b606091505b509150915061116382828661116e565b979650505050505050565b6060831561117d575081611036565b82511561118d5782518084602001fd5b8160405162461bcd60e51b815260040161042391906117ab565b803562ffffff811681146111ba57600080fd5b919050565b6000602082840312156111d157600080fd5b611036826111a7565b8015158114610dbf57600080fd5b600080604083850312156111fb57600080fd5b611204836111a7565b91506020830135611214816111da565b809150509250929050565b6000806040838503121561123257600080fd5b82359150611242602084016111a7565b90509250929050565b61ffff81168114610dbf57600080fd5b6000806000806080858703121561127157600080fd5b61127a856111a7565b93506020850135925060408501356112918161124b565b9150606085013563ffffffff811681146112aa57600080fd5b939692955090935050565b60ff81168114610dbf57600080fd5b6000602082840312156112d657600080fd5b8135611036816112b5565b6001600160a01b0381168114610dbf57600080fd5b60006020828403121561130857600080fd5b8135611036816112e1565b601f8201601f1916810167ffffffffffffffff8111828210171561134757634e487b7160e01b600052604160045260246000fd5b6040525050565b604051610260810167ffffffffffffffff8111828210171561138057634e487b7160e01b600052604160045260246000fd5b60405290565b8051600f81900b81146111ba57600080fd5b805167ffffffffffffffff811681146111ba57600080fd5b80516111ba8161124b565b80516fffffffffffffffffffffffffffffffff19811681146111ba57600080fd5b60006101008083850312156113f057600080fd5b6040519081019067ffffffffffffffff8211818310171561142157634e487b7160e01b600052604160045260246000fd5b8160405261142e84611386565b815261143c60208501611386565b602082015261144d60408501611386565b604082015261145e60608501611386565b606082015261146f60808501611398565b608082015261148060a085016113b0565b60a082015261149160c085016113b0565b60c08201526114a260e085016113bb565b60e0820152949350505050565b6000602082840312156114c157600080fd5b61103682611386565b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600062ffffff8084168061150c5761150c6114ca565b92169190910492915050565b60006020828403121561152a57600080fd5b5051919050565b80516111ba816111da565b60006020828403121561154e57600080fd5b8151611036816111da565b808201808211156103c7576103c76114e0565b60005b8381101561158757818101518382015260200161156f565b50506000910152565b600081518084526115a881602086016020860161156c565b601f01601f19169290920160200192915050565b604081526115d260408201845162ffffff169052565b600060208401516115e86060840182600f0b9052565b50604084015161ffff8116608084015250606084015163ffffffff811660a084015250608084015163ffffffff811660c08401525060a084015163ffffffff811660e08401525060c084015161010061164b818501836001600160a01b03169052565b60e0860151915061012061166381860184600f0b9052565b9086015191506101409061167b85830184600f0b9052565b86015161016085810191909152908601519150610180906116a6828601846001600160a01b03169052565b8601516101a0858101919091529086015191506101c0906116cc8286018461ffff169052565b8601516101e085019190915290506116e8610200840182611590565b905082810360208401526116fc8185611590565b95945050505050565b600060033d111561171e5760046000803e5060005160e01c5b90565b600060443d101561172f5790565b6040516003193d81016004833e81513d67ffffffffffffffff816024840111818411171561175f57505050505090565b82850191508151818111156117775750505050505090565b843d87010160208285010111156117915750505050505090565b6117a060208286010187611313565b509095945050505050565b6020815260006110366020830184611590565b80516111ba816112e1565b6000602082840312156117db57600080fd5b8151611036816112e1565b80516111ba816112b5565b8051600381900b81146111ba57600080fd5b80516fffffffffffffffffffffffffffffffff811681146111ba57600080fd5b6000610260828403121561183657600080fd5b61183e61134e565b61184783611531565b8152611855602084016117e6565b6020820152611866604084016117e6565b6040820152611877606084016117f1565b6060820152611888608084016117e6565b608082015261189960a084016113b0565b60a08201526118aa60c084016117be565b60c08201526118bb60e08401611398565b60e08201526101006118ce818501611386565b908201526101206118e08482016117be565b908201526101406118f2848201611386565b90820152610160611904848201611386565b90820152610180611916848201611386565b908201526101a0611928848201611386565b908201526101c061193a848201611386565b908201526101e061194c848201611803565b9082015261020061195e848201611803565b90820152610220611970848201611803565b90820152610240611982848201611386565b908201529392505050565b80820260008212600160ff1b841416156119a9576119a96114e0565b81810583148215176103c7576103c76114e0565b6000826119cc576119cc6114ca565b600160ff1b8214600019841416156119e6576119e66114e0565b500590565b600082516119fd81846020870161156c565b919091019291505056fea264697066735822122044e981601be4708bddca168ed09f7918febf6a576fcc3dc5a89777cc197ea44164736f6c63430008130033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xD4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x81 JUMPI DUP1 PUSH4 0xB1BD155E GT PUSH2 0x5B JUMPI DUP1 PUSH4 0xB1BD155E EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0xBA0E9399 EQ PUSH2 0x237 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x260 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1B2 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1BA JUMPI DUP1 PUSH4 0x9FBB0A3B EQ PUSH2 0x1CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3E99A53B GT PUSH2 0xB2 JUMPI DUP1 PUSH4 0x3E99A53B EQ PUSH2 0x155 JUMPI DUP1 PUSH4 0x5DB35A04 EQ PUSH2 0x17C JUMPI DUP1 PUSH4 0x62BCC258 EQ PUSH2 0x18F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x330D0C0 EQ PUSH2 0xD9 JUMPI DUP1 PUSH4 0xDF3AD4C EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0x230F2384 EQ PUSH2 0x140 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x102 PUSH2 0xE7 CALLDATASIZE PUSH1 0x4 PUSH2 0x11BF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x132 PUSH2 0x12D CALLDATASIZE PUSH1 0x4 PUSH2 0x11E8 JUMP JUMPDEST PUSH2 0x273 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x116 JUMP JUMPDEST PUSH2 0x153 PUSH2 0x14E CALLDATASIZE PUSH1 0x4 PUSH2 0x11BF JUMP JUMPDEST PUSH2 0x3CD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x102 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x153 PUSH2 0x18A CALLDATASIZE PUSH1 0x4 PUSH2 0x121F JUMP JUMPDEST PUSH2 0x51F JUMP JUMPDEST PUSH2 0x1A2 PUSH2 0x19D CALLDATASIZE PUSH1 0x4 PUSH2 0x125B JUMP JUMPDEST PUSH2 0x623 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x116 JUMP JUMPDEST PUSH2 0x153 PUSH2 0x907 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x102 JUMP JUMPDEST PUSH2 0x1DE PUSH2 0x1D9 CALLDATASIZE PUSH1 0x4 PUSH2 0x11BF JUMP JUMPDEST PUSH2 0x96D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x116 SWAP2 SWAP1 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 DUP1 DUP4 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x40 DUP1 DUP4 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x60 SWAP2 DUP3 ADD MLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH2 0x153 PUSH2 0x232 CALLDATASIZE PUSH1 0x4 PUSH2 0x11BF JUMP JUMPDEST PUSH2 0xAD9 JUMP JUMPDEST PUSH2 0x102 PUSH2 0x245 CALLDATASIZE PUSH1 0x4 PUSH2 0x12C4 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x153 PUSH2 0x26E CALLDATASIZE PUSH1 0x4 PUSH2 0x12F6 JUMP JUMPDEST PUSH2 0xCF7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x3D53A26B PUSH1 0xE1 SHL DUP2 MSTORE PUSH3 0xFFFFFF DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x7AA744D6 SWAP1 PUSH1 0x44 ADD PUSH2 0x100 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2E8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x30C SWAP2 SWAP1 PUSH2 0x13DC JUMP JUMPDEST PUSH1 0x40 DUP1 DUP3 ADD MLOAD SWAP1 MLOAD PUSH4 0x3EF0EB0F PUSH1 0xE2 SHL DUP2 MSTORE PUSH3 0xFFFFFF DUP8 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF SWAP2 SWAP1 SWAP2 SIGNEXTEND PUSH1 0x24 DUP3 ADD MSTORE DUP5 ISZERO ISZERO PUSH1 0x44 DUP3 ADD MSTORE SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0xFBC3AC3C SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x393 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3B7 SWAP2 SWAP1 PUSH2 0x14AF JUMP JUMPDEST SWAP1 POP PUSH2 0x3C2 DUP2 PUSH2 0xDC2 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x42C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x43B PUSH3 0x186A0 DUP4 PUSH2 0x14F6 JUMP JUMPDEST PUSH1 0xFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD SWAP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP3 SWAP4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 SWAP2 SWAP1 DUP3 SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x499 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4BD SWAP2 SWAP1 PUSH2 0x1518 JUMP JUMPDEST SWAP1 POP PUSH2 0x4D3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND CALLER DUP4 PUSH2 0xDEE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH3 0xFFFFFF DUP8 AND DUP2 MSTORE CALLER PUSH1 0x20 DUP3 ADD MSTORE SWAP1 DUP2 ADD DUP3 SWAP1 MSTORE PUSH32 0xD7089A64EFA4CACCAEA095308C4DA0682A70797771CEE9B36AB4A63905403592 SWAP1 PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x52E PUSH3 0x186A0 DUP4 PUSH2 0x14F6 JUMP JUMPDEST PUSH1 0xFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x589 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x736574206F62206164647273 PUSH1 0xA0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x423 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP7 SWAP1 MSTORE DUP3 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5F8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x61C SWAP2 SWAP1 PUSH2 0x153C JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x67E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x423 JUMP JUMPDEST PUSH3 0xFFFFFF DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x6E9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F7264657220626F6F6B20756E6B6E6F776E0000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x423 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6F4 DUP7 PUSH2 0xE5A JUMP JUMPDEST SWAP1 POP DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0x0 SUB PUSH2 0x70C JUMPI PUSH4 0x40000000 SWAP4 POP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH2 0x1C0 DUP2 ADD DUP3 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 DUP1 DUP3 ADD DUP4 SWAP1 MSTORE PUSH1 0xA0 DUP3 ADD DUP4 SWAP1 MSTORE PUSH1 0xC0 DUP3 ADD DUP4 SWAP1 MSTORE PUSH1 0xE0 DUP3 ADD DUP4 SWAP1 MSTORE PUSH2 0x120 DUP3 ADD DUP4 SWAP1 MSTORE PUSH2 0x160 DUP3 ADD DUP4 SWAP1 MSTORE PUSH2 0x180 DUP3 ADD DUP4 SWAP1 MSTORE PUSH2 0x1A0 DUP3 ADD MSTORE PUSH4 0xFFFFFFFF DUP7 AND PUSH1 0x80 DUP3 ADD MSTORE PUSH3 0xFFFFFF DUP10 AND DUP2 MSTORE ADDRESS PUSH2 0x140 DUP3 ADD MSTORE PUSH1 0xF DUP4 SWAP1 SIGNEXTEND PUSH2 0x100 DUP3 ADD DUP2 SWAP1 MSTORE SWAP1 SWAP2 SLT PUSH2 0x797 JUMPI PUSH1 0x0 PUSH2 0x7A9 JUMP JUMPDEST PUSH16 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF JUMPDEST PUSH1 0xF SIGNEXTEND PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0xFFFF DUP7 AND PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x7C8 TIMESTAMP PUSH3 0x3F480 PUSH2 0x1559 JUMP JUMPDEST PUSH4 0xFFFFFFFF SWAP1 DUP2 AND PUSH1 0xA0 DUP4 ADD MSTORE TIMESTAMP AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 MLOAD PUSH4 0x489CC5E9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP2 PUSH4 0x489CC5E9 SWAP2 PUSH2 0x815 SWAP2 DUP6 SWAP2 PUSH1 0x4 ADD PUSH2 0x15BC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x82F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x840 JUMPI POP PUSH1 0x1 JUMPDEST PUSH2 0x8BB JUMPI PUSH2 0x84C PUSH2 0x1705 JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 SUB PUSH2 0x8AF JUMPI POP PUSH2 0x860 PUSH2 0x1721 JUMP JUMPDEST DUP1 PUSH2 0x86B JUMPI POP PUSH2 0x8B1 JUMP JUMPDEST PUSH32 0x2858238D037E52471D3AD4944D280CDB1FD3B479A3FDF698BB04E99572E6EFA8 DUP2 PUSH1 0x40 MLOAD PUSH2 0x89A SWAP2 SWAP1 PUSH2 0x17AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x0 SWAP5 POP POP POP POP POP PUSH2 0x8FF JUMP JUMPDEST POP JUMPDEST RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP9 DUP2 MSTORE PUSH2 0xFFFF DUP9 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x742895F70ED9B3E00487DB3827A00B9C91DE8360CD96129050B8A82C99DE4862 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 SWAP4 POP POP POP POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x961 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x423 JUMP JUMPDEST PUSH2 0x96B PUSH1 0x0 PUSH2 0xF02 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x9AB PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x3D53A26B PUSH1 0xE1 SHL DUP2 MSTORE PUSH3 0xFFFFFF DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x7AA744D6 SWAP1 PUSH1 0x44 ADD PUSH2 0x100 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA1E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA42 SWAP2 SWAP1 PUSH2 0x13DC JUMP JUMPDEST SWAP1 POP PUSH2 0xA82 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST DUP2 MLOAD PUSH2 0xA8D SWAP1 PUSH2 0xDC2 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0xA9D SWAP1 PUSH2 0xDC2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0xAB0 SWAP1 PUSH2 0xDC2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0xE0 SWAP1 SWAP2 ADD MLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x60 DUP3 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x79E02E9 PUSH1 0xE2 SHL DUP2 MSTORE PUSH3 0xFFFFFF DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x1E780BA4 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB45 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB69 SWAP2 SWAP1 PUSH2 0x17C9 JUMP JUMPDEST PUSH3 0xFFFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND OR SWAP1 SSTORE SWAP1 SWAP2 POP PUSH2 0xBA6 PUSH3 0x186A0 DUP5 PUSH2 0x14F6 JUMP JUMPDEST PUSH1 0xFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xC8D JUMPI PUSH1 0x40 MLOAD PUSH4 0x1857BE39 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0xFF DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x30AF7C72 SWAP1 PUSH1 0x24 ADD PUSH2 0x260 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC34 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC58 SWAP2 SWAP1 PUSH2 0x1823 JUMP JUMPDEST PUSH1 0xC0 ADD MLOAD PUSH1 0xFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP JUMPDEST PUSH1 0xFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SLOAD DUP3 MLOAD PUSH3 0xFFFFFF DUP8 AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND SWAP4 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 AND DUP2 DUP4 ADD MSTORE SWAP1 MLOAD PUSH32 0x5222A91CEC499C7C85C5FCB8B8DDFB81880EC40273D8CDA372740D8A97FA6EC7 SWAP2 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xD51 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x423 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xDB6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x423 JUMP JUMPDEST PUSH2 0xDBF DUP2 PUSH2 0xF02 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH9 0x10000000000000000 PUSH2 0xDE4 PUSH8 0xDE0B6B3A7640000 PUSH1 0xF DUP6 SWAP1 SIGNEXTEND PUSH2 0x198D JUMP JUMPDEST PUSH2 0x3C7 SWAP2 SWAP1 PUSH2 0x19BD JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0xE55 SWAP1 DUP5 SWAP1 PUSH2 0xF52 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH8 0xDE0B6B3A7640000 PUSH2 0xE79 PUSH9 0x10000000000000000 DUP6 PUSH2 0x198D JUMP JUMPDEST PUSH2 0xE83 SWAP2 SWAP1 PUSH2 0x19BD JUMP JUMPDEST SWAP1 POP PUSH16 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT DUP4 SLT DUP1 ISZERO SWAP1 PUSH2 0xEB6 JUMPI POP PUSH16 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 SGT ISZERO JUMPDEST PUSH2 0x3C7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x726573756C74206F7574206F662072616E676500000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x423 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFA7 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1024 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0xE55 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0xFC5 SWAP2 SWAP1 PUSH2 0x153C JUMP JUMPDEST PUSH2 0xE55 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x423 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1033 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x103D JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x109E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x423 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0x10F5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x423 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x1111 SWAP2 SWAP1 PUSH2 0x19EB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x114E JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1153 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1163 DUP3 DUP3 DUP7 PUSH2 0x116E JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x117D JUMPI POP DUP2 PUSH2 0x1036 JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x118D JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x423 SWAP2 SWAP1 PUSH2 0x17AB JUMP JUMPDEST DUP1 CALLDATALOAD PUSH3 0xFFFFFF DUP2 AND DUP2 EQ PUSH2 0x11BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1036 DUP3 PUSH2 0x11A7 JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xDBF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x11FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1204 DUP4 PUSH2 0x11A7 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x1214 DUP2 PUSH2 0x11DA JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1232 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x1242 PUSH1 0x20 DUP5 ADD PUSH2 0x11A7 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xFFFF DUP2 AND DUP2 EQ PUSH2 0xDBF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1271 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x127A DUP6 PUSH2 0x11A7 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH2 0x1291 DUP2 PUSH2 0x124B JUMP JUMPDEST SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x12AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP1 SWAP4 POP POP JUMP JUMPDEST PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0xDBF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1036 DUP2 PUSH2 0x12B5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xDBF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1308 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1036 DUP2 PUSH2 0x12E1 JUMP JUMPDEST PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1347 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MSTORE POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x260 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1380 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MSTORE SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH1 0xF DUP2 SWAP1 SIGNEXTEND DUP2 EQ PUSH2 0x11BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x11BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 MLOAD PUSH2 0x11BA DUP2 PUSH2 0x124B JUMP JUMPDEST DUP1 MLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT DUP2 AND DUP2 EQ PUSH2 0x11BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x100 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 ADD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x1421 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 PUSH1 0x40 MSTORE PUSH2 0x142E DUP5 PUSH2 0x1386 JUMP JUMPDEST DUP2 MSTORE PUSH2 0x143C PUSH1 0x20 DUP6 ADD PUSH2 0x1386 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x144D PUSH1 0x40 DUP6 ADD PUSH2 0x1386 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x145E PUSH1 0x60 DUP6 ADD PUSH2 0x1386 JUMP JUMPDEST PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0x146F PUSH1 0x80 DUP6 ADD PUSH2 0x1398 JUMP JUMPDEST PUSH1 0x80 DUP3 ADD MSTORE PUSH2 0x1480 PUSH1 0xA0 DUP6 ADD PUSH2 0x13B0 JUMP JUMPDEST PUSH1 0xA0 DUP3 ADD MSTORE PUSH2 0x1491 PUSH1 0xC0 DUP6 ADD PUSH2 0x13B0 JUMP JUMPDEST PUSH1 0xC0 DUP3 ADD MSTORE PUSH2 0x14A2 PUSH1 0xE0 DUP6 ADD PUSH2 0x13BB JUMP JUMPDEST PUSH1 0xE0 DUP3 ADD MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1036 DUP3 PUSH2 0x1386 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH3 0xFFFFFF DUP1 DUP5 AND DUP1 PUSH2 0x150C JUMPI PUSH2 0x150C PUSH2 0x14CA JUMP JUMPDEST SWAP3 AND SWAP2 SWAP1 SWAP2 DIV SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x152A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 MLOAD PUSH2 0x11BA DUP2 PUSH2 0x11DA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x154E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1036 DUP2 PUSH2 0x11DA JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x3C7 JUMPI PUSH2 0x3C7 PUSH2 0x14E0 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1587 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x156F JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x15A8 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x156C JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH2 0x15D2 PUSH1 0x40 DUP3 ADD DUP5 MLOAD PUSH3 0xFFFFFF AND SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP5 ADD MLOAD PUSH2 0x15E8 PUSH1 0x60 DUP5 ADD DUP3 PUSH1 0xF SIGNEXTEND SWAP1 MSTORE JUMP JUMPDEST POP PUSH1 0x40 DUP5 ADD MLOAD PUSH2 0xFFFF DUP2 AND PUSH1 0x80 DUP5 ADD MSTORE POP PUSH1 0x60 DUP5 ADD MLOAD PUSH4 0xFFFFFFFF DUP2 AND PUSH1 0xA0 DUP5 ADD MSTORE POP PUSH1 0x80 DUP5 ADD MLOAD PUSH4 0xFFFFFFFF DUP2 AND PUSH1 0xC0 DUP5 ADD MSTORE POP PUSH1 0xA0 DUP5 ADD MLOAD PUSH4 0xFFFFFFFF DUP2 AND PUSH1 0xE0 DUP5 ADD MSTORE POP PUSH1 0xC0 DUP5 ADD MLOAD PUSH2 0x100 PUSH2 0x164B DUP2 DUP6 ADD DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST PUSH1 0xE0 DUP7 ADD MLOAD SWAP2 POP PUSH2 0x120 PUSH2 0x1663 DUP2 DUP7 ADD DUP5 PUSH1 0xF SIGNEXTEND SWAP1 MSTORE JUMP JUMPDEST SWAP1 DUP7 ADD MLOAD SWAP2 POP PUSH2 0x140 SWAP1 PUSH2 0x167B DUP6 DUP4 ADD DUP5 PUSH1 0xF SIGNEXTEND SWAP1 MSTORE JUMP JUMPDEST DUP7 ADD MLOAD PUSH2 0x160 DUP6 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 DUP7 ADD MLOAD SWAP2 POP PUSH2 0x180 SWAP1 PUSH2 0x16A6 DUP3 DUP7 ADD DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST DUP7 ADD MLOAD PUSH2 0x1A0 DUP6 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 DUP7 ADD MLOAD SWAP2 POP PUSH2 0x1C0 SWAP1 PUSH2 0x16CC DUP3 DUP7 ADD DUP5 PUSH2 0xFFFF AND SWAP1 MSTORE JUMP JUMPDEST DUP7 ADD MLOAD PUSH2 0x1E0 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 POP PUSH2 0x16E8 PUSH2 0x200 DUP5 ADD DUP3 PUSH2 0x1590 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x16FC DUP2 DUP6 PUSH2 0x1590 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x171E JUMPI PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY POP PUSH1 0x0 MLOAD PUSH1 0xE0 SHR JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x172F JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3 NOT RETURNDATASIZE DUP2 ADD PUSH1 0x4 DUP4 RETURNDATACOPY DUP2 MLOAD RETURNDATASIZE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 PUSH1 0x24 DUP5 ADD GT DUP2 DUP5 GT OR ISZERO PUSH2 0x175F JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP3 DUP6 ADD SWAP2 POP DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x1777 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP5 RETURNDATASIZE DUP8 ADD ADD PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x1791 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x17A0 PUSH1 0x20 DUP3 DUP7 ADD ADD DUP8 PUSH2 0x1313 JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1036 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1590 JUMP JUMPDEST DUP1 MLOAD PUSH2 0x11BA DUP2 PUSH2 0x12E1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1036 DUP2 PUSH2 0x12E1 JUMP JUMPDEST DUP1 MLOAD PUSH2 0x11BA DUP2 PUSH2 0x12B5 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x3 DUP2 SWAP1 SIGNEXTEND DUP2 EQ PUSH2 0x11BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 MLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x11BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x260 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1836 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x183E PUSH2 0x134E JUMP JUMPDEST PUSH2 0x1847 DUP4 PUSH2 0x1531 JUMP JUMPDEST DUP2 MSTORE PUSH2 0x1855 PUSH1 0x20 DUP5 ADD PUSH2 0x17E6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x1866 PUSH1 0x40 DUP5 ADD PUSH2 0x17E6 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x1877 PUSH1 0x60 DUP5 ADD PUSH2 0x17F1 JUMP JUMPDEST PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0x1888 PUSH1 0x80 DUP5 ADD PUSH2 0x17E6 JUMP JUMPDEST PUSH1 0x80 DUP3 ADD MSTORE PUSH2 0x1899 PUSH1 0xA0 DUP5 ADD PUSH2 0x13B0 JUMP JUMPDEST PUSH1 0xA0 DUP3 ADD MSTORE PUSH2 0x18AA PUSH1 0xC0 DUP5 ADD PUSH2 0x17BE JUMP JUMPDEST PUSH1 0xC0 DUP3 ADD MSTORE PUSH2 0x18BB PUSH1 0xE0 DUP5 ADD PUSH2 0x1398 JUMP JUMPDEST PUSH1 0xE0 DUP3 ADD MSTORE PUSH2 0x100 PUSH2 0x18CE DUP2 DUP6 ADD PUSH2 0x1386 JUMP JUMPDEST SWAP1 DUP3 ADD MSTORE PUSH2 0x120 PUSH2 0x18E0 DUP5 DUP3 ADD PUSH2 0x17BE JUMP JUMPDEST SWAP1 DUP3 ADD MSTORE PUSH2 0x140 PUSH2 0x18F2 DUP5 DUP3 ADD PUSH2 0x1386 JUMP JUMPDEST SWAP1 DUP3 ADD MSTORE PUSH2 0x160 PUSH2 0x1904 DUP5 DUP3 ADD PUSH2 0x1386 JUMP JUMPDEST SWAP1 DUP3 ADD MSTORE PUSH2 0x180 PUSH2 0x1916 DUP5 DUP3 ADD PUSH2 0x1386 JUMP JUMPDEST SWAP1 DUP3 ADD MSTORE PUSH2 0x1A0 PUSH2 0x1928 DUP5 DUP3 ADD PUSH2 0x1386 JUMP JUMPDEST SWAP1 DUP3 ADD MSTORE PUSH2 0x1C0 PUSH2 0x193A DUP5 DUP3 ADD PUSH2 0x1386 JUMP JUMPDEST SWAP1 DUP3 ADD MSTORE PUSH2 0x1E0 PUSH2 0x194C DUP5 DUP3 ADD PUSH2 0x1803 JUMP JUMPDEST SWAP1 DUP3 ADD MSTORE PUSH2 0x200 PUSH2 0x195E DUP5 DUP3 ADD PUSH2 0x1803 JUMP JUMPDEST SWAP1 DUP3 ADD MSTORE PUSH2 0x220 PUSH2 0x1970 DUP5 DUP3 ADD PUSH2 0x1803 JUMP JUMPDEST SWAP1 DUP3 ADD MSTORE PUSH2 0x240 PUSH2 0x1982 DUP5 DUP3 ADD PUSH2 0x1386 JUMP JUMPDEST SWAP1 DUP3 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 DUP3 MUL PUSH1 0x0 DUP3 SLT PUSH1 0x1 PUSH1 0xFF SHL DUP5 EQ AND ISZERO PUSH2 0x19A9 JUMPI PUSH2 0x19A9 PUSH2 0x14E0 JUMP JUMPDEST DUP2 DUP2 SDIV DUP4 EQ DUP3 ISZERO OR PUSH2 0x3C7 JUMPI PUSH2 0x3C7 PUSH2 0x14E0 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x19CC JUMPI PUSH2 0x19CC PUSH2 0x14CA JUMP JUMPDEST PUSH1 0x1 PUSH1 0xFF SHL DUP3 EQ PUSH1 0x0 NOT DUP5 EQ AND ISZERO PUSH2 0x19E6 JUMPI PUSH2 0x19E6 PUSH2 0x14E0 JUMP JUMPDEST POP SDIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x19FD DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x156C JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PREVRANDAO 0xE9 DUP2 PUSH1 0x1B 0xE4 PUSH17 0x8BDDCA168ED09F7918FEBF6A576FCC3DC5 0xA8 SWAP8 PUSH24 0xCC197EA44164736F6C634300081300330000000000000000 ","sourceMap":"3027:7976:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3776:55;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;3776:55:10;;;;;;-1:-1:-1;;;;;665:55:11;;;647:74;;635:2;620:18;3776:55:10;;;;;;;;9438:477;;;;;;:::i;:::-;;:::i;:::-;;;1317:25:11;;;1305:2;1290:18;9438:477:10;1173:175:11;7702:497:10;;;;;;:::i;:::-;;:::i;:::-;;3422:39;;;;;5288:310;;;;;;:::i;:::-;;:::i;6467:1229::-;;;;;;:::i;:::-;;:::i;:::-;;;2459:14:11;;2452:22;2434:41;;2422:2;2407:18;6467:1229:10;2294:187:11;1668:101:3;;;:::i;1036:85::-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:3;1036:85;;8328:795:10;;;;;;:::i;:::-;;:::i;:::-;;;;;;2719:13:11;;2701:32;;2789:4;2777:17;;;2771:24;2749:20;;;2742:54;2852:4;2840:17;;;2834:24;2812:20;;;2805:54;2919:4;2907:17;;;2901:24;-1:-1:-1;;2897:70:11;2875:20;;;2868:100;;;;2688:3;2673:19;;2486:488;4395:742:10;;;;;;:::i;:::-;;:::i;3945:50::-;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;3945:50:10;;;1918:198:3;;;;;;:::i;:::-;;:::i;9438:477:10:-;9567:124;;-1:-1:-1;;;9567:124:10;;4056:8:11;4044:21;;9567:124:10;;;4026:40:11;9676:4:10;4082:18:11;;;4075:83;9522:6:10;;;;-1:-1:-1;;;;;9595:14:10;9567:60;;;;3999:18:11;;9567:124:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9832:15;;;;;9716:160;;-1:-1:-1;;;9716:160:10;;7061:8:11;7049:21;;9716:160:10;;;7031:40:11;7118:2;7107:22;;;;7087:18;;;7080:50;7173:14;;7166:22;7146:18;;;7139:50;9540:151:10;;-1:-1:-1;9701:12:10;;-1:-1:-1;;;;;9744:14:10;9716:75;;;;7004:18:11;;9716:160:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9701:175;;9894:14;9902:5;9894:7;:14::i;:::-;9887:21;;;;9438:477;;;;;:::o;7702:497::-;1082:7:3;1108:6;-1:-1:-1;;;;;1108:6:3;719:10:7;1248:23:3;1240:68;;;;-1:-1:-1;;;1240:68:3;;7613:2:11;1240:68:3;;;7595:21:11;;;7632:18;;;7625:30;7691:34;7671:18;;;7664:62;7743:18;;1240:68:3;;;;;;;;;7789:12:10::1;7810:21;7824:7;7810:13:::0;:21:::1;:::i;:::-;7863:24;::::0;::::1;7842:18;7863:24:::0;;;:16:::1;:24;::::0;;;;;;7986:36;;-1:-1:-1;;;7986:36:10;;8016:4:::1;7986:36;::::0;::::1;647:74:11::0;7863:24:10;;-1:-1:-1;;;;;;7863:24:10::1;::::0;;;7842:18;7863:24;;7986:21:::1;::::0;620:18:11;;7986:36:10::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7968:54:::0;-1:-1:-1;8081:45:10::1;-1:-1:-1::0;;;;;8081:24:10;::::1;8106:10;7968:54:::0;8081:24:::1;:45::i;:::-;8141:51;::::0;;8649:8:11;8637:21;;8619:40;;8172:10:10::1;8690:2:11::0;8675:18;;8668:83;8767:18;;;8760:34;;;8141:51:10::1;::::0;8607:2:11;8592:18;8141:51:10::1;;;;;;;7779:420;;;;7702:497:::0;:::o;5288:310::-;5387:12;5408:21;5422:7;5408:13;:21;:::i;:::-;5457:24;;;5440:14;5457:24;;;:16;:24;;;;;;5387:43;;-1:-1:-1;;;;;;5457:24:10;;5491:43;;;;-1:-1:-1;;;5491:43:10;;9007:2:11;5491:43:10;;;8989:21:11;9046:2;9026:18;;;9019:30;-1:-1:-1;;;9065:18:11;;;9058:42;9117:18;;5491:43:10;8805:336:11;5491:43:10;5544:47;;-1:-1:-1;;;5544:47:10;;-1:-1:-1;;;;;5567:14:10;9338:55:11;;5544:47:10;;;9320:74:11;9410:18;;;9403:34;;;5544:22:10;;;;;9293:18:11;;5544:47:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5377:221;;5288:310;;:::o;6467:1229::-;6593:4;1108:6:3;;-1:-1:-1;;;;;1108:6:3;719:10:7;1248:23:3;1240:68;;;;-1:-1:-1;;;1240:68:3;;7613:2:11;1240:68:3;;;7595:21:11;;;7632:18;;;7625:30;7691:34;7671:18;;;7664:62;7743:18;;1240:68:3;7411:356:11;1240:68:3;6634:35:10::1;::::0;::::1;6610:21;6634:35:::0;;;:20:::1;:35;::::0;;;;;-1:-1:-1;;;;;6634:35:10::1;::::0;6680:56:::1;;;::::0;-1:-1:-1;;;6680:56:10;;10037:2:11;6680:56:10::1;::::0;::::1;10019:21:11::0;10076:2;10056:18;;;10049:30;10115:20;10095:18;;;10088:48;10153:18;;6680:56:10::1;9835:342:11::0;6680:56:10::1;6746:19;6768:24;6779:12;6768:10;:24::i;:::-;6746:46;;6806:6;:9;;6814:1;6806:9:::0;6802:74:::1;;6841:10;6832:19;;6802:74;-1:-1:-1::0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6932:20:10::1;::::0;::::1;-1:-1:-1::0;;;6932:20:10;6962:34:::1;::::0;::::1;::::0;;7033:4:::1;-1:-1:-1::0;;;7006:32:10;7048:28:::1;::::0;;::::1;-1:-1:-1::0;;;7048:28:10;;;-1:-1:-1;;;7106:40:10::1;;7144:1;7106:40;;;3674:34;7106:40;7086:60;;:17;::::0;::::1;:60:::0;7156:32:::1;::::0;::::1;:17;::::0;::::1;:32:::0;7258:27:::1;:15;7276:9;7258:27;:::i;:::-;7233:53;::::0;;::::1;:15;::::0;::::1;:53:::0;7330:15:::1;7296:50;:24;::::0;::::1;:50:::0;-1:-1:-1;7444:9:10;;::::1;::::0;::::1;::::0;;-1:-1:-1;7444:9:10;;7385:69;;-1:-1:-1;;;7385:69:10;;-1:-1:-1;;;;;7385:51:10;::::1;::::0;::::1;::::0;:69:::1;::::0;7233:5;;7385:69:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;7381:309;;;;:::i;:::-;;;::::0;::::1;;;;;:::i;:::-;;;;;;;;7619:34;7646:6;7619:34;;;;;;:::i;:::-;;;;;;;;7674:5;7667:12;;;;;;;;7381:309;;;;;::::0;::::1;;;;;7474:55;::::0;;14345:25:11;;;14418:6;14406:19;;14401:2;14386:18;;14379:47;7474:55:10::1;::::0;14318:18:11;7474:55:10::1;;;;;;;7550:4;7543:11;;;;;1318:1:3;6467:1229:10::0;;;;;;:::o;1668:101:3:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:3;719:10:7;1248:23:3;1240:68;;;;-1:-1:-1;;;1240:68:3;;7613:2:11;1240:68:3;;;7595:21:11;;;7632:18;;;7625:30;7691:34;7671:18;;;7664:62;7743:18;;1240:68:3;7411:356:11;1240:68:3;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;8328:795:10:-;8399:23;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8399:23:10;8461:124;;-1:-1:-1;;;8461:124:10;;4056:8:11;4044:21;;8461:124:10;;;4026:40:11;8570:4:10;4082:18:11;;;4075:83;8434:24:10;;8489:14;-1:-1:-1;;;;;8461:60:10;;;;3999:18:11;;8461:124:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8434:151;;8595:30;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8595:30:10;8671:20;;8663:29;;:7;:29::i;:::-;8635:57;;8801:11;;;;8793:20;;:7;:20::i;:::-;8774:16;;;:39;8914:15;;;;8906:24;;:7;:24::i;:::-;8879;;;:51;9014:14;;;;;-1:-1:-1;;8994:34:10;:17;;;:34;8879:6;8328:795;-1:-1:-1;;8328:795:10:o;4395:742::-;4510:78;;-1:-1:-1;;;4510:78:10;;14611:8:11;14599:21;;4510:78:10;;;14581:40:11;4492:15:10;;4538:14;-1:-1:-1;;;;;4510:63:10;;;;14554:18:11;;4510:78:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4598:35;;;;;;;:20;:35;;;;;:45;;-1:-1:-1;;;;;;4598:45:10;-1:-1:-1;;;;;4598:45:10;;;;;;;-1:-1:-1;4707:21:10;4721:7;4598:35;4707:21;:::i;:::-;4742:24;;;4778:1;4742:24;;;:16;:24;;;;;;4686:43;;-1:-1:-1;;;;;;4742:24:10;4739:313;;4911:68;;-1:-1:-1;;;4911:68:10;;15203:4:11;15191:17;;4911:68:10;;;15173:36:11;4845:46:10;;4939:14;-1:-1:-1;;;;;4911:60:10;;;;15146:18:11;;4911:68:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5020:21;;;4993:24;;;;;;;:16;:24;;;;;:48;;-1:-1:-1;;;;;;4993:48:10;-1:-1:-1;;;;;4993:48:10;;;;;;;;;-1:-1:-1;4739:313:10;5105:24;;;;;;;:16;:24;;;;;;;;;;5066:64;;17984:8:11;17972:21;;17954:40;;-1:-1:-1;;;;;18091:15:11;;;18071:18;;;18064:43;;;;5105:24:10;;18123:18:11;;;18116:43;5066:64:10;;;;;;;17942:2:11;5066:64:10;;;4448:689;;4395:742;:::o;1918:198:3:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:3;719:10:7;1248:23:3;1240:68;;;;-1:-1:-1;;;1240:68:3;;7613:2:11;1240:68:3;;;7595:21:11;;;7632:18;;;7625:30;7691:34;7671:18;;;7664:62;7743:18;;1240:68:3;7411:356:11;1240:68:3;-1:-1:-1;;;;;2006:22:3;::::1;1998:73;;;::::0;-1:-1:-1;;;1998:73:3;;18372:2:11;1998:73:3::1;::::0;::::1;18354:21:11::0;18411:2;18391:18;;;18384:30;18450:34;18430:18;;;18423:62;-1:-1:-1;;;18501:18:11;;;18494:36;18547:19;;1998:73:3::1;18170:402:11::0;1998:73:3::1;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;10460:116:10:-;10510:6;3550:5;10536:20;3502:6;10535:34;10536:9;;;:20;:::i;:::-;10535:34;;;;:::i;745:216:1:-;895:58;;;-1:-1:-1;;;;;9338:55:11;;895:58:1;;;9320:74:11;9410:18;;;;9403:34;;;895:58:1;;;;;;;;;;9293:18:11;;;;895:58:1;;;;;;;;;;-1:-1:-1;;;895:58:1;;;868:86;;888:5;;868:19;:86::i;:::-;745:216;;;:::o;10069:225:10:-;10122:6;;3502;10157:13;3550:5;10157:1;:13;:::i;:::-;10156:26;;;;:::i;:::-;10140:42;-1:-1:-1;;;10200:14:10;;;;;:32;;-1:-1:-1;3674:34:10;10218:14;;;10200:32;10192:64;;;;-1:-1:-1;;;10192:64:10;;19219:2:11;10192:64:10;;;19201:21:11;19258:2;19238:18;;;19231:30;19297:21;19277:18;;;19270:49;19336:18;;10192:64:10;19017:343:11;2270:187:3;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:3;;;-1:-1:-1;;;;;;2378:17:3;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;3306:717:1:-;3736:23;3762:69;3790:4;3762:69;;;;;;;;;;;;;;;;;3770:5;-1:-1:-1;;;;;3762:27:1;;;:69;;;;;:::i;:::-;3845:17;;3736:95;;-1:-1:-1;3845:21:1;3841:176;;3940:10;3929:30;;;;;;;;;;;;:::i;:::-;3921:85;;;;-1:-1:-1;;;3921:85:1;;19567:2:11;3921:85:1;;;19549:21:11;19606:2;19586:18;;;19579:30;19645:34;19625:18;;;19618:62;-1:-1:-1;;;19696:18:11;;;19689:40;19746:19;;3921:85:1;19365:406:11;3872:223:2;4005:12;4036:52;4058:6;4066:4;4072:1;4075:12;4036:21;:52::i;:::-;4029:59;;3872:223;;;;;;:::o;4959:499::-;5124:12;5181:5;5156:21;:30;;5148:81;;;;-1:-1:-1;;;5148:81:2;;19978:2:11;5148:81:2;;;19960:21:11;20017:2;19997:18;;;19990:30;20056:34;20036:18;;;20029:62;-1:-1:-1;;;20107:18:11;;;20100:36;20153:19;;5148:81:2;19776:402:11;5148:81:2;-1:-1:-1;;;;;1476:19:2;;;5239:60;;;;-1:-1:-1;;;5239:60:2;;20385:2:11;5239:60:2;;;20367:21:11;20424:2;20404:18;;;20397:30;20463:31;20443:18;;;20436:59;20512:18;;5239:60:2;20183:353:11;5239:60:2;5311:12;5325:23;5352:6;-1:-1:-1;;;;;5352:11:2;5371:5;5378:4;5352:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5310:73;;;;5400:51;5417:7;5426:10;5438:12;5400:16;:51::i;:::-;5393:58;4959:499;-1:-1:-1;;;;;;;4959:499:2:o;6622:692::-;6768:12;6796:7;6792:516;;;-1:-1:-1;6826:10:2;6819:17;;6792:516;6937:17;;:21;6933:365;;7131:10;7125:17;7191:15;7178:10;7174:2;7170:19;7163:44;6933:365;7270:12;7263:20;;-1:-1:-1;;;7263:20:2;;;;;;;;:::i;14:161:11:-;81:20;;141:8;130:20;;120:31;;110:59;;165:1;162;155:12;110:59;14:161;;;:::o;180:184::-;238:6;291:2;279:9;270:7;266:23;262:32;259:52;;;307:1;304;297:12;259:52;330:28;348:9;330:28;:::i;732:118::-;818:5;811:13;804:21;797:5;794:32;784:60;;840:1;837;830:12;855:313;919:6;927;980:2;968:9;959:7;955:23;951:32;948:52;;;996:1;993;986:12;948:52;1019:28;1037:9;1019:28;:::i;:::-;1009:38;;1097:2;1086:9;1082:18;1069:32;1110:28;1132:5;1110:28;:::i;:::-;1157:5;1147:15;;;855:313;;;;;:::o;1353:252::-;1420:6;1428;1481:2;1469:9;1460:7;1456:23;1452:32;1449:52;;;1497:1;1494;1487:12;1449:52;1533:9;1520:23;1510:33;;1562:37;1595:2;1584:9;1580:18;1562:37;:::i;:::-;1552:47;;1353:252;;;;;:::o;1610:117::-;1695:6;1688:5;1684:18;1677:5;1674:29;1664:57;;1717:1;1714;1707:12;1732:557;1814:6;1822;1830;1838;1891:3;1879:9;1870:7;1866:23;1862:33;1859:53;;;1908:1;1905;1898:12;1859:53;1931:28;1949:9;1931:28;:::i;:::-;1921:38;;2006:2;1995:9;1991:18;1978:32;1968:42;;2060:2;2049:9;2045:18;2032:32;2073:30;2097:5;2073:30;:::i;:::-;2122:5;-1:-1:-1;2179:2:11;2164:18;;2151:32;2227:10;2214:24;;2202:37;;2192:65;;2253:1;2250;2243:12;2192:65;1732:557;;;;-1:-1:-1;1732:557:11;;-1:-1:-1;;1732:557:11:o;2979:114::-;3063:4;3056:5;3052:16;3045:5;3042:27;3032:55;;3083:1;3080;3073:12;3098:243;3155:6;3208:2;3196:9;3187:7;3183:23;3179:32;3176:52;;;3224:1;3221;3214:12;3176:52;3263:9;3250:23;3282:29;3305:5;3282:29;:::i;3346:154::-;-1:-1:-1;;;;;3425:5:11;3421:54;3414:5;3411:65;3401:93;;3490:1;3487;3480:12;3505:247;3564:6;3617:2;3605:9;3596:7;3592:23;3588:32;3585:52;;;3633:1;3630;3623:12;3585:52;3672:9;3659:23;3691:31;3716:5;3691:31;:::i;4169:346::-;4279:2;4260:13;;-1:-1:-1;;4256:27:11;4244:40;;4314:18;4299:34;;4335:22;;;4296:62;4293:185;;;4400:10;4395:3;4391:20;4388:1;4381:31;4435:4;4432:1;4425:15;4463:4;4460:1;4453:15;4293:185;4494:2;4487:22;-1:-1:-1;;4169:346:11:o;4520:344::-;4587:2;4581:9;4629:3;4617:16;;4663:18;4648:34;;4684:22;;;4645:62;4642:185;;;4749:10;4744:3;4740:20;4737:1;4730:31;4784:4;4781:1;4774:15;4812:4;4809:1;4802:15;4642:185;4843:2;4836:22;4520:344;:::o;4869:166::-;4947:13;;5000:2;4989:21;;;4979:32;;4969:60;;5025:1;5022;5015:12;5040:175;5118:13;;5171:18;5160:30;;5150:41;;5140:69;;5205:1;5202;5195:12;5220:136;5298:13;;5320:30;5298:13;5320:30;:::i;5361:197::-;5440:13;;-1:-1:-1;;5482:51:11;;5472:62;;5462:90;;5548:1;5545;5538:12;5563:1173;5664:6;5695:3;5739:2;5727:9;5718:7;5714:23;5710:32;5707:52;;;5755:1;5752;5745:12;5707:52;5788:2;5782:9;5818:15;;;;5863:18;5848:34;;5884:22;;;5845:62;5842:185;;;5949:10;5944:3;5940:20;5937:1;5930:31;5984:4;5981:1;5974:15;6012:4;6009:1;6002:15;5842:185;6047:10;6043:2;6036:22;6082:39;6111:9;6082:39;:::i;:::-;6074:6;6067:55;6155:48;6199:2;6188:9;6184:18;6155:48;:::i;:::-;6150:2;6142:6;6138:15;6131:73;6237:48;6281:2;6270:9;6266:18;6237:48;:::i;:::-;6232:2;6224:6;6220:15;6213:73;6319:48;6363:2;6352:9;6348:18;6319:48;:::i;:::-;6314:2;6306:6;6302:15;6295:73;6402:49;6446:3;6435:9;6431:19;6402:49;:::i;:::-;6396:3;6388:6;6384:16;6377:75;6486:49;6530:3;6519:9;6515:19;6486:49;:::i;:::-;6480:3;6472:6;6468:16;6461:75;6570:49;6614:3;6603:9;6599:19;6570:49;:::i;:::-;6564:3;6556:6;6552:16;6545:75;6654:50;6699:3;6688:9;6684:19;6654:50;:::i;:::-;6648:3;6636:16;;6629:76;6640:6;5563:1173;-1:-1:-1;;;;5563:1173:11:o;7200:206::-;7269:6;7322:2;7310:9;7301:7;7297:23;7293:32;7290:52;;;7338:1;7335;7328:12;7290:52;7361:39;7390:9;7361:39;:::i;7772:127::-;7833:10;7828:3;7824:20;7821:1;7814:31;7864:4;7861:1;7854:15;7888:4;7885:1;7878:15;7904:127;7965:10;7960:3;7956:20;7953:1;7946:31;7996:4;7993:1;7986:15;8020:4;8017:1;8010:15;8036:189;8075:1;8101:8;8136:2;8133:1;8129:10;8158:3;8148:37;;8165:18;;:::i;:::-;8203:10;;8199:20;;;;;8036:189;-1:-1:-1;;8036:189:11:o;8230:184::-;8300:6;8353:2;8341:9;8332:7;8328:23;8324:32;8321:52;;;8369:1;8366;8359:12;8321:52;-1:-1:-1;8392:16:11;;8230:184;-1:-1:-1;8230:184:11:o;9448:132::-;9524:13;;9546:28;9524:13;9546:28;:::i;9585:245::-;9652:6;9705:2;9693:9;9684:7;9680:23;9676:32;9673:52;;;9721:1;9718;9711:12;9673:52;9753:9;9747:16;9772:28;9794:5;9772:28;:::i;10182:125::-;10247:9;;;10268:10;;;10265:36;;;10281:18;;:::i;10506:250::-;10591:1;10601:113;10615:6;10612:1;10609:13;10601:113;;;10691:11;;;10685:18;10672:11;;;10665:39;10637:2;10630:10;10601:113;;;-1:-1:-1;;10748:1:11;10730:16;;10723:27;10506:250::o;10761:270::-;10802:3;10840:5;10834:12;10867:6;10862:3;10855:19;10883:76;10952:6;10945:4;10940:3;10936:14;10929:4;10922:5;10918:16;10883:76;:::i;:::-;11013:2;10992:15;-1:-1:-1;;10988:29:11;10979:39;;;;11020:4;10975:50;;10761:270;-1:-1:-1;;10761:270:11:o;11036:2050::-;11269:2;11258:9;11251:21;11281:52;11329:2;11318:9;11314:18;11305:6;11299:13;3833:8;3822:20;3810:33;;3757:92;11281:52;11232:4;11380;11372:6;11368:17;11362:24;11395:51;11442:2;11431:9;11427:18;11413:12;6817:2;6806:21;6794:34;;6741:93;11395:51;-1:-1:-1;11495:2:11;11483:15;;11477:22;10388:6;10377:18;;11557:3;11542:19;;10365:31;-1:-1:-1;11611:2:11;11599:15;;11593:22;10483:10;10472:22;;11673:3;11658:19;;10460:35;-1:-1:-1;11727:3:11;11715:16;;11709:23;10483:10;10472:22;;11790:3;11775:19;;10460:35;-1:-1:-1;11844:3:11;11832:16;;11826:23;10483:10;10472:22;;11907:3;11892:19;;10460:35;11858:54;11961:3;11953:6;11949:16;11943:23;11985:3;11997:54;12047:2;12036:9;12032:18;12016:14;-1:-1:-1;;;;;435:54:11;423:67;;369:127;11997:54;12100:3;12092:6;12088:16;12082:23;12060:45;;12124:3;12136:53;12185:2;12174:9;12170:18;12154:14;6817:2;6806:21;6794:34;;6741:93;12136:53;12226:15;;;12220:22;;-1:-1:-1;12261:3:11;;12273:53;12307:18;;;12220:22;6817:2;6806:21;6794:34;;6741:93;12273:53;12351:15;;12345:22;12386:3;12405:18;;;12398:30;;;;12465:15;;;12459:22;;-1:-1:-1;12500:3:11;;12512:54;12547:18;;;12459:22;-1:-1:-1;;;;;435:54:11;423:67;;369:127;12512:54;12591:15;;12585:22;12626:3;12645:18;;;12638:30;;;;12705:15;;;12699:22;;-1:-1:-1;12740:6:11;;12755:53;12789:18;;;12699:22;10388:6;10377:18;10365:31;;10312:90;12755:53;12846:15;;12840:22;12893:3;12878:19;;12871:31;;;;12840:22;-1:-1:-1;12922:54:11;12971:3;12956:19;;12840:22;12922:54;:::i;:::-;12911:65;;13023:9;13018:3;13014:19;13007:4;12996:9;12992:20;12985:49;13051:29;13076:3;13068:6;13051:29;:::i;:::-;13043:37;11036:2050;-1:-1:-1;;;;;11036:2050:11:o;13091:179::-;13126:3;13168:1;13150:16;13147:23;13144:120;;;13214:1;13211;13208;13193:23;-1:-1:-1;13251:1:11;13245:8;13240:3;13236:18;13144:120;13091:179;:::o;13275:671::-;13314:3;13356:4;13338:16;13335:26;13332:39;;;13275:671;:::o;13332:39::-;13398:2;13392:9;-1:-1:-1;;13463:16:11;13459:25;;13456:1;13392:9;13435:50;13514:4;13508:11;13538:16;13573:18;13644:2;13637:4;13629:6;13625:17;13622:25;13617:2;13609:6;13606:14;13603:45;13600:58;;;13651:5;;;;;13275:671;:::o;13600:58::-;13688:6;13682:4;13678:17;13667:28;;13724:3;13718:10;13751:2;13743:6;13740:14;13737:27;;;13757:5;;;;;;13275:671;:::o;13737:27::-;13841:2;13822:16;13816:4;13812:27;13808:36;13801:4;13792:6;13787:3;13783:16;13779:27;13776:69;13773:82;;;13848:5;;;;;;13275:671;:::o;13773:82::-;13864:57;13915:4;13906:6;13898;13894:19;13890:30;13884:4;13864:57;:::i;:::-;-1:-1:-1;13937:3:11;;13275:671;-1:-1:-1;;;;;13275:671:11:o;13951:219::-;14100:2;14089:9;14082:21;14063:4;14120:44;14160:2;14149:9;14145:18;14137:6;14120:44;:::i;14632:138::-;14711:13;;14733:31;14711:13;14733:31;:::i;14775:251::-;14845:6;14898:2;14886:9;14877:7;14873:23;14869:32;14866:52;;;14914:1;14911;14904:12;14866:52;14946:9;14940:16;14965:31;14990:5;14965:31;:::i;15220:134::-;15297:13;;15319:29;15297:13;15319:29;:::i;15359:164::-;15436:13;;15489:1;15478:20;;;15468:31;;15458:59;;15513:1;15510;15503:12;15528:192;15607:13;;15660:34;15649:46;;15639:57;;15629:85;;15710:1;15707;15700:12;15725:2024;15830:6;15883:3;15871:9;15862:7;15858:23;15854:33;15851:53;;;15900:1;15897;15890:12;15851:53;15926:17;;:::i;:::-;15966:37;15993:9;15966:37;:::i;:::-;15959:5;15952:52;16036:47;16079:2;16068:9;16064:18;16036:47;:::i;:::-;16031:2;16024:5;16020:14;16013:71;16116:47;16159:2;16148:9;16144:18;16116:47;:::i;:::-;16111:2;16104:5;16100:14;16093:71;16196:47;16239:2;16228:9;16224:18;16196:47;:::i;:::-;16191:2;16184:5;16180:14;16173:71;16277:48;16320:3;16309:9;16305:19;16277:48;:::i;:::-;16271:3;16264:5;16260:15;16253:73;16359:49;16403:3;16392:9;16388:19;16359:49;:::i;:::-;16353:3;16346:5;16342:15;16335:74;16442:50;16487:3;16476:9;16472:19;16442:50;:::i;:::-;16436:3;16429:5;16425:15;16418:75;16526:49;16570:3;16559:9;16555:19;16526:49;:::i;:::-;16520:3;16513:5;16509:15;16502:74;16595:3;16630:48;16674:2;16663:9;16659:18;16630:48;:::i;:::-;16614:14;;;16607:72;16698:3;16733:49;16763:18;;;16733:49;:::i;:::-;16717:14;;;16710:73;16802:3;16837:48;16866:18;;;16837:48;:::i;:::-;16821:14;;;16814:72;16905:3;16940:48;16969:18;;;16940:48;:::i;:::-;16924:14;;;16917:72;17008:3;17043:48;17072:18;;;17043:48;:::i;:::-;17027:14;;;17020:72;17111:3;17146:48;17175:18;;;17146:48;:::i;:::-;17130:14;;;17123:72;17214:3;17249:48;17278:18;;;17249:48;:::i;:::-;17233:14;;;17226:72;17317:3;17352:49;17382:18;;;17352:49;:::i;:::-;17336:14;;;17329:73;17421:3;17456:49;17486:18;;;17456:49;:::i;:::-;17440:14;;;17433:73;17526:3;17562:50;17592:19;;;17562:50;:::i;:::-;17545:15;;;17538:75;17633:3;17669:49;17698:19;;;17669:49;:::i;:::-;17652:15;;;17645:74;17656:5;15725:2024;-1:-1:-1;;;15725:2024:11:o;18577:237::-;18649:9;;;18616:7;18674:9;;-1:-1:-1;;;18685:18:11;;18670:34;18667:60;;;18707:18;;:::i;:::-;18780:1;18771:7;18766:16;18763:1;18760:23;18756:1;18749:9;18746:38;18736:72;;18788:18;;:::i;18819:193::-;18858:1;18884;18874:35;;18889:18;;:::i;:::-;-1:-1:-1;;;18925:18:11;;-1:-1:-1;;18945:13:11;;18921:38;18918:64;;;18962:18;;:::i;:::-;-1:-1:-1;18996:10:11;;18819:193::o;20541:287::-;20670:3;20708:6;20702:13;20724:66;20783:6;20778:3;20771:4;20763:6;20759:17;20724:66;:::i;:::-;20806:16;;;;;20541:287;-1:-1:-1;;20541:287:11:o"},"gasEstimates":{"creation":{"codeDepositCost":"1343400","executionCost":"infinite","totalCost":"infinite"},"external":{"addPerpetual(uint24)":"infinite","approveAmountForPerpetualMgnTkn(uint256,uint24)":"infinite","getMarginAccount(uint24)":"infinite","getMaxTradeAmount(uint24,bool)":"infinite","mgnTknAddrOfPool(uint8)":"2573","orderBookOfPerpetual(uint24)":"2559","owner()":"2365","perpetualProxy()":"infinite","postOrder(uint24,int256,uint16,uint32)":"infinite","renounceOwnership()":"28137","transferMarginCollateralTo(uint24)":"infinite","transferOwnership(address)":"infinite"},"internal":{"_fromDec18(int256)":"infinite","_fromInt(int256)":"infinite","toDec18(int128)":"infinite"}},"methodIdentifiers":{"addPerpetual(uint24)":"b1bd155e","approveAmountForPerpetualMgnTkn(uint256,uint24)":"5db35a04","getMarginAccount(uint24)":"9fbb0a3b","getMaxTradeAmount(uint24,bool)":"0df3ad4c","mgnTknAddrOfPool(uint8)":"ba0e9399","orderBookOfPerpetual(uint24)":"0330d0c0","owner()":"8da5cb5b","perpetualProxy()":"3e99a53b","postOrder(uint24,int256,uint16,uint32)":"62bcc258","renounceOwnership()":"715018a6","transferMarginCollateralTo(uint24)":"230f2384","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_perpetualProxy\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint24\",\"name\":\"perpetualId\",\"type\":\"uint24\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountDecN\",\"type\":\"uint256\"}],\"name\":\"MarginTokenSent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint24\",\"name\":\"perpetualId\",\"type\":\"uint24\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"lobAddr\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"mgnTknAddrOfPool\",\"type\":\"address\"}],\"name\":\"PerpetualAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"PerpetualOrderSubmitFailed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amountDec18\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"leverageTDR\",\"type\":\"uint16\"}],\"name\":\"PerpetualOrderSubmitSuccess\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint24\",\"name\":\"_iPerpetualId\",\"type\":\"uint24\"}],\"name\":\"addPerpetual\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint24\",\"name\":\"_iPerpetualId\",\"type\":\"uint24\"}],\"name\":\"approveAmountForPerpetualMgnTkn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint24\",\"name\":\"_iPerpetualId\",\"type\":\"uint24\"}],\"name\":\"getMarginAccount\",\"outputs\":[{\"components\":[{\"internalType\":\"int256\",\"name\":\"lockedInValueQCD18\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cashCCD18\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"positionSizeBCD18\",\"type\":\"int256\"},{\"internalType\":\"bytes16\",\"name\":\"positionId\",\"type\":\"bytes16\"}],\"internalType\":\"struct D18MarginAccount\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint24\",\"name\":\"_iPerpetualId\",\"type\":\"uint24\"},{\"internalType\":\"bool\",\"name\":\"isBuy\",\"type\":\"bool\"}],\"name\":\"getMaxTradeAmount\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"name\":\"mgnTknAddrOfPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"name\":\"orderBookOfPerpetual\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"perpetualProxy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint24\",\"name\":\"_iPerpetualId\",\"type\":\"uint24\"},{\"internalType\":\"int256\",\"name\":\"_amountDec18\",\"type\":\"int256\"},{\"internalType\":\"uint16\",\"name\":\"_leverageTDR\",\"type\":\"uint16\"},{\"internalType\":\"uint32\",\"name\":\"_flags\",\"type\":\"uint32\"}],\"name\":\"postOrder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint24\",\"name\":\"_iPerpetualId\",\"type\":\"uint24\"}],\"name\":\"transferMarginCollateralTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addPerpetual(uint24)\":{\"params\":{\"_iPerpetualId\":\"id of the perpetual to be traded\"}},\"approveAmountForPerpetualMgnTkn(uint256,uint24)\":{\"params\":{\"_amount\":\"spend amount\"}},\"getMarginAccount(uint24)\":{\"params\":{\"_iPerpetualId\":\"id of perpetual \"}},\"getMaxTradeAmount(uint24,bool)\":{\"params\":{\"_iPerpetualId\":\"id of perpetual\",\"isBuy\":\"true if we go long, false if we go short\"},\"returns\":{\"_0\":\"signed maximal trade size (negative if resulting position is short, positive otherwise)\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"postOrder(uint24,int256,uint16,uint32)\":{\"params\":{\"_amountDec18\":\"signed amount to be traded in base currency\",\"_flags\":\"order-flags, can be left 0 for a market order\",\"_iPerpetualId\":\"perpetual id for which we execute\",\"_leverageTDR\":\"leverage two-digit-integer), e.g. 210 for 2.1x leverage\"},\"returns\":{\"_0\":\"true if posting order succeeded\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addPerpetual(uint24)\":{\"notice\":\"Anyone add a perpetual. Needs to be set once per perpetual. The function sets the order book address for an existing perpetual-id and ensures the margin token address is stored. \"},\"approveAmountForPerpetualMgnTkn(uint256,uint24)\":{\"notice\":\"Approve the margin-token to be spent by perpetuals contract. Required to trade.\"},\"getMarginAccount(uint24)\":{\"notice\":\"Return margin account information in decimal 18 format\"},\"getMaxTradeAmount(uint24,bool)\":{\"notice\":\"Get maximal trade amount for the contract accounting for its current position\"},\"postOrder(uint24,int256,uint16,uint32)\":{\"notice\":\"Post an order to the order book. Order will be executed by external \\\"executors\\\". * Available order flags:  uint32 internal constant MASK_CLOSE_ONLY = 0x80000000;  uint32 internal constant MASK_MARKET_ORDER = 0x40000000;  uint32 internal constant MASK_STOP_ORDER = 0x20000000;  uint32 internal constant MASK_FILL_OR_KILL = 0x10000000;  uint32 internal constant MASK_KEEP_POS_LEVERAGE = 0x08000000;  uint32 internal constant MASK_LIMIT_ORDER = 0x04000000;\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/OnChainTrader.sol\":\"OnChainTrader\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":512},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20Upgradeable {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x6777f3fccb5dab95a9088ef62c41bee0198fd92e50d7c94f0e3733788af4079e\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20Upgradeable.sol\\\";\\nimport \\\"../../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20Upgradeable {\\n    using AddressUpgradeable for address;\\n\\n    function safeTransfer(\\n        IERC20Upgradeable token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(\\n        IERC20Upgradeable token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(\\n        IERC20Upgradeable token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(\\n        IERC20Upgradeable token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(\\n        IERC20Upgradeable token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            uint256 newAllowance = oldAllowance - value;\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20Upgradeable token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) {\\n            // Return data is optional\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x3e26a49d2fa5ef8338b8a9467c91e54f417cb07e849b1cc0f4ebc4d2a147938e\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x55cf2bd9fc76704ddcdc19834cd288b7de00fc0f298a40ea16a954ae8991db2d\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"./extensions/IERC20Metadata.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20, IERC20Metadata {\\n    mapping(address => uint256) private _balances;\\n\\n    mapping(address => mapping(address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * The default value of {decimals} is 18. To select a different value for\\n     * {decimals} you should overload it.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\\n     * overridden;\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual override returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) public virtual override returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, amount);\\n        _transfer(from, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, _allowances[owner][spender] + addedValue);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        uint256 currentAllowance = _allowances[owner][spender];\\n        require(currentAllowance >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\n        unchecked {\\n            _approve(owner, spender, currentAllowance - subtractedValue);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves `amount` of tokens from `sender` to `recipient`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     */\\n    function _transfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {\\n        require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, amount);\\n\\n        uint256 fromBalance = _balances[from];\\n        require(fromBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        unchecked {\\n            _balances[from] = fromBalance - amount;\\n        }\\n        _balances[to] += amount;\\n\\n        emit Transfer(from, to, amount);\\n\\n        _afterTokenTransfer(from, to, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply += amount;\\n        _balances[account] += amount;\\n        emit Transfer(address(0), account, amount);\\n\\n        _afterTokenTransfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        uint256 accountBalance = _balances[account];\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[account] = accountBalance - amount;\\n        }\\n        _totalSupply -= amount;\\n\\n        emit Transfer(account, address(0), amount);\\n\\n        _afterTokenTransfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Spend `amount` form the allowance of `owner` toward `spender`.\\n     *\\n     * Does not update the allowance amount in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Might emit an {Approval} event.\\n     */\\n    function _spendAllowance(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            require(currentAllowance >= amount, \\\"ERC20: insufficient allowance\\\");\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - amount);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * has been transferred to `to`.\\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n}\\n\",\"keccak256\":\"0xdadd41acb749920eccf40aeaa8d291adf9751399a7343561bad13e7a8d99be0b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/IClientOrder.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.19;\\n\\n/**\\n * @title Trader/Broker facing order struct\\n * @notice this order struct is sent to the limit order book and converted into an IPerpetualOrder\\n */\\ninterface IClientOrder {\\n    struct ClientOrder {\\n        uint24 iPerpetualId; // unique id of the perpetual\\n        int128 fLimitPrice; // order will not execute if realized price is above (buy) or below (sell) this price\\n        uint16 leverageTDR; // leverage, set to 0 if deposit margin and trade separate; format: two-digit integer (e.g., 12.34 -> 1234)\\n        uint32 executionTimestamp; // the order will not be executed before this timestamp, allows TWAP orders\\n        uint32 flags; // Order-flags are specified in OrderFlags.sol\\n        uint32 iDeadline; // order will not be executed after this deadline\\n        address brokerAddr; // can be empty, address of the broker\\n        int128 fTriggerPrice; // trigger price for stop-orders|0. Order can be executed if the mark price is below this price (sell order) or above (buy)\\n        int128 fAmount; // signed amount of base-currency. Will be rounded to lot size\\n        bytes32 parentChildDigest1; // see notice in LimitOrderBook.sol\\n        address traderAddr; // address of the trader\\n        bytes32 parentChildDigest2; // see notice in LimitOrderBook.sol\\n        uint16 brokerFeeTbps; // broker fee in tenth of a basis point\\n        bytes brokerSignature; // signature, can be empty if no brokerAddr provided\\n        //address executorAddr; <- will be set by LimitOrderBook\\n        //uint64 submittedBlock <- will be set by LimitOrderBook\\n    }\\n}\\n\",\"keccak256\":\"0xfe89524f4083b40b5c5ba58d3da8c14f13050cd776ec1032c59f969614fff16d\",\"license\":\"MIT\"},\"contracts/ILiquidityPoolData.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.19;\\n\\ninterface ILiquidityPoolData {\\n\\n    struct LiquidityPoolData {\\n            bool isRunning; // state\\n            uint8 iPerpetualCount; // state\\n            uint8 id; // parameter: index, starts from 1\\n            int32 fCeilPnLShare; // parameter: cap on the share of PnL allocated to liquidity providers\\n            uint8 marginTokenDecimals; // parameter: decimals of margin token, inferred from token contract\\n            uint16 iTargetPoolSizeUpdateTime; //parameter: timestamp in seconds. How often we update the pool's target size\\n            address marginTokenAddress; //parameter: address of the margin token\\n            // -----\\n            uint64 prevAnchor; // state: keep track of timestamp since last withdrawal was initiated\\n            int128 fRedemptionRate; // state: used for settlement in case of AMM default\\n            address shareTokenAddress; // parameter\\n            // -----\\n            int128 fPnLparticipantsCashCC; // state: addLiquidity/withdrawLiquidity + profit/loss - rebalance\\n            int128 fTargetAMMFundSize; // state: target liquidity for all perpetuals in pool (sum)\\n            // -----\\n            int128 fDefaultFundCashCC; // state: profit/loss\\n            int128 fTargetDFSize; // state: target default fund size for all perpetuals in pool\\n            // -----\\n            int128 fBrokerCollateralLotSize; // param:how much collateral do brokers deposit when providing \\\"1 lot\\\" (not trading lot)\\n            uint128 prevTokenAmount; // state\\n            // -----\\n            uint128 nextTokenAmount; // state\\n            uint128 totalSupplyShareToken; // state\\n            // -----\\n            int128 fBrokerFundCashCC; // state: amount of cash in broker fund\\n    }\\n\\n}\",\"keccak256\":\"0x2d3495679371a8c8d0c6f676ddf69ccae8d11f01022d4f3067dc0e092b03d2f7\",\"license\":\"MIT\"},\"contracts/OnChainTrader.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.19;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/ERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\\\";\\n\\nimport \\\"./IClientOrder.sol\\\";\\nimport \\\"./ILiquidityPoolData.sol\\\";\\n\\n/**\\n * @title Example contract to interact with D8X perpetuals on-chain\\n * @notice\\n * - This contract acts as a trader. The contract is ownable;\\n *   Trade executions are permissioned. The margin tokens are required\\n *   to be owned by the contract.\\n * - D8X Perpetuals use ABDK 128x128 number format. This contract has an interface that uses\\n *   a signed decimal-18 convention (decimal number 1 maps to decimal-18 number 1e18).\\n * - Ensure the perpetuals-contract is allowed to spend this contracts margin tokens (use approveAmount)\\n * - Send orders to order book via postOrder\\n * - Check positions using function getMarginAccount\\n */\\n\\n\\ninterface OrderBookContractInterface {\\n    function postOrder(IClientOrder.ClientOrder calldata _order, bytes calldata _signature)\\n        external;\\n}\\n\\ninterface PerpetualsContractInterface {\\n    \\n    function getMarginAccount(uint24 _perpetualId, address _traderAddress)\\n        external\\n        view\\n        returns (MarginAccount memory);\\n\\n    function getMaxSignedOpenTradeSizeForPos(\\n        uint24 _perpetualId,\\n        int128 _fCurrentTraderPos,\\n        bool _isBuy\\n    ) external view returns (int128);\\n\\n    function getOrderBookAddress(uint24 _perpetualId) external view returns (address);\\n    function getLiquidityPool(uint8 _poolId)\\n        external\\n        view\\n        returns (ILiquidityPoolData.LiquidityPoolData memory);\\n}\\n\\n/**\\n * @notice  D8X Perpetual Data structure to store user margin information.\\n */\\nstruct MarginAccount {\\n    int128 fLockedInValueQC; // unrealized value locked-in when trade occurs in\\n    int128 fCashCC; // cash in collateral currency (base, quote, or quanto)\\n    int128 fPositionBC; // position in base currency (e.g., 1 BTC for BTCUSD)\\n    int128 fUnitAccumulatedFundingStart; // accumulated funding rate\\n    uint64 iLastOpenTimestamp; // timestamp in seconds when the position was last opened/increased\\n    uint16 feeTbps; // exchange fee in tenth of a basis point\\n    uint16 brokerFeeTbps; // broker fee in tenth of a basis point\\n    bytes16 positionId; // unique id for the position (for given trader, and perpetual). Current position, zero otherwise.\\n}\\n\\n/**\\n * @notice  Data structure to return simplified and relevant margin information.\\n */\\nstruct D18MarginAccount {\\n    int256 lockedInValueQCD18; // unrealized value locked-in when trade occurs in\\n    int256 cashCCD18; // cash in collateral currency (base, quote, or quanto)\\n    int256 positionSizeBCD18; // position in base currency (e.g., 1 BTC for BTCUSD)\\n    bytes16 positionId; // unique id for the position (for given trader, and perpetual). Current position, zero otherwise.\\n}\\n\\ncontract OnChainTrader is Ownable {\\n    using SafeERC20Upgradeable for IERC20Upgradeable;\\n\\n    event PerpetualOrderSubmitFailed(string reason);\\n    event PerpetualOrderSubmitSuccess(int256 amountDec18, uint16 leverageTDR);\\n    event PerpetualAdded(uint24 perpetualId, address lobAddr, address mgnTknAddrOfPool);\\n    event MarginTokenSent(uint24 perpetualId, address to, uint256 amountDecN);\\n    address public immutable perpetualProxy;\\n    int256 private constant DECIMALS = 10**18;\\n    int128 private constant ONE_64x64 = 2**64;\\n    int128 private constant MIN_64x64 = -0x80000000000000000000000000000000;\\n    int128 private constant MAX_64x64 = 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF;\\n    int128 private constant TEN_64x64 = 0xa0000000000000000;\\n\\n    mapping (uint24 => address) public orderBookOfPerpetual;//limit order book addr\\n    \\n    // each perpetual is in a pool. Perpetuals in a pool share the margin token\\n    mapping (uint8 => address) public mgnTknAddrOfPool;\\n\\n    constructor(\\n        address _perpetualProxy\\n    ) Ownable() {\\n        perpetualProxy = _perpetualProxy;\\n    }\\n\\n    /**\\n     * Anyone add a perpetual. Needs to be set once per perpetual.\\n     * The function sets the order book address for an existing\\n     * perpetual-id and ensures the margin token address is stored. \\n     * @param _iPerpetualId id of the perpetual to be traded\\n     */\\n    function addPerpetual(uint24 _iPerpetualId) external {\\n        // set order book address\\n        address lobAddr = PerpetualsContractInterface(perpetualProxy).getOrderBookAddress(_iPerpetualId);\\n        orderBookOfPerpetual[_iPerpetualId] = lobAddr;\\n        // register margin token\\n        uint8 poolId = uint8(_iPerpetualId/100_000);\\n        if(mgnTknAddrOfPool[poolId] == address(0)) {\\n            // set margin token address for pool\\n            ILiquidityPoolData.LiquidityPoolData memory lp = \\n                PerpetualsContractInterface(perpetualProxy).getLiquidityPool(poolId);\\n            mgnTknAddrOfPool[poolId] = lp.marginTokenAddress;\\n        }\\n        emit PerpetualAdded(_iPerpetualId, lobAddr, mgnTknAddrOfPool[poolId]);\\n    }\\n\\n    /**\\n     * Approve the margin-token to be spent by perpetuals contract.\\n     * Required to trade.\\n     * @param _amount spend amount\\n     */\\n    function approveAmountForPerpetualMgnTkn(uint256 _amount, uint24 _iPerpetualId) external {\\n        uint8 poolId = uint8(_iPerpetualId/100_000);\\n        address mgnTkn = mgnTknAddrOfPool[poolId];\\n        require(mgnTkn!=address(0), \\\"set ob addrs\\\");\\n        IERC20(mgnTkn).approve(perpetualProxy, _amount);\\n    }\\n\\n    /**\\n     * Post an order to the order book. Order will be executed by\\n     * external \\\"executors\\\".\\n     * * Available order flags:\\n     *  uint32 internal constant MASK_CLOSE_ONLY = 0x80000000;\\n     *  uint32 internal constant MASK_MARKET_ORDER = 0x40000000;\\n     *  uint32 internal constant MASK_STOP_ORDER = 0x20000000;\\n     *  uint32 internal constant MASK_FILL_OR_KILL = 0x10000000;\\n     *  uint32 internal constant MASK_KEEP_POS_LEVERAGE = 0x08000000;\\n     *  uint32 internal constant MASK_LIMIT_ORDER = 0x04000000;\\n     * @param _iPerpetualId perpetual id for which we execute\\n     * @param _amountDec18 signed amount to be traded in base currency\\n     * @param _leverageTDR leverage two-digit-integer), e.g. 210 for 2.1x leverage\\n     * @param _flags order-flags, can be left 0 for a market order\\n     * @return true if posting order succeeded\\n     */\\n    function postOrder(uint24 _iPerpetualId, int256 _amountDec18, uint16 _leverageTDR, uint32 _flags) onlyOwner external returns (bool) {\\n         address orderBookAddr = orderBookOfPerpetual[_iPerpetualId];\\n         require(orderBookAddr!=address(0), \\\"order book unknown\\\");\\n        int128 fTradeAmount = _fromDec18(_amountDec18);\\n        if (_flags==0) {\\n             _flags = 0x40000000;//market order\\n        }\\n        IClientOrder.ClientOrder memory order;\\n        order.flags = _flags;\\n        order.iPerpetualId = _iPerpetualId;\\n        order.traderAddr = address(this);\\n        order.fAmount = fTradeAmount;\\n        order.fLimitPrice = fTradeAmount > 0 ? MAX_64x64 : int128(0);\\n        order.leverageTDR = _leverageTDR; // 0 if deposit and trade separate\\n        order.iDeadline = uint32(block.timestamp + 86400 * 3);\\n        order.executionTimestamp = uint32(block.timestamp);\\n\\n        // submit order\\n        try OrderBookContractInterface(orderBookAddr).postOrder(order, bytes(\\\"\\\")) {\\n            emit PerpetualOrderSubmitSuccess(_amountDec18, _leverageTDR);\\n            return true;\\n        } catch Error(string memory reason) {\\n            emit PerpetualOrderSubmitFailed(reason);\\n            return false;\\n        }\\n    }\\n\\n    function transferMarginCollateralTo(uint24 _iPerpetualId) onlyOwner external {\\n        uint8 poolId = uint8(_iPerpetualId/100_000);\\n        address mgnTknAddr = mgnTknAddrOfPool[poolId];\\n        IERC20Upgradeable marginToken = IERC20Upgradeable(mgnTknAddr);\\n        uint256 balance = marginToken.balanceOf(address(this));\\n        // transfer the margin token to the user\\n        marginToken.safeTransfer(msg.sender, balance);\\n        emit MarginTokenSent(_iPerpetualId, msg.sender, balance);\\n    }\\n\\n    /**\\n     * Return margin account information in decimal 18 format\\n     * @param _iPerpetualId id of perpetual \\n     */\\n    function getMarginAccount(uint24 _iPerpetualId) external view returns (D18MarginAccount memory) {\\n        MarginAccount memory acc = PerpetualsContractInterface(perpetualProxy).getMarginAccount(\\n            _iPerpetualId,\\n            address(this)\\n        );\\n        D18MarginAccount memory accD18;\\n        accD18.lockedInValueQCD18 = toDec18(acc.fLockedInValueQC); // unrealized value locked-in when trade occmurs: price * position size\\n        accD18.cashCCD18 = toDec18(acc.fCashCC); // cash in collateral currency (base, quote, or quanto)\\n        accD18.positionSizeBCD18 = toDec18(acc.fPositionBC); // position in base currency (e.g., 1 BTC for BTCUSD)\\n        accD18.positionId = acc.positionId; // unique id for the position (for given trader, and perpetual).\\n        return accD18;\\n    }\\n\\n    /**\\n     * Get maximal trade amount for the contract accounting for its current position\\n     * @param _iPerpetualId id of perpetual\\n     * @param isBuy true if we go long, false if we go short\\n     * @return signed maximal trade size (negative if resulting position is short, positive otherwise)\\n     */\\n    function getMaxTradeAmount(uint24 _iPerpetualId, bool isBuy) external view returns (int256) {\\n        MarginAccount memory acc = PerpetualsContractInterface(perpetualProxy).getMarginAccount(\\n            _iPerpetualId,\\n            address(this)\\n        );\\n        int128 fSize = PerpetualsContractInterface(perpetualProxy).getMaxSignedOpenTradeSizeForPos(\\n            _iPerpetualId,\\n            acc.fPositionBC,\\n            isBuy\\n        );\\n\\n        return toDec18(fSize);\\n    }\\n\\n    /**\\n     * Convert signed decimal-18 number to ABDK-128x128 format\\n     * @param x number decimal-18\\n     * @return ABDK-128x128 number\\n     */\\n    function _fromDec18(int256 x) internal pure returns (int128) {\\n        int256 result = (x * ONE_64x64) / DECIMALS;\\n        require(x >= MIN_64x64 && x <= MAX_64x64, \\\"result out of range\\\");\\n        return int128(result);\\n    }\\n\\n    /**\\n     * Convert ABDK-128x128 format to signed decimal-18 number\\n     * @param x number in ABDK-128x128 format\\n     * @return decimal 18 (signed)\\n     */\\n    function toDec18(int128 x) internal pure returns (int256) {\\n        return (int256(x) * DECIMALS) / ONE_64x64;\\n    }\\n\\n    /**\\n     * Convert signed 256-bit integer number into signed 64.64-bit fixed point\\n     * number.  Revert on overflow.\\n     *\\n     * @param x signed 256-bit integer number\\n     * @return signed 64.64-bit fixed point number\\n     */\\n    function _fromInt(int256 x) internal pure returns (int128) {\\n        require(x >= -0x8000000000000000 && x <= 0x7FFFFFFFFFFFFFFF, \\\"ABDK.fromInt\\\");\\n        return int128(x << 64);\\n    }\\n}\\n\",\"keccak256\":\"0xf9ade1ccf91708af5a63353baa15f5ffce59322a718d7379109696523efe5825\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":552,"contract":"contracts/OnChainTrader.sol:OnChainTrader","label":"_owner","offset":0,"slot":"0","type":"t_address"},{"astId":1576,"contract":"contracts/OnChainTrader.sol:OnChainTrader","label":"orderBookOfPerpetual","offset":0,"slot":"1","type":"t_mapping(t_uint24,t_address)"},{"astId":1580,"contract":"contracts/OnChainTrader.sol:OnChainTrader","label":"mgnTknAddrOfPool","offset":0,"slot":"2","type":"t_mapping(t_uint8,t_address)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_uint24,t_address)":{"encoding":"mapping","key":"t_uint24","label":"mapping(uint24 => address)","numberOfBytes":"32","value":"t_address"},"t_mapping(t_uint8,t_address)":{"encoding":"mapping","key":"t_uint8","label":"mapping(uint8 => address)","numberOfBytes":"32","value":"t_address"},"t_uint24":{"encoding":"inplace","label":"uint24","numberOfBytes":"3"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"userdoc":{"kind":"user","methods":{"addPerpetual(uint24)":{"notice":"Anyone add a perpetual. Needs to be set once per perpetual. The function sets the order book address for an existing perpetual-id and ensures the margin token address is stored. "},"approveAmountForPerpetualMgnTkn(uint256,uint24)":{"notice":"Approve the margin-token to be spent by perpetuals contract. Required to trade."},"getMarginAccount(uint24)":{"notice":"Return margin account information in decimal 18 format"},"getMaxTradeAmount(uint24,bool)":{"notice":"Get maximal trade amount for the contract accounting for its current position"},"postOrder(uint24,int256,uint16,uint32)":{"notice":"Post an order to the order book. Order will be executed by external \"executors\". * Available order flags:  uint32 internal constant MASK_CLOSE_ONLY = 0x80000000;  uint32 internal constant MASK_MARKET_ORDER = 0x40000000;  uint32 internal constant MASK_STOP_ORDER = 0x20000000;  uint32 internal constant MASK_FILL_OR_KILL = 0x10000000;  uint32 internal constant MASK_KEEP_POS_LEVERAGE = 0x08000000;  uint32 internal constant MASK_LIMIT_ORDER = 0x04000000;"}},"version":1}},"OrderBookContractInterface":{"abi":[{"inputs":[{"components":[{"internalType":"uint24","name":"iPerpetualId","type":"uint24"},{"internalType":"int128","name":"fLimitPrice","type":"int128"},{"internalType":"uint16","name":"leverageTDR","type":"uint16"},{"internalType":"uint32","name":"executionTimestamp","type":"uint32"},{"internalType":"uint32","name":"flags","type":"uint32"},{"internalType":"uint32","name":"iDeadline","type":"uint32"},{"internalType":"address","name":"brokerAddr","type":"address"},{"internalType":"int128","name":"fTriggerPrice","type":"int128"},{"internalType":"int128","name":"fAmount","type":"int128"},{"internalType":"bytes32","name":"parentChildDigest1","type":"bytes32"},{"internalType":"address","name":"traderAddr","type":"address"},{"internalType":"bytes32","name":"parentChildDigest2","type":"bytes32"},{"internalType":"uint16","name":"brokerFeeTbps","type":"uint16"},{"internalType":"bytes","name":"brokerSignature","type":"bytes"}],"internalType":"struct IClientOrder.ClientOrder","name":"_order","type":"tuple"},{"internalType":"bytes","name":"_signature","type":"bytes"}],"name":"postOrder","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"title":"Example contract to interact with D8X perpetuals on-chain","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"postOrder((uint24,int128,uint16,uint32,uint32,uint32,address,int128,int128,bytes32,address,bytes32,uint16,bytes),bytes)":"489cc5e9"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"uint24\",\"name\":\"iPerpetualId\",\"type\":\"uint24\"},{\"internalType\":\"int128\",\"name\":\"fLimitPrice\",\"type\":\"int128\"},{\"internalType\":\"uint16\",\"name\":\"leverageTDR\",\"type\":\"uint16\"},{\"internalType\":\"uint32\",\"name\":\"executionTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"flags\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"iDeadline\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"brokerAddr\",\"type\":\"address\"},{\"internalType\":\"int128\",\"name\":\"fTriggerPrice\",\"type\":\"int128\"},{\"internalType\":\"int128\",\"name\":\"fAmount\",\"type\":\"int128\"},{\"internalType\":\"bytes32\",\"name\":\"parentChildDigest1\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"traderAddr\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"parentChildDigest2\",\"type\":\"bytes32\"},{\"internalType\":\"uint16\",\"name\":\"brokerFeeTbps\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"brokerSignature\",\"type\":\"bytes\"}],\"internalType\":\"struct IClientOrder.ClientOrder\",\"name\":\"_order\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"postOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Example contract to interact with D8X perpetuals on-chain\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"- This contract acts as a trader. The contract is ownable;   Trade executions are permissioned. The margin tokens are required   to be owned by the contract. - D8X Perpetuals use ABDK 128x128 number format. This contract has an interface that uses   a signed decimal-18 convention (decimal number 1 maps to decimal-18 number 1e18). - Ensure the perpetuals-contract is allowed to spend this contracts margin tokens (use approveAmount) - Send orders to order book via postOrder - Check positions using function getMarginAccount\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/OnChainTrader.sol\":\"OrderBookContractInterface\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":512},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20Upgradeable {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x6777f3fccb5dab95a9088ef62c41bee0198fd92e50d7c94f0e3733788af4079e\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20Upgradeable.sol\\\";\\nimport \\\"../../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20Upgradeable {\\n    using AddressUpgradeable for address;\\n\\n    function safeTransfer(\\n        IERC20Upgradeable token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(\\n        IERC20Upgradeable token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(\\n        IERC20Upgradeable token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(\\n        IERC20Upgradeable token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(\\n        IERC20Upgradeable token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            uint256 newAllowance = oldAllowance - value;\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20Upgradeable token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) {\\n            // Return data is optional\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x3e26a49d2fa5ef8338b8a9467c91e54f417cb07e849b1cc0f4ebc4d2a147938e\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x55cf2bd9fc76704ddcdc19834cd288b7de00fc0f298a40ea16a954ae8991db2d\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"./extensions/IERC20Metadata.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20, IERC20Metadata {\\n    mapping(address => uint256) private _balances;\\n\\n    mapping(address => mapping(address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * The default value of {decimals} is 18. To select a different value for\\n     * {decimals} you should overload it.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\\n     * overridden;\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual override returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) public virtual override returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, amount);\\n        _transfer(from, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, _allowances[owner][spender] + addedValue);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        uint256 currentAllowance = _allowances[owner][spender];\\n        require(currentAllowance >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\n        unchecked {\\n            _approve(owner, spender, currentAllowance - subtractedValue);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves `amount` of tokens from `sender` to `recipient`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     */\\n    function _transfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {\\n        require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, amount);\\n\\n        uint256 fromBalance = _balances[from];\\n        require(fromBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        unchecked {\\n            _balances[from] = fromBalance - amount;\\n        }\\n        _balances[to] += amount;\\n\\n        emit Transfer(from, to, amount);\\n\\n        _afterTokenTransfer(from, to, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply += amount;\\n        _balances[account] += amount;\\n        emit Transfer(address(0), account, amount);\\n\\n        _afterTokenTransfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        uint256 accountBalance = _balances[account];\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[account] = accountBalance - amount;\\n        }\\n        _totalSupply -= amount;\\n\\n        emit Transfer(account, address(0), amount);\\n\\n        _afterTokenTransfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Spend `amount` form the allowance of `owner` toward `spender`.\\n     *\\n     * Does not update the allowance amount in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Might emit an {Approval} event.\\n     */\\n    function _spendAllowance(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            require(currentAllowance >= amount, \\\"ERC20: insufficient allowance\\\");\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - amount);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * has been transferred to `to`.\\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n}\\n\",\"keccak256\":\"0xdadd41acb749920eccf40aeaa8d291adf9751399a7343561bad13e7a8d99be0b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/IClientOrder.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.19;\\n\\n/**\\n * @title Trader/Broker facing order struct\\n * @notice this order struct is sent to the limit order book and converted into an IPerpetualOrder\\n */\\ninterface IClientOrder {\\n    struct ClientOrder {\\n        uint24 iPerpetualId; // unique id of the perpetual\\n        int128 fLimitPrice; // order will not execute if realized price is above (buy) or below (sell) this price\\n        uint16 leverageTDR; // leverage, set to 0 if deposit margin and trade separate; format: two-digit integer (e.g., 12.34 -> 1234)\\n        uint32 executionTimestamp; // the order will not be executed before this timestamp, allows TWAP orders\\n        uint32 flags; // Order-flags are specified in OrderFlags.sol\\n        uint32 iDeadline; // order will not be executed after this deadline\\n        address brokerAddr; // can be empty, address of the broker\\n        int128 fTriggerPrice; // trigger price for stop-orders|0. Order can be executed if the mark price is below this price (sell order) or above (buy)\\n        int128 fAmount; // signed amount of base-currency. Will be rounded to lot size\\n        bytes32 parentChildDigest1; // see notice in LimitOrderBook.sol\\n        address traderAddr; // address of the trader\\n        bytes32 parentChildDigest2; // see notice in LimitOrderBook.sol\\n        uint16 brokerFeeTbps; // broker fee in tenth of a basis point\\n        bytes brokerSignature; // signature, can be empty if no brokerAddr provided\\n        //address executorAddr; <- will be set by LimitOrderBook\\n        //uint64 submittedBlock <- will be set by LimitOrderBook\\n    }\\n}\\n\",\"keccak256\":\"0xfe89524f4083b40b5c5ba58d3da8c14f13050cd776ec1032c59f969614fff16d\",\"license\":\"MIT\"},\"contracts/ILiquidityPoolData.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.19;\\n\\ninterface ILiquidityPoolData {\\n\\n    struct LiquidityPoolData {\\n            bool isRunning; // state\\n            uint8 iPerpetualCount; // state\\n            uint8 id; // parameter: index, starts from 1\\n            int32 fCeilPnLShare; // parameter: cap on the share of PnL allocated to liquidity providers\\n            uint8 marginTokenDecimals; // parameter: decimals of margin token, inferred from token contract\\n            uint16 iTargetPoolSizeUpdateTime; //parameter: timestamp in seconds. How often we update the pool's target size\\n            address marginTokenAddress; //parameter: address of the margin token\\n            // -----\\n            uint64 prevAnchor; // state: keep track of timestamp since last withdrawal was initiated\\n            int128 fRedemptionRate; // state: used for settlement in case of AMM default\\n            address shareTokenAddress; // parameter\\n            // -----\\n            int128 fPnLparticipantsCashCC; // state: addLiquidity/withdrawLiquidity + profit/loss - rebalance\\n            int128 fTargetAMMFundSize; // state: target liquidity for all perpetuals in pool (sum)\\n            // -----\\n            int128 fDefaultFundCashCC; // state: profit/loss\\n            int128 fTargetDFSize; // state: target default fund size for all perpetuals in pool\\n            // -----\\n            int128 fBrokerCollateralLotSize; // param:how much collateral do brokers deposit when providing \\\"1 lot\\\" (not trading lot)\\n            uint128 prevTokenAmount; // state\\n            // -----\\n            uint128 nextTokenAmount; // state\\n            uint128 totalSupplyShareToken; // state\\n            // -----\\n            int128 fBrokerFundCashCC; // state: amount of cash in broker fund\\n    }\\n\\n}\",\"keccak256\":\"0x2d3495679371a8c8d0c6f676ddf69ccae8d11f01022d4f3067dc0e092b03d2f7\",\"license\":\"MIT\"},\"contracts/OnChainTrader.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.19;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/ERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\\\";\\n\\nimport \\\"./IClientOrder.sol\\\";\\nimport \\\"./ILiquidityPoolData.sol\\\";\\n\\n/**\\n * @title Example contract to interact with D8X perpetuals on-chain\\n * @notice\\n * - This contract acts as a trader. The contract is ownable;\\n *   Trade executions are permissioned. The margin tokens are required\\n *   to be owned by the contract.\\n * - D8X Perpetuals use ABDK 128x128 number format. This contract has an interface that uses\\n *   a signed decimal-18 convention (decimal number 1 maps to decimal-18 number 1e18).\\n * - Ensure the perpetuals-contract is allowed to spend this contracts margin tokens (use approveAmount)\\n * - Send orders to order book via postOrder\\n * - Check positions using function getMarginAccount\\n */\\n\\n\\ninterface OrderBookContractInterface {\\n    function postOrder(IClientOrder.ClientOrder calldata _order, bytes calldata _signature)\\n        external;\\n}\\n\\ninterface PerpetualsContractInterface {\\n    \\n    function getMarginAccount(uint24 _perpetualId, address _traderAddress)\\n        external\\n        view\\n        returns (MarginAccount memory);\\n\\n    function getMaxSignedOpenTradeSizeForPos(\\n        uint24 _perpetualId,\\n        int128 _fCurrentTraderPos,\\n        bool _isBuy\\n    ) external view returns (int128);\\n\\n    function getOrderBookAddress(uint24 _perpetualId) external view returns (address);\\n    function getLiquidityPool(uint8 _poolId)\\n        external\\n        view\\n        returns (ILiquidityPoolData.LiquidityPoolData memory);\\n}\\n\\n/**\\n * @notice  D8X Perpetual Data structure to store user margin information.\\n */\\nstruct MarginAccount {\\n    int128 fLockedInValueQC; // unrealized value locked-in when trade occurs in\\n    int128 fCashCC; // cash in collateral currency (base, quote, or quanto)\\n    int128 fPositionBC; // position in base currency (e.g., 1 BTC for BTCUSD)\\n    int128 fUnitAccumulatedFundingStart; // accumulated funding rate\\n    uint64 iLastOpenTimestamp; // timestamp in seconds when the position was last opened/increased\\n    uint16 feeTbps; // exchange fee in tenth of a basis point\\n    uint16 brokerFeeTbps; // broker fee in tenth of a basis point\\n    bytes16 positionId; // unique id for the position (for given trader, and perpetual). Current position, zero otherwise.\\n}\\n\\n/**\\n * @notice  Data structure to return simplified and relevant margin information.\\n */\\nstruct D18MarginAccount {\\n    int256 lockedInValueQCD18; // unrealized value locked-in when trade occurs in\\n    int256 cashCCD18; // cash in collateral currency (base, quote, or quanto)\\n    int256 positionSizeBCD18; // position in base currency (e.g., 1 BTC for BTCUSD)\\n    bytes16 positionId; // unique id for the position (for given trader, and perpetual). Current position, zero otherwise.\\n}\\n\\ncontract OnChainTrader is Ownable {\\n    using SafeERC20Upgradeable for IERC20Upgradeable;\\n\\n    event PerpetualOrderSubmitFailed(string reason);\\n    event PerpetualOrderSubmitSuccess(int256 amountDec18, uint16 leverageTDR);\\n    event PerpetualAdded(uint24 perpetualId, address lobAddr, address mgnTknAddrOfPool);\\n    event MarginTokenSent(uint24 perpetualId, address to, uint256 amountDecN);\\n    address public immutable perpetualProxy;\\n    int256 private constant DECIMALS = 10**18;\\n    int128 private constant ONE_64x64 = 2**64;\\n    int128 private constant MIN_64x64 = -0x80000000000000000000000000000000;\\n    int128 private constant MAX_64x64 = 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF;\\n    int128 private constant TEN_64x64 = 0xa0000000000000000;\\n\\n    mapping (uint24 => address) public orderBookOfPerpetual;//limit order book addr\\n    \\n    // each perpetual is in a pool. Perpetuals in a pool share the margin token\\n    mapping (uint8 => address) public mgnTknAddrOfPool;\\n\\n    constructor(\\n        address _perpetualProxy\\n    ) Ownable() {\\n        perpetualProxy = _perpetualProxy;\\n    }\\n\\n    /**\\n     * Anyone add a perpetual. Needs to be set once per perpetual.\\n     * The function sets the order book address for an existing\\n     * perpetual-id and ensures the margin token address is stored. \\n     * @param _iPerpetualId id of the perpetual to be traded\\n     */\\n    function addPerpetual(uint24 _iPerpetualId) external {\\n        // set order book address\\n        address lobAddr = PerpetualsContractInterface(perpetualProxy).getOrderBookAddress(_iPerpetualId);\\n        orderBookOfPerpetual[_iPerpetualId] = lobAddr;\\n        // register margin token\\n        uint8 poolId = uint8(_iPerpetualId/100_000);\\n        if(mgnTknAddrOfPool[poolId] == address(0)) {\\n            // set margin token address for pool\\n            ILiquidityPoolData.LiquidityPoolData memory lp = \\n                PerpetualsContractInterface(perpetualProxy).getLiquidityPool(poolId);\\n            mgnTknAddrOfPool[poolId] = lp.marginTokenAddress;\\n        }\\n        emit PerpetualAdded(_iPerpetualId, lobAddr, mgnTknAddrOfPool[poolId]);\\n    }\\n\\n    /**\\n     * Approve the margin-token to be spent by perpetuals contract.\\n     * Required to trade.\\n     * @param _amount spend amount\\n     */\\n    function approveAmountForPerpetualMgnTkn(uint256 _amount, uint24 _iPerpetualId) external {\\n        uint8 poolId = uint8(_iPerpetualId/100_000);\\n        address mgnTkn = mgnTknAddrOfPool[poolId];\\n        require(mgnTkn!=address(0), \\\"set ob addrs\\\");\\n        IERC20(mgnTkn).approve(perpetualProxy, _amount);\\n    }\\n\\n    /**\\n     * Post an order to the order book. Order will be executed by\\n     * external \\\"executors\\\".\\n     * * Available order flags:\\n     *  uint32 internal constant MASK_CLOSE_ONLY = 0x80000000;\\n     *  uint32 internal constant MASK_MARKET_ORDER = 0x40000000;\\n     *  uint32 internal constant MASK_STOP_ORDER = 0x20000000;\\n     *  uint32 internal constant MASK_FILL_OR_KILL = 0x10000000;\\n     *  uint32 internal constant MASK_KEEP_POS_LEVERAGE = 0x08000000;\\n     *  uint32 internal constant MASK_LIMIT_ORDER = 0x04000000;\\n     * @param _iPerpetualId perpetual id for which we execute\\n     * @param _amountDec18 signed amount to be traded in base currency\\n     * @param _leverageTDR leverage two-digit-integer), e.g. 210 for 2.1x leverage\\n     * @param _flags order-flags, can be left 0 for a market order\\n     * @return true if posting order succeeded\\n     */\\n    function postOrder(uint24 _iPerpetualId, int256 _amountDec18, uint16 _leverageTDR, uint32 _flags) onlyOwner external returns (bool) {\\n         address orderBookAddr = orderBookOfPerpetual[_iPerpetualId];\\n         require(orderBookAddr!=address(0), \\\"order book unknown\\\");\\n        int128 fTradeAmount = _fromDec18(_amountDec18);\\n        if (_flags==0) {\\n             _flags = 0x40000000;//market order\\n        }\\n        IClientOrder.ClientOrder memory order;\\n        order.flags = _flags;\\n        order.iPerpetualId = _iPerpetualId;\\n        order.traderAddr = address(this);\\n        order.fAmount = fTradeAmount;\\n        order.fLimitPrice = fTradeAmount > 0 ? MAX_64x64 : int128(0);\\n        order.leverageTDR = _leverageTDR; // 0 if deposit and trade separate\\n        order.iDeadline = uint32(block.timestamp + 86400 * 3);\\n        order.executionTimestamp = uint32(block.timestamp);\\n\\n        // submit order\\n        try OrderBookContractInterface(orderBookAddr).postOrder(order, bytes(\\\"\\\")) {\\n            emit PerpetualOrderSubmitSuccess(_amountDec18, _leverageTDR);\\n            return true;\\n        } catch Error(string memory reason) {\\n            emit PerpetualOrderSubmitFailed(reason);\\n            return false;\\n        }\\n    }\\n\\n    function transferMarginCollateralTo(uint24 _iPerpetualId) onlyOwner external {\\n        uint8 poolId = uint8(_iPerpetualId/100_000);\\n        address mgnTknAddr = mgnTknAddrOfPool[poolId];\\n        IERC20Upgradeable marginToken = IERC20Upgradeable(mgnTknAddr);\\n        uint256 balance = marginToken.balanceOf(address(this));\\n        // transfer the margin token to the user\\n        marginToken.safeTransfer(msg.sender, balance);\\n        emit MarginTokenSent(_iPerpetualId, msg.sender, balance);\\n    }\\n\\n    /**\\n     * Return margin account information in decimal 18 format\\n     * @param _iPerpetualId id of perpetual \\n     */\\n    function getMarginAccount(uint24 _iPerpetualId) external view returns (D18MarginAccount memory) {\\n        MarginAccount memory acc = PerpetualsContractInterface(perpetualProxy).getMarginAccount(\\n            _iPerpetualId,\\n            address(this)\\n        );\\n        D18MarginAccount memory accD18;\\n        accD18.lockedInValueQCD18 = toDec18(acc.fLockedInValueQC); // unrealized value locked-in when trade occmurs: price * position size\\n        accD18.cashCCD18 = toDec18(acc.fCashCC); // cash in collateral currency (base, quote, or quanto)\\n        accD18.positionSizeBCD18 = toDec18(acc.fPositionBC); // position in base currency (e.g., 1 BTC for BTCUSD)\\n        accD18.positionId = acc.positionId; // unique id for the position (for given trader, and perpetual).\\n        return accD18;\\n    }\\n\\n    /**\\n     * Get maximal trade amount for the contract accounting for its current position\\n     * @param _iPerpetualId id of perpetual\\n     * @param isBuy true if we go long, false if we go short\\n     * @return signed maximal trade size (negative if resulting position is short, positive otherwise)\\n     */\\n    function getMaxTradeAmount(uint24 _iPerpetualId, bool isBuy) external view returns (int256) {\\n        MarginAccount memory acc = PerpetualsContractInterface(perpetualProxy).getMarginAccount(\\n            _iPerpetualId,\\n            address(this)\\n        );\\n        int128 fSize = PerpetualsContractInterface(perpetualProxy).getMaxSignedOpenTradeSizeForPos(\\n            _iPerpetualId,\\n            acc.fPositionBC,\\n            isBuy\\n        );\\n\\n        return toDec18(fSize);\\n    }\\n\\n    /**\\n     * Convert signed decimal-18 number to ABDK-128x128 format\\n     * @param x number decimal-18\\n     * @return ABDK-128x128 number\\n     */\\n    function _fromDec18(int256 x) internal pure returns (int128) {\\n        int256 result = (x * ONE_64x64) / DECIMALS;\\n        require(x >= MIN_64x64 && x <= MAX_64x64, \\\"result out of range\\\");\\n        return int128(result);\\n    }\\n\\n    /**\\n     * Convert ABDK-128x128 format to signed decimal-18 number\\n     * @param x number in ABDK-128x128 format\\n     * @return decimal 18 (signed)\\n     */\\n    function toDec18(int128 x) internal pure returns (int256) {\\n        return (int256(x) * DECIMALS) / ONE_64x64;\\n    }\\n\\n    /**\\n     * Convert signed 256-bit integer number into signed 64.64-bit fixed point\\n     * number.  Revert on overflow.\\n     *\\n     * @param x signed 256-bit integer number\\n     * @return signed 64.64-bit fixed point number\\n     */\\n    function _fromInt(int256 x) internal pure returns (int128) {\\n        require(x >= -0x8000000000000000 && x <= 0x7FFFFFFFFFFFFFFF, \\\"ABDK.fromInt\\\");\\n        return int128(x << 64);\\n    }\\n}\\n\",\"keccak256\":\"0xf9ade1ccf91708af5a63353baa15f5ffce59322a718d7379109696523efe5825\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"notice":"- This contract acts as a trader. The contract is ownable;   Trade executions are permissioned. The margin tokens are required   to be owned by the contract. - D8X Perpetuals use ABDK 128x128 number format. This contract has an interface that uses   a signed decimal-18 convention (decimal number 1 maps to decimal-18 number 1e18). - Ensure the perpetuals-contract is allowed to spend this contracts margin tokens (use approveAmount) - Send orders to order book via postOrder - Check positions using function getMarginAccount","version":1}},"PerpetualsContractInterface":{"abi":[{"inputs":[{"internalType":"uint8","name":"_poolId","type":"uint8"}],"name":"getLiquidityPool","outputs":[{"components":[{"internalType":"bool","name":"isRunning","type":"bool"},{"internalType":"uint8","name":"iPerpetualCount","type":"uint8"},{"internalType":"uint8","name":"id","type":"uint8"},{"internalType":"int32","name":"fCeilPnLShare","type":"int32"},{"internalType":"uint8","name":"marginTokenDecimals","type":"uint8"},{"internalType":"uint16","name":"iTargetPoolSizeUpdateTime","type":"uint16"},{"internalType":"address","name":"marginTokenAddress","type":"address"},{"internalType":"uint64","name":"prevAnchor","type":"uint64"},{"internalType":"int128","name":"fRedemptionRate","type":"int128"},{"internalType":"address","name":"shareTokenAddress","type":"address"},{"internalType":"int128","name":"fPnLparticipantsCashCC","type":"int128"},{"internalType":"int128","name":"fTargetAMMFundSize","type":"int128"},{"internalType":"int128","name":"fDefaultFundCashCC","type":"int128"},{"internalType":"int128","name":"fTargetDFSize","type":"int128"},{"internalType":"int128","name":"fBrokerCollateralLotSize","type":"int128"},{"internalType":"uint128","name":"prevTokenAmount","type":"uint128"},{"internalType":"uint128","name":"nextTokenAmount","type":"uint128"},{"internalType":"uint128","name":"totalSupplyShareToken","type":"uint128"},{"internalType":"int128","name":"fBrokerFundCashCC","type":"int128"}],"internalType":"struct ILiquidityPoolData.LiquidityPoolData","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint24","name":"_perpetualId","type":"uint24"},{"internalType":"address","name":"_traderAddress","type":"address"}],"name":"getMarginAccount","outputs":[{"components":[{"internalType":"int128","name":"fLockedInValueQC","type":"int128"},{"internalType":"int128","name":"fCashCC","type":"int128"},{"internalType":"int128","name":"fPositionBC","type":"int128"},{"internalType":"int128","name":"fUnitAccumulatedFundingStart","type":"int128"},{"internalType":"uint64","name":"iLastOpenTimestamp","type":"uint64"},{"internalType":"uint16","name":"feeTbps","type":"uint16"},{"internalType":"uint16","name":"brokerFeeTbps","type":"uint16"},{"internalType":"bytes16","name":"positionId","type":"bytes16"}],"internalType":"struct MarginAccount","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint24","name":"_perpetualId","type":"uint24"},{"internalType":"int128","name":"_fCurrentTraderPos","type":"int128"},{"internalType":"bool","name":"_isBuy","type":"bool"}],"name":"getMaxSignedOpenTradeSizeForPos","outputs":[{"internalType":"int128","name":"","type":"int128"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint24","name":"_perpetualId","type":"uint24"}],"name":"getOrderBookAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"getLiquidityPool(uint8)":"30af7c72","getMarginAccount(uint24,address)":"7aa744d6","getMaxSignedOpenTradeSizeForPos(uint24,int128,bool)":"fbc3ac3c","getOrderBookAddress(uint24)":"1e780ba4"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_poolId\",\"type\":\"uint8\"}],\"name\":\"getLiquidityPool\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"isRunning\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"iPerpetualCount\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"id\",\"type\":\"uint8\"},{\"internalType\":\"int32\",\"name\":\"fCeilPnLShare\",\"type\":\"int32\"},{\"internalType\":\"uint8\",\"name\":\"marginTokenDecimals\",\"type\":\"uint8\"},{\"internalType\":\"uint16\",\"name\":\"iTargetPoolSizeUpdateTime\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"marginTokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"prevAnchor\",\"type\":\"uint64\"},{\"internalType\":\"int128\",\"name\":\"fRedemptionRate\",\"type\":\"int128\"},{\"internalType\":\"address\",\"name\":\"shareTokenAddress\",\"type\":\"address\"},{\"internalType\":\"int128\",\"name\":\"fPnLparticipantsCashCC\",\"type\":\"int128\"},{\"internalType\":\"int128\",\"name\":\"fTargetAMMFundSize\",\"type\":\"int128\"},{\"internalType\":\"int128\",\"name\":\"fDefaultFundCashCC\",\"type\":\"int128\"},{\"internalType\":\"int128\",\"name\":\"fTargetDFSize\",\"type\":\"int128\"},{\"internalType\":\"int128\",\"name\":\"fBrokerCollateralLotSize\",\"type\":\"int128\"},{\"internalType\":\"uint128\",\"name\":\"prevTokenAmount\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"nextTokenAmount\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"totalSupplyShareToken\",\"type\":\"uint128\"},{\"internalType\":\"int128\",\"name\":\"fBrokerFundCashCC\",\"type\":\"int128\"}],\"internalType\":\"struct ILiquidityPoolData.LiquidityPoolData\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint24\",\"name\":\"_perpetualId\",\"type\":\"uint24\"},{\"internalType\":\"address\",\"name\":\"_traderAddress\",\"type\":\"address\"}],\"name\":\"getMarginAccount\",\"outputs\":[{\"components\":[{\"internalType\":\"int128\",\"name\":\"fLockedInValueQC\",\"type\":\"int128\"},{\"internalType\":\"int128\",\"name\":\"fCashCC\",\"type\":\"int128\"},{\"internalType\":\"int128\",\"name\":\"fPositionBC\",\"type\":\"int128\"},{\"internalType\":\"int128\",\"name\":\"fUnitAccumulatedFundingStart\",\"type\":\"int128\"},{\"internalType\":\"uint64\",\"name\":\"iLastOpenTimestamp\",\"type\":\"uint64\"},{\"internalType\":\"uint16\",\"name\":\"feeTbps\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"brokerFeeTbps\",\"type\":\"uint16\"},{\"internalType\":\"bytes16\",\"name\":\"positionId\",\"type\":\"bytes16\"}],\"internalType\":\"struct MarginAccount\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint24\",\"name\":\"_perpetualId\",\"type\":\"uint24\"},{\"internalType\":\"int128\",\"name\":\"_fCurrentTraderPos\",\"type\":\"int128\"},{\"internalType\":\"bool\",\"name\":\"_isBuy\",\"type\":\"bool\"}],\"name\":\"getMaxSignedOpenTradeSizeForPos\",\"outputs\":[{\"internalType\":\"int128\",\"name\":\"\",\"type\":\"int128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint24\",\"name\":\"_perpetualId\",\"type\":\"uint24\"}],\"name\":\"getOrderBookAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/OnChainTrader.sol\":\"PerpetualsContractInterface\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":512},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20Upgradeable {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x6777f3fccb5dab95a9088ef62c41bee0198fd92e50d7c94f0e3733788af4079e\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20Upgradeable.sol\\\";\\nimport \\\"../../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20Upgradeable {\\n    using AddressUpgradeable for address;\\n\\n    function safeTransfer(\\n        IERC20Upgradeable token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(\\n        IERC20Upgradeable token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(\\n        IERC20Upgradeable token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(\\n        IERC20Upgradeable token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(\\n        IERC20Upgradeable token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            uint256 newAllowance = oldAllowance - value;\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20Upgradeable token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) {\\n            // Return data is optional\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x3e26a49d2fa5ef8338b8a9467c91e54f417cb07e849b1cc0f4ebc4d2a147938e\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x55cf2bd9fc76704ddcdc19834cd288b7de00fc0f298a40ea16a954ae8991db2d\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"./extensions/IERC20Metadata.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20, IERC20Metadata {\\n    mapping(address => uint256) private _balances;\\n\\n    mapping(address => mapping(address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * The default value of {decimals} is 18. To select a different value for\\n     * {decimals} you should overload it.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\\n     * overridden;\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual override returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) public virtual override returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, amount);\\n        _transfer(from, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, _allowances[owner][spender] + addedValue);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        uint256 currentAllowance = _allowances[owner][spender];\\n        require(currentAllowance >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\n        unchecked {\\n            _approve(owner, spender, currentAllowance - subtractedValue);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves `amount` of tokens from `sender` to `recipient`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     */\\n    function _transfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {\\n        require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, amount);\\n\\n        uint256 fromBalance = _balances[from];\\n        require(fromBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        unchecked {\\n            _balances[from] = fromBalance - amount;\\n        }\\n        _balances[to] += amount;\\n\\n        emit Transfer(from, to, amount);\\n\\n        _afterTokenTransfer(from, to, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply += amount;\\n        _balances[account] += amount;\\n        emit Transfer(address(0), account, amount);\\n\\n        _afterTokenTransfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        uint256 accountBalance = _balances[account];\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[account] = accountBalance - amount;\\n        }\\n        _totalSupply -= amount;\\n\\n        emit Transfer(account, address(0), amount);\\n\\n        _afterTokenTransfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Spend `amount` form the allowance of `owner` toward `spender`.\\n     *\\n     * Does not update the allowance amount in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Might emit an {Approval} event.\\n     */\\n    function _spendAllowance(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            require(currentAllowance >= amount, \\\"ERC20: insufficient allowance\\\");\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - amount);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * has been transferred to `to`.\\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n}\\n\",\"keccak256\":\"0xdadd41acb749920eccf40aeaa8d291adf9751399a7343561bad13e7a8d99be0b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/IClientOrder.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.19;\\n\\n/**\\n * @title Trader/Broker facing order struct\\n * @notice this order struct is sent to the limit order book and converted into an IPerpetualOrder\\n */\\ninterface IClientOrder {\\n    struct ClientOrder {\\n        uint24 iPerpetualId; // unique id of the perpetual\\n        int128 fLimitPrice; // order will not execute if realized price is above (buy) or below (sell) this price\\n        uint16 leverageTDR; // leverage, set to 0 if deposit margin and trade separate; format: two-digit integer (e.g., 12.34 -> 1234)\\n        uint32 executionTimestamp; // the order will not be executed before this timestamp, allows TWAP orders\\n        uint32 flags; // Order-flags are specified in OrderFlags.sol\\n        uint32 iDeadline; // order will not be executed after this deadline\\n        address brokerAddr; // can be empty, address of the broker\\n        int128 fTriggerPrice; // trigger price for stop-orders|0. Order can be executed if the mark price is below this price (sell order) or above (buy)\\n        int128 fAmount; // signed amount of base-currency. Will be rounded to lot size\\n        bytes32 parentChildDigest1; // see notice in LimitOrderBook.sol\\n        address traderAddr; // address of the trader\\n        bytes32 parentChildDigest2; // see notice in LimitOrderBook.sol\\n        uint16 brokerFeeTbps; // broker fee in tenth of a basis point\\n        bytes brokerSignature; // signature, can be empty if no brokerAddr provided\\n        //address executorAddr; <- will be set by LimitOrderBook\\n        //uint64 submittedBlock <- will be set by LimitOrderBook\\n    }\\n}\\n\",\"keccak256\":\"0xfe89524f4083b40b5c5ba58d3da8c14f13050cd776ec1032c59f969614fff16d\",\"license\":\"MIT\"},\"contracts/ILiquidityPoolData.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.19;\\n\\ninterface ILiquidityPoolData {\\n\\n    struct LiquidityPoolData {\\n            bool isRunning; // state\\n            uint8 iPerpetualCount; // state\\n            uint8 id; // parameter: index, starts from 1\\n            int32 fCeilPnLShare; // parameter: cap on the share of PnL allocated to liquidity providers\\n            uint8 marginTokenDecimals; // parameter: decimals of margin token, inferred from token contract\\n            uint16 iTargetPoolSizeUpdateTime; //parameter: timestamp in seconds. How often we update the pool's target size\\n            address marginTokenAddress; //parameter: address of the margin token\\n            // -----\\n            uint64 prevAnchor; // state: keep track of timestamp since last withdrawal was initiated\\n            int128 fRedemptionRate; // state: used for settlement in case of AMM default\\n            address shareTokenAddress; // parameter\\n            // -----\\n            int128 fPnLparticipantsCashCC; // state: addLiquidity/withdrawLiquidity + profit/loss - rebalance\\n            int128 fTargetAMMFundSize; // state: target liquidity for all perpetuals in pool (sum)\\n            // -----\\n            int128 fDefaultFundCashCC; // state: profit/loss\\n            int128 fTargetDFSize; // state: target default fund size for all perpetuals in pool\\n            // -----\\n            int128 fBrokerCollateralLotSize; // param:how much collateral do brokers deposit when providing \\\"1 lot\\\" (not trading lot)\\n            uint128 prevTokenAmount; // state\\n            // -----\\n            uint128 nextTokenAmount; // state\\n            uint128 totalSupplyShareToken; // state\\n            // -----\\n            int128 fBrokerFundCashCC; // state: amount of cash in broker fund\\n    }\\n\\n}\",\"keccak256\":\"0x2d3495679371a8c8d0c6f676ddf69ccae8d11f01022d4f3067dc0e092b03d2f7\",\"license\":\"MIT\"},\"contracts/OnChainTrader.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.19;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/ERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\\\";\\n\\nimport \\\"./IClientOrder.sol\\\";\\nimport \\\"./ILiquidityPoolData.sol\\\";\\n\\n/**\\n * @title Example contract to interact with D8X perpetuals on-chain\\n * @notice\\n * - This contract acts as a trader. The contract is ownable;\\n *   Trade executions are permissioned. The margin tokens are required\\n *   to be owned by the contract.\\n * - D8X Perpetuals use ABDK 128x128 number format. This contract has an interface that uses\\n *   a signed decimal-18 convention (decimal number 1 maps to decimal-18 number 1e18).\\n * - Ensure the perpetuals-contract is allowed to spend this contracts margin tokens (use approveAmount)\\n * - Send orders to order book via postOrder\\n * - Check positions using function getMarginAccount\\n */\\n\\n\\ninterface OrderBookContractInterface {\\n    function postOrder(IClientOrder.ClientOrder calldata _order, bytes calldata _signature)\\n        external;\\n}\\n\\ninterface PerpetualsContractInterface {\\n    \\n    function getMarginAccount(uint24 _perpetualId, address _traderAddress)\\n        external\\n        view\\n        returns (MarginAccount memory);\\n\\n    function getMaxSignedOpenTradeSizeForPos(\\n        uint24 _perpetualId,\\n        int128 _fCurrentTraderPos,\\n        bool _isBuy\\n    ) external view returns (int128);\\n\\n    function getOrderBookAddress(uint24 _perpetualId) external view returns (address);\\n    function getLiquidityPool(uint8 _poolId)\\n        external\\n        view\\n        returns (ILiquidityPoolData.LiquidityPoolData memory);\\n}\\n\\n/**\\n * @notice  D8X Perpetual Data structure to store user margin information.\\n */\\nstruct MarginAccount {\\n    int128 fLockedInValueQC; // unrealized value locked-in when trade occurs in\\n    int128 fCashCC; // cash in collateral currency (base, quote, or quanto)\\n    int128 fPositionBC; // position in base currency (e.g., 1 BTC for BTCUSD)\\n    int128 fUnitAccumulatedFundingStart; // accumulated funding rate\\n    uint64 iLastOpenTimestamp; // timestamp in seconds when the position was last opened/increased\\n    uint16 feeTbps; // exchange fee in tenth of a basis point\\n    uint16 brokerFeeTbps; // broker fee in tenth of a basis point\\n    bytes16 positionId; // unique id for the position (for given trader, and perpetual). Current position, zero otherwise.\\n}\\n\\n/**\\n * @notice  Data structure to return simplified and relevant margin information.\\n */\\nstruct D18MarginAccount {\\n    int256 lockedInValueQCD18; // unrealized value locked-in when trade occurs in\\n    int256 cashCCD18; // cash in collateral currency (base, quote, or quanto)\\n    int256 positionSizeBCD18; // position in base currency (e.g., 1 BTC for BTCUSD)\\n    bytes16 positionId; // unique id for the position (for given trader, and perpetual). Current position, zero otherwise.\\n}\\n\\ncontract OnChainTrader is Ownable {\\n    using SafeERC20Upgradeable for IERC20Upgradeable;\\n\\n    event PerpetualOrderSubmitFailed(string reason);\\n    event PerpetualOrderSubmitSuccess(int256 amountDec18, uint16 leverageTDR);\\n    event PerpetualAdded(uint24 perpetualId, address lobAddr, address mgnTknAddrOfPool);\\n    event MarginTokenSent(uint24 perpetualId, address to, uint256 amountDecN);\\n    address public immutable perpetualProxy;\\n    int256 private constant DECIMALS = 10**18;\\n    int128 private constant ONE_64x64 = 2**64;\\n    int128 private constant MIN_64x64 = -0x80000000000000000000000000000000;\\n    int128 private constant MAX_64x64 = 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF;\\n    int128 private constant TEN_64x64 = 0xa0000000000000000;\\n\\n    mapping (uint24 => address) public orderBookOfPerpetual;//limit order book addr\\n    \\n    // each perpetual is in a pool. Perpetuals in a pool share the margin token\\n    mapping (uint8 => address) public mgnTknAddrOfPool;\\n\\n    constructor(\\n        address _perpetualProxy\\n    ) Ownable() {\\n        perpetualProxy = _perpetualProxy;\\n    }\\n\\n    /**\\n     * Anyone add a perpetual. Needs to be set once per perpetual.\\n     * The function sets the order book address for an existing\\n     * perpetual-id and ensures the margin token address is stored. \\n     * @param _iPerpetualId id of the perpetual to be traded\\n     */\\n    function addPerpetual(uint24 _iPerpetualId) external {\\n        // set order book address\\n        address lobAddr = PerpetualsContractInterface(perpetualProxy).getOrderBookAddress(_iPerpetualId);\\n        orderBookOfPerpetual[_iPerpetualId] = lobAddr;\\n        // register margin token\\n        uint8 poolId = uint8(_iPerpetualId/100_000);\\n        if(mgnTknAddrOfPool[poolId] == address(0)) {\\n            // set margin token address for pool\\n            ILiquidityPoolData.LiquidityPoolData memory lp = \\n                PerpetualsContractInterface(perpetualProxy).getLiquidityPool(poolId);\\n            mgnTknAddrOfPool[poolId] = lp.marginTokenAddress;\\n        }\\n        emit PerpetualAdded(_iPerpetualId, lobAddr, mgnTknAddrOfPool[poolId]);\\n    }\\n\\n    /**\\n     * Approve the margin-token to be spent by perpetuals contract.\\n     * Required to trade.\\n     * @param _amount spend amount\\n     */\\n    function approveAmountForPerpetualMgnTkn(uint256 _amount, uint24 _iPerpetualId) external {\\n        uint8 poolId = uint8(_iPerpetualId/100_000);\\n        address mgnTkn = mgnTknAddrOfPool[poolId];\\n        require(mgnTkn!=address(0), \\\"set ob addrs\\\");\\n        IERC20(mgnTkn).approve(perpetualProxy, _amount);\\n    }\\n\\n    /**\\n     * Post an order to the order book. Order will be executed by\\n     * external \\\"executors\\\".\\n     * * Available order flags:\\n     *  uint32 internal constant MASK_CLOSE_ONLY = 0x80000000;\\n     *  uint32 internal constant MASK_MARKET_ORDER = 0x40000000;\\n     *  uint32 internal constant MASK_STOP_ORDER = 0x20000000;\\n     *  uint32 internal constant MASK_FILL_OR_KILL = 0x10000000;\\n     *  uint32 internal constant MASK_KEEP_POS_LEVERAGE = 0x08000000;\\n     *  uint32 internal constant MASK_LIMIT_ORDER = 0x04000000;\\n     * @param _iPerpetualId perpetual id for which we execute\\n     * @param _amountDec18 signed amount to be traded in base currency\\n     * @param _leverageTDR leverage two-digit-integer), e.g. 210 for 2.1x leverage\\n     * @param _flags order-flags, can be left 0 for a market order\\n     * @return true if posting order succeeded\\n     */\\n    function postOrder(uint24 _iPerpetualId, int256 _amountDec18, uint16 _leverageTDR, uint32 _flags) onlyOwner external returns (bool) {\\n         address orderBookAddr = orderBookOfPerpetual[_iPerpetualId];\\n         require(orderBookAddr!=address(0), \\\"order book unknown\\\");\\n        int128 fTradeAmount = _fromDec18(_amountDec18);\\n        if (_flags==0) {\\n             _flags = 0x40000000;//market order\\n        }\\n        IClientOrder.ClientOrder memory order;\\n        order.flags = _flags;\\n        order.iPerpetualId = _iPerpetualId;\\n        order.traderAddr = address(this);\\n        order.fAmount = fTradeAmount;\\n        order.fLimitPrice = fTradeAmount > 0 ? MAX_64x64 : int128(0);\\n        order.leverageTDR = _leverageTDR; // 0 if deposit and trade separate\\n        order.iDeadline = uint32(block.timestamp + 86400 * 3);\\n        order.executionTimestamp = uint32(block.timestamp);\\n\\n        // submit order\\n        try OrderBookContractInterface(orderBookAddr).postOrder(order, bytes(\\\"\\\")) {\\n            emit PerpetualOrderSubmitSuccess(_amountDec18, _leverageTDR);\\n            return true;\\n        } catch Error(string memory reason) {\\n            emit PerpetualOrderSubmitFailed(reason);\\n            return false;\\n        }\\n    }\\n\\n    function transferMarginCollateralTo(uint24 _iPerpetualId) onlyOwner external {\\n        uint8 poolId = uint8(_iPerpetualId/100_000);\\n        address mgnTknAddr = mgnTknAddrOfPool[poolId];\\n        IERC20Upgradeable marginToken = IERC20Upgradeable(mgnTknAddr);\\n        uint256 balance = marginToken.balanceOf(address(this));\\n        // transfer the margin token to the user\\n        marginToken.safeTransfer(msg.sender, balance);\\n        emit MarginTokenSent(_iPerpetualId, msg.sender, balance);\\n    }\\n\\n    /**\\n     * Return margin account information in decimal 18 format\\n     * @param _iPerpetualId id of perpetual \\n     */\\n    function getMarginAccount(uint24 _iPerpetualId) external view returns (D18MarginAccount memory) {\\n        MarginAccount memory acc = PerpetualsContractInterface(perpetualProxy).getMarginAccount(\\n            _iPerpetualId,\\n            address(this)\\n        );\\n        D18MarginAccount memory accD18;\\n        accD18.lockedInValueQCD18 = toDec18(acc.fLockedInValueQC); // unrealized value locked-in when trade occmurs: price * position size\\n        accD18.cashCCD18 = toDec18(acc.fCashCC); // cash in collateral currency (base, quote, or quanto)\\n        accD18.positionSizeBCD18 = toDec18(acc.fPositionBC); // position in base currency (e.g., 1 BTC for BTCUSD)\\n        accD18.positionId = acc.positionId; // unique id for the position (for given trader, and perpetual).\\n        return accD18;\\n    }\\n\\n    /**\\n     * Get maximal trade amount for the contract accounting for its current position\\n     * @param _iPerpetualId id of perpetual\\n     * @param isBuy true if we go long, false if we go short\\n     * @return signed maximal trade size (negative if resulting position is short, positive otherwise)\\n     */\\n    function getMaxTradeAmount(uint24 _iPerpetualId, bool isBuy) external view returns (int256) {\\n        MarginAccount memory acc = PerpetualsContractInterface(perpetualProxy).getMarginAccount(\\n            _iPerpetualId,\\n            address(this)\\n        );\\n        int128 fSize = PerpetualsContractInterface(perpetualProxy).getMaxSignedOpenTradeSizeForPos(\\n            _iPerpetualId,\\n            acc.fPositionBC,\\n            isBuy\\n        );\\n\\n        return toDec18(fSize);\\n    }\\n\\n    /**\\n     * Convert signed decimal-18 number to ABDK-128x128 format\\n     * @param x number decimal-18\\n     * @return ABDK-128x128 number\\n     */\\n    function _fromDec18(int256 x) internal pure returns (int128) {\\n        int256 result = (x * ONE_64x64) / DECIMALS;\\n        require(x >= MIN_64x64 && x <= MAX_64x64, \\\"result out of range\\\");\\n        return int128(result);\\n    }\\n\\n    /**\\n     * Convert ABDK-128x128 format to signed decimal-18 number\\n     * @param x number in ABDK-128x128 format\\n     * @return decimal 18 (signed)\\n     */\\n    function toDec18(int128 x) internal pure returns (int256) {\\n        return (int256(x) * DECIMALS) / ONE_64x64;\\n    }\\n\\n    /**\\n     * Convert signed 256-bit integer number into signed 64.64-bit fixed point\\n     * number.  Revert on overflow.\\n     *\\n     * @param x signed 256-bit integer number\\n     * @return signed 64.64-bit fixed point number\\n     */\\n    function _fromInt(int256 x) internal pure returns (int128) {\\n        require(x >= -0x8000000000000000 && x <= 0x7FFFFFFFFFFFFFFF, \\\"ABDK.fromInt\\\");\\n        return int128(x << 64);\\n    }\\n}\\n\",\"keccak256\":\"0xf9ade1ccf91708af5a63353baa15f5ffce59322a718d7379109696523efe5825\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}